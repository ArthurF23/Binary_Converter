void fn00411005(word32 eax, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] Stack +0000:[0..31]
// LiveOut: esp
// Trashed: SCZO eax esp Top
// Preserved: ecx
fn00411005_entry:
l00411005:
l0041D0B0:
	word32 ecx_9 = fp - eax
	word32 ecx_14 = ecx_9 & ~(0x00000000 - (ecx_9 <u 0x00000000))
	word32 eax_16 = fp - 4 & 0xFFFFF000
l0041D0C4:
	branch ecx_14 <u eax_16 l0041D0D4
l0041D0D4:
	eax_16 = eax_16 - 0x00001000
l0041D0C9:
	Mem35[ecx_14:word32] = dwArg00
	return
fn00411005_exit:


word32 fn0041100F(word32 ecx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp
// Trashed: SCZO eax ebp ebx ecx edi edx esi Top
// Preserved: esp
fn0041100F_entry:
l0041100F:
l0041100F_thunk_fn004165E0:
	return fn004165E0(ecx, es, ds)
fn0041100F_exit:


void fn00411014(word32 edx, word32 ebx, word32 esi, word32 edi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ebx:[0..31] edi:[0..31] edx:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO eax ebp ebx ecx edx esi Top
// Preserved: esp
fn00411014_entry:
l00411014:
l00411014_thunk_fn0041D990:
	fn0041D990(edx, ebx, esi, edi, es, ds)
	return
fn00411014_exit:


word32 fn00411019(void * ptrArg04, void * ptrArg08, size_t tArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: eax
// Trashed: eax Top
// Preserved: esp
fn00411019_entry:
l00411019:
	return memcmp(ptrArg04, ptrArg08, tArg0C)
fn00411019_exit:


void fn0041102D()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: esp
fn0041102D_entry:
l0041102D:
	call cexit (retsize: 4;)
	return
fn0041102D_exit:


byte fn0041103C(word32 ecx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn0041103C_entry:
l0041103C:
l00417A40:
	word32 edi_22 = fp - 0x000000D0
	word32 ecx_23 = 0x00000033
l00417A5D:
	branch ecx_23 == 0x00000000 l00417A5F
l00417A5F:
	word32 edx_90
	fn00411460(0x0042C02D, out edx_90)
	byte al_40 = Mem31[ecx + 0x00000004:byte]
	fn00411488(es, ds, dwLoc08)
	return al_40
fn0041103C_exit:
l00417A5D_1:
	Mem66[edi_22:word32] = 0xCCCCCCCC
	edi_22 = edi_22 + 0x00000004
	ecx_23 = ecx_23 - 0x00000001


void fn00411041(word32 ecx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn00411041_entry:
l00411041:
l00411041_thunk_fn0041D760:
	fn0041D760(ecx, dwArg04)
	return
fn00411041_exit:


void fn00411046(word32 ecx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00411046_entry:
l00411046:
l004134D0:
	word32 edi_22 = fp - 0x000000D0
	word32 ecx_23 = 0x00000033
l004134ED:
	branch ecx_23 == 0x00000000 l004134EF
l004134EF:
	word32 edx_112
	fn00411460(0x0042C018, out edx_112)
	fn0041159B(es, ds)
	fn00411258(ecx, es, ds)
	fn00411488(es, ds, dwLoc08)
	return
fn00411046_exit:
l004134ED_1:
	Mem87[edi_22:word32] = 0xCCCCCCCC
	edi_22 = edi_22 + 0x00000004
	ecx_23 = ecx_23 - 0x00000001


word32 fn0041104B(selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut: ebp esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn0041104B_entry:
l0041104B:
l00419A50:
	word32 ebp_113 = fp - 4
	word32 edi_156 = fp - 0x000000F4
	word32 ecx_159 = 0x0000003C
l00419A6D:
	branch ecx_159 == 0x00000000 l00419A6F
l00419A6F:
	word32 edx_182
	fn00411460(0x0042C02B, out edx_182)
	word32 edx_48
	word32 eax_46 = fn00411640(es, ds, out edx_48)
	word32 esp_125 = fp - 0x00000100
	branch Mem54[eax_46 + 0x00000014:word32] <=u dwArg04 l00419A95
l00419A95:
	branch Mem54[eax_46 + 0x00000018:word32] != dwArg04 l00419AA2
l00419AA2:
	branch Mem54[eax_46 + 0x00000018:word32] >=u dwArg04 l00419AE0
l00419AE0:
	branch dwArg04 >=u 0x00000010 l00419AFD
l00419AE6:
	branch (word32) SLICE((uint32) (uint8) fn004115A5(eax_46, es, ds), byte, 0) == 0x00000000 l00419AFD
l00419AF5:
	ebp_113 = fn004114E7(es, ds)
	esp_125 = <invalid>
l00419AAD:
	ebp_113 = fn00411226(es, ds)
	Mem128[Mem110[ebp_113 - 0x00000014:word32] + 0x00000014:word32] = Mem110[ebp_113 - 0x00000020:word32]
	word32 esp_119 = <invalid>
	esp_125 = esp_119 + 0x00000008
l00419AA0:
l00419A93:
l00419AFD:
	fn00411488(es, ds, Mem130[esp_125 + 0x000000F8:word32])
	return Mem130[ebp_113:word32]
fn0041104B_exit:
l00419A6D_1:
	Mem157[edi_156:word32] = 0xCCCCCCCC
	edi_156 = edi_156 + 0x00000004
	ecx_159 = ecx_159 - 0x00000001


word32 fn0041105A(selector es, selector ds, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax ebp
// Trashed: SCZO eax ebp ebx ecx edi edx esi Top
// Preserved: esp
fn0041105A_entry:
l0041105A:
l0041105A_thunk_fn00417F70:
	word32 ebp_11
	word32 eax_10 = fn00417F70(es, ds, out ebp_11)
	ebpOut = ebp_11
	return eax_10
fn0041105A_exit:


byte fn00411064()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: al
// Trashed: al Top
// Preserved: esp
fn00411064_entry:
l00411064:
	return (uint8) (1) uncaught_exception()
fn00411064_exit:


word32 fn00411069()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax
// Trashed: eax Top
// Preserved: esp
fn00411069_entry:
l00411069:
l0041ED50:
	return Mem0[0x0042972C:word32]
fn00411069_exit:


word32 fn00411082(word32 ecx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn00411082_entry:
l00411082:
l00416980:
	word32 edi_126 = fp - 0x000000DC
	word32 ecx_129 = 0x00000033
l004169AB:
	branch ecx_129 == 0x00000000 l004169AD
l004169AD:
	Mem47[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_147
	fn00411460(0x0042C02B, out edx_147)
	word32 ebp_63 = fn0041100F(ecx, es, ds)
	Mem74[ebp_63 - 0x00000004:word32] = 0x00000000
	fn004112F8(es, ds)
	word32 ebp_89 = fn0041145B(es, ds, Mem74[ebp_63 + 0x00000008:word32])
	Mem102[ebp_89 - 0x00000004:word32] = 0xFFFFFFFF
	Mem105[fs:0x00000000:word32] = Mem102[ebp_89 - 0x0000000C:word32]
	word32 esp_95 = <invalid>
	fn00411488(es, ds, Mem105[esp_95 + 0x000000E8:word32])
	return Mem105[ebp_89:word32]
fn00411082_exit:
l004169AB_1:
	Mem127[edi_126:word32] = 0xCCCCCCCC
	edi_126 = edi_126 + 0x00000004
	ecx_129 = ecx_129 - 0x00000001


void fn00411087(selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00411087_entry:
l00411087:
l0041AF60:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_27 = fp - 0x000000D0
	word32 ecx_28 = 0x00000030
l0041AF8A:
	branch ecx_28 == 0x00000000 l0041AF8C
l0041AF8C:
	Mem42[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_120
	fn00411460(0x0042C017, out edx_120)
	fn00411730(dwArg04, dwArg08, dwArg0C)
	Mem62[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0xFFFFFFFF)
	return
fn00411087_exit:
l0041AF8A_1:
	Mem89[edi_27:word32] = 0xCCCCCCCC
	edi_27 = edi_27 + 0x00000004
	ecx_28 = ecx_28 - 0x00000001


word32 fn0041108C(word32 ecx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn0041108C_entry:
l0041108C:
l004191B0:
	word32 edi_106 = fp - 0x000000DC
	word32 ecx_109 = 0x00000036
l004191CD:
	branch ecx_109 == 0x00000000 l004191CF
l004191CF:
	word32 edx_139
	fn00411460(0x0042C02B, out edx_139)
	word32 dwLoc18_123 = ecx + 0x00000004
	branch (word32) SLICE((uint32) (uint8) fn004115A5(ecx, es, ds), byte, 0) == 0x00000000 l00419207
l004191F5:
	dwLoc18_123 = fn004115F5(es, ds)
l00419207:
	fn00411488(es, ds, dwLoc08)
	return dwLoc18_123
fn0041108C_exit:
l004191CD_1:
	Mem107[edi_106:word32] = 0xCCCCCCCC
	edi_106 = edi_106 + 0x00000004
	ecx_109 = ecx_109 - 0x00000001


void fn00411096(word32 ecx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO eax ebx ecx edi edx esi Top
// Preserved: ebp esp
fn00411096_entry:
l00411096:
l00417460:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_103 = fp - 0x000000E4
	word32 ecx_150 = 0x00000035
l0041748B:
	branch ecx_150 == 0x00000000 l0041748D
l0041748D:
	Mem47[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_178
	fn00411460(0x0042C02D, out edx_178)
	word32 ecx_57 = Mem48[ecx:word32]
	word32 eax_64 = rdbuf(ecx_57 + Mem58[Mem58[ecx_57:word32] + 0x00000004:word32])
	fn00411488(es, ds, dwLocF8)
	word32 esp_104 = fp - 0x000000F4
	branch eax_64 == 0x00000000 l00417528
l004174DB:
	word32 ecx_81 = Mem58[ecx:word32]
	word32 eax_88 = rdbuf(ecx_81 + Mem82[Mem82[ecx_81:word32] + 0x00000004:word32])
	fn00411488(es, ds, dwLocF8)
	word32 edx_98 = Mem96[eax_88:word32]
	call Mem96[edx_98 + 0x00000008:word32] (retsize: 4;)
		uses: ecx:eax_88,edx:edx_98,Stack +0000:dwLocF8,Stack +0014:eax_88
		defs: esp:esp_104
	fn00411488(es, ds, Mem96[esp_104 + -4:word32])
l00417528:
	Mem121[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, Mem121[esp_104 + 0x000000EC:word32])
	return
fn00411096_exit:
l0041748B_1:
	Mem148[edi_103:word32] = 0xCCCCCCCC
	edi_103 = edi_103 + 0x00000004
	ecx_150 = ecx_150 - 0x00000001


word32 fn004110A0(DWORD tArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut: eax
// Trashed: eax Top
// Preserved: esp
fn004110A0_entry:
l004110A0:
	return IsProcessorFeaturePresent(tArg04)
fn004110A0_exit:


void fn004110AF(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn004110AF_entry:
l004110AF:
l00415CC0:
	word32 edi_19 = fp - 0x000000C4
	word32 ecx_20 = 0x00000030
l00415CDC:
	branch ecx_20 == 0x00000000 l00415CDE
l00415CDE:
	word32 edx_77
	fn00411460(0x0042C01A, out edx_77)
	fn00411488(es, ds, dwLoc08)
	return
fn004110AF_exit:
l00415CDC_1:
	Mem58[edi_19:word32] = 0xCCCCCCCC
	edi_19 = edi_19 + 0x00000004
	ecx_20 = ecx_20 - 0x00000001


void fn004110B4()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: esp
fn004110B4_entry:
l004110B4:
	call _vcrt_GetModuleFileNameW (retsize: 4;)
	return
fn004110B4_exit:


void fn004110B9()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: esp
fn004110B9_entry:
l004110B9:
	call initterm_e (retsize: 4;)
	return
fn004110B9_exit:


word32 fn004110C3(char * ptrArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut: eax
// Trashed: eax Top
// Preserved: esp
fn004110C3_entry:
l004110C3:
	return strlen(ptrArg04)
fn004110C3_exit:


void fn004110C8(word32 ecx, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ebx ecx edi edx esi Top
// Preserved: ebp esp
fn004110C8_entry:
l004110C8:
l00416C50:
	word32 edi_133 = fp - 0x000000D8
	word32 ecx_134 = 0x00000035
l00416C6D:
	branch ecx_134 == 0x00000000 l00416C6F
l00416C6F:
	word32 edx_157
	fn00411460(0x0042C02C, out edx_157)
	Mem41[ecx:word32] = dwArg04
	word32 ecx_43 = Mem41[ecx:word32]
	word32 eax_50 = rdbuf(ecx_43 + Mem44[Mem44[ecx_43:word32] + 0x00000004:word32])
	fn00411488(es, ds, ecx)
	word32 esp_107 = fp - 0x000000E4
	branch eax_50 == 0x00000000 l00416D01
l00416CB4:
	word32 ecx_68 = Mem44[ecx:word32]
	word32 eax_75 = rdbuf(ecx_68 + Mem69[Mem69[ecx_68:word32] + 0x00000004:word32])
	fn00411488(es, ds, ecx)
	word32 edx_85 = Mem83[eax_75:word32]
	call Mem83[edx_85 + 0x00000004:word32] (retsize: 4;)
		uses: ecx:eax_75,edx:edx_85,Stack +0010:eax_75,Stack +00EC:dwArg04
		defs: esp:esp_91
	fn00411488(es, ds, Mem83[esp_107 + -4:word32])
l00416D01:
	fn00411488(es, ds, Mem105[esp_107 + 0x000000DC:word32])
	return
fn004110C8_exit:
l00416C6D_1:
	Mem132[edi_133:word32] = 0xCCCCCCCC
	edi_133 = edi_133 + 0x00000004
	ecx_134 = ecx_134 - 0x00000001


word32 fn004110D2(selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut: ebp esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn004110D2_entry:
l004110D2:
l00417880:
	word32 edi_22 = fp - 0x000000D0
	word32 ecx_23 = 0x00000033
l0041789D:
	branch ecx_23 == 0x00000000 l0041789F
l0041789F:
	word32 edx_101
	fn00411460(0x0042C02B, out edx_101)
	word32 ebp_50 = fn0041145B(es, ds, dwArg04)
	word32 esp_56 = <invalid>
	fn00411488(es, ds, Mem41[esp_56 + 0x000000D8:word32])
	return Mem41[ebp_50:word32]
fn004110D2_exit:
l0041789D_1:
	Mem82[edi_22:word32] = 0xCCCCCCCC
	edi_22 = edi_22 + 0x00000004
	ecx_23 = ecx_23 - 0x00000001


void fn004110DC(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx:[0..31]
// LiveOut:
// Trashed: SCZO eax edx Top
// Preserved: ebp ecx esp
fn004110DC_entry:
l004110DC:
l0041D6E0:
	fn00411410(ecx, 0x00426594)
	Mem22[ecx:word32] = 0x00426588
	return
fn004110DC_exit:


void fn004110E1(selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn004110E1_entry:
l004110E1:
l00418820:
	word32 edi_102 = fp - 0x000000E8
	word32 ecx_105 = 0x00000039
l0041883D:
	branch ecx_105 == 0x00000000 l0041883F
l0041883F:
	word32 edx_131
	fn00411460(0x0042C02B, out edx_131)
	word32 edx_132
	word32 eax_46 = fn00411640(es, ds, out edx_132)
	Mem58[eax_46 + 0x00000014:word32] = dwArg04
	fn0041154B(es, ds, fn0041123A(eax_46, es, ds) + dwArg04, fp - 0x000000E1)
	fn00411488(es, ds, dwLoc08)
	return
fn004110E1_exit:
l0041883D_1:
	Mem103[edi_102:word32] = 0xCCCCCCCC
	edi_102 = edi_102 + 0x00000004
	ecx_105 = ecx_105 - 0x00000001


void fn004110F0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: esp
fn004110F0_entry:
l004110F0:
	call callnewh (retsize: 4;)
	return
fn004110F0_exit:


byte fn004110F5(selector es, selector ds, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0008:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn004110F5_entry:
l004110F5:
l004110F5_thunk_fn004141F0:
	return SLICE((uint32) (uint8) fn004141F0(es, ds, dwArg08), byte, 0)
fn004110F5_exit:


void fn004110FF()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: al Top
// Preserved: ebp esp
fn004110FF_entry:
l004110FF:
l0041FE40_in_fn004110FF:
	return
fn004110FF_exit:


word32 fn00411104(selector es, selector ds, ptr32 & edxOut, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax ebp edx esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn00411104_entry:
l00411104:
l00417110:
	word32 edi_106 = fp - 0x000000DC
	word32 ecx_109 = 0x00000033
l0041713B:
	branch ecx_109 == 0x00000000 l0041713D
l0041713D:
	Mem47[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_128
	fn00411460(0x0042C02B, out edx_128)
	word32 ebp_63 = fn00411442(es, ds)
	word32 edx_78
	word32 eax_76 = fn00411492(es, ds, out edx_78)
	Mem85[fs:0x00000000:word32] = Mem48[ebp_63 - 0x0000000C:word32]
	word32 esp_69 = <invalid>
	fn00411488(es, ds, Mem85[esp_69 + 0x000000E4:word32])
	word32 ebp_103 = Mem85[ebp_63:word32]
	edxOut = edx_78
	ebpOut = ebp_103
	return eax_76
fn00411104_exit:
l0041713B_1:
	Mem107[edi_106:word32] = 0xCCCCCCCC
	edi_106 = edi_106 + 0x00000004
	ecx_109 = ecx_109 - 0x00000001


word32 fn0041111D(word32 ecx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp
// Trashed: SCZO eax ebp ecx edx Top
// Preserved: esp
fn0041111D_entry:
l0041111D:
l0041111D_thunk_fn00416A40:
	return fn00416A40(ecx, es, ds)
fn0041111D_exit:


void fn00411122(word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut:
// Trashed: SCZO eax ebx ecx edi edx esi Top
// Preserved: ebp esp
fn00411122_entry:
l00411122:
l0041C140:
	word32 eax_15 = Mem13[fs:0x00000000:word32]
	Mem38[fs:0x00000000:word32] = fp - 0x00000014
	word32 dwLoc24_106 = 0x00000000
l0041C18D:
	branch dwLoc24_106 == dwArg0C l0041C1B5
l0041C1B5:
	fn0041C1C7(fp - 4)
l0041C1E5:
	Mem62[fs:0x00000000:word32] = eax_15
	return
fn00411122_exit:
l0041C195:
	fn00411366()
	call dwArg10 (retsize: 4;)
		uses: ecx:dwArg04_117,Stack +0008:eax_89,Stack +000C:dwArg08,Stack +0010:dwArg0C,Stack +0014:dwArg10
	word32 eax_89 = dwArg04 + dwArg08
	dwArg04 = eax_89
l0041C184:
	dwLoc24_106 = dwLoc24_106 + 0x00000001


void fn00411127(byte bArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..7]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp esp
fn00411127_entry:
l00411127:
l0041CBF0:
	branch fn004111BD() != 0x00000000 l0041CBFE
l0041CBFE:
	branch (word32) bArg04 == 0x00000000 l0041CC08
l0041CC08:
	Mem25[0x00429328:word32] = 0x00000000
l0041CC06:
l0041CBFC:
l0041CC11:
	return
fn00411127_exit:


word32 fn00411131(selector es, selector ds, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax edx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00411131_entry:
l00411131:
l00418CE0:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_30 = fp - 0x000000DC
	word32 ecx_31 = 0x00000033
l00418D0B:
	branch ecx_31 == 0x00000000 l00418D0D
l00418D0D:
	Mem47[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_51
	fn00411460(0x0042C018, out edx_51)
	Mem58[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0xFFFFFFFF)
	edxOut = edx_51
	return ecx
fn00411131_exit:
l00418D0B_1:
	Mem85[edi_30:word32] = 0xCCCCCCCC
	edi_30 = edi_30 + 0x00000004
	ecx_31 = ecx_31 - 0x00000001


word32 fn00411136(selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn00411136_entry:
l00411136:
l00411136_thunk_fn0041AC40:
	return fn0041AC40(es, ds, dwArg04)
fn00411136_exit:


word32 fn0041114A(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn0041114A_entry:
l0041114A:
l0041ABB0:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_30 = fp - 0x000000DC
	word32 ecx_31 = 0x00000033
l0041ABDB:
	branch ecx_31 == 0x00000000 l0041ABDD
l0041ABDD:
	Mem47[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_119
	fn00411460(0x0042C02B, out edx_119)
	word32 edx_120
	word32 eax_70 = Mem48[fn0041128F(es, ds, out edx_120) + 0x00000014:word32]
	Mem72[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0xFFFFFFFF)
	return eax_70
fn0041114A_exit:
l0041ABDB_1:
	Mem94[edi_30:word32] = 0xCCCCCCCC
	edi_30 = edi_30 + 0x00000004
	ecx_31 = ecx_31 - 0x00000001


byte fn0041114F(word32 ecx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn0041114F_entry:
l0041114F:
l004179E0:
	word32 edi_22 = fp - 0x000000D0
	word32 ecx_23 = 0x00000033
l004179FD:
	branch ecx_23 == 0x00000000 l004179FF
l004179FF:
	word32 edx_90
	fn00411460(0x0042C02C, out edx_90)
	byte al_40 = Mem31[ecx + 0x00000004:byte]
	fn00411488(es, ds, dwLoc08)
	return al_40
fn0041114F_exit:
l004179FD_1:
	Mem66[edi_22:word32] = 0xCCCCCCCC
	edi_22 = edi_22 + 0x00000004
	ecx_23 = ecx_23 - 0x00000001


void fn00411154()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: esp
fn00411154_entry:
l00411154:
	call register_thread_local_exe_atexit_callback (retsize: 4;)
	return
fn00411154_exit:


word32 fn0041115E(word32 dwArg04, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut: eax ebp
// Trashed: eax ebp Top
// Preserved: esp
fn0041115E_entry:
l0041115E:
l0041115E_thunk_fn0041E930:
	word32 ebp_6
	word32 eax_5 = fn0041E930(dwArg04, out ebp_6)
	ebpOut = ebp_6
	return eax_5
fn0041115E_exit:


word32 fn00411172(selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00411172_entry:
l00411172:
l00418110:
	word32 edi_19 = fp - 0x000000C4
	word32 ecx_20 = 0x00000030
l0041812C:
	branch ecx_20 == 0x00000000 l0041812E
l0041812E:
	word32 edx_91
	fn00411460(0x0042C01A, out edx_91)
	fn004115C8(dwArg04)
	fn00411488(es, ds, dwLoc08)
	return dwArg04
fn00411172_exit:
l0041812C_1:
	Mem69[edi_19:word32] = 0xCCCCCCCC
	edi_19 = edi_19 + 0x00000004
	ecx_20 = ecx_20 - 0x00000001


word32 fn00411177(selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: eax ebp esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn00411177_entry:
l00411177:
l00414820:
	word32 edi_30 = fp - 0x00000150
	word32 ecx_31 = 0x0000004F
l0041484B:
	branch ecx_31 == 0x00000000 l0041484D
l0041484D:
	word32 dwLoc0148_631
	Mem46[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_730
	fn00411460(0x0042C031, out edx_730)
	word64 edx_eax_62 = width(dwArg04 + Mem55[Mem55[dwArg04:word32] + 0x00000004:word32])
	fn00411488(es, ds, dwLoc0164)
	word32 dwLoc20_622 = 0x00000000
	word32 eax_75 = SLICE(edx_eax_62, word32, 0)
	word32 edx_77 = SLICE(edx_eax_62, word32, 32)
	branch edx_77 < 0x00000000 l004148F9
l004148A6:
	branch edx_77 > 0x00000000 l004148B1
l004148A8:
	branch eax_75 <=u 0x00000000 l004148F9
l004148B1:
	word32 eax_107 = SLICE(width(dwArg04 + Mem78[Mem78[dwArg04:word32] + 0x00000004:word32]), word32, 0)
	fn00411488(es, ds, dwLoc0164)
	branch eax_107 <=u dwArg0C l004148F9
l004148F9:
	dwLoc0148_631 = 0x00000000
l004148D2:
	word32 eax_126 = SLICE(width(dwArg04 + Mem78[Mem78[dwArg04:word32] + 0x00000004:word32]), word32, 0)
	fn00411488(es, ds, dwLoc0164)
	dwLoc0148_631 = eax_126 - dwArg0C
l00414903:
	fn004116EF(fp - 0x0000003C, es, ds, dwArg04)
	word32 dwLoc2C_634 = dwLoc0148_631
	branch (word32) SLICE((uint32) (uint8) fn0041103C(fp - 0x0000003C, es, ds), byte, 0) != 0x00000000 l0041493C
l0041493C:
	word32 eax_185 = flags(dwArg04 + Mem178[Mem178[dwArg04:word32] + 0x00000004:word32])
	fn00411488(es, ds, dwLoc0168)
	branch (eax_185 & 0x000001C0) == 0x00000040 l00414A36
l00414976:
l00414981:
	branch dwLoc2C_634 <=u 0x00000000 l00414A36
l0041498B:
	byte al_209 = fill(dwArg04 + Mem199[Mem199[dwArg04:word32] + 0x00000004:word32])
	fn00411488(es, ds, dwLoc0168)
	word32 eax_230 = rdbuf(dwArg04 + Mem223[Mem223[dwArg04:word32] + 0x00000004:word32])
	fn00411488(es, ds, dwLoc0168)
	word32 eax_240 = (word32) al_209
	sputc(eax_230, SLICE(eax_240, char, 0))
	fn00411488(es, ds, eax_240)
	fn00411235(es, ds)
	dwLoc0168 = fp - 0x00000108
	branch (word32) SLICE((uint32) (uint8) fn00411456(es, ds, fp - 0x00000114, fp - 0x00000108), byte, 0) == 0x00000000 l00414A31
l00414A31:
l00414978:
	dwLoc2C_634 = dwLoc2C_634 - 0x00000001
l00414A26:
	dwLoc20_622 = 0x00000004
l00414A36:
	branch dwLoc20_622 != 0x00000000 l00414AC9
l00414A40:
	word32 eax_305 = rdbuf(dwArg04 + Mem295[Mem295[dwArg04:word32] + 0x00000004:word32])
	fn00411488(es, ds, dwLoc0168)
	word64 edx_eax_331 = sputn(eax_305, dwArg08, (uint64) (uint32) dwArg0C)
	fn00411488(es, ds, 0x00000000)
	dwLoc0168 = 0x00000000
	word32 edx_342 = SLICE(edx_eax_331, word32, 32)
	branch SLICE(edx_eax_331, word32, 0) != dwArg0C l00414ABB
l00414AAD:
	branch edx_342 == 0x00000000 l00414AC9
l00414AC9:
l00414AD4:
	branch dwLoc2C_634 <=u 0x00000000 l00414B89
l00414ADE:
	byte al_365 = fill(dwArg04 + Mem355[Mem355[dwArg04:word32] + 0x00000004:word32])
	fn00411488(es, ds, dwLoc0168)
	word32 eax_386 = rdbuf(dwArg04 + Mem379[Mem379[dwArg04:word32] + 0x00000004:word32])
	fn00411488(es, ds, dwLoc0168)
	word32 eax_396 = (word32) al_365
	sputc(eax_386, SLICE(eax_396, char, 0))
	fn00411488(es, ds, eax_396)
	fn00411235(es, ds)
	dwLoc0168 = fp - 0x00000120
	branch (word32) SLICE((uint32) (uint8) fn00411456(es, ds, fp - 0x0000012C, fp - 0x00000120), byte, 0) == 0x00000000 l00414B84
l00414B84:
l00414ACB:
	dwLoc2C_634 = dwLoc2C_634 - 0x00000001
l00414B79:
	dwLoc20_622 = dwLoc20_622 | 0x00000004
l00414ABB:
	dwLoc20_622 = dwLoc20_622 | 0x00000004
l00414B89:
	width(dwArg04 + Mem463[Mem463[dwArg04:word32] + 0x00000004:word32], 0)
	fn00411488(es, ds, 0x00000000)
l00414BD1:
l0041492E:
	dwLoc20_622 = 0x00000004
l00414BE1:
	setstate(dwArg04 + Mem504[Mem504[dwArg04:word32] + 0x00000004:word32], dwLoc20_622, '\x00')
	fn00411488(es, ds, 0x00000000)
	fn00411203(fp - 0x0000003C, es, ds)
	word32 ebp_545 = fn004114D3(0x00414C5C, es, ds)
	word32 esp_550 = <invalid>
	word32 edx_557 = Mem540[esp_550 + 4:word32]
	Mem560[fs:0x00000000:word32] = Mem540[ebp_545 - 0x0000000C:word32]
	word32 ebp_574
	word32 ecx_731
	word32 edx_732
	word32 eax_573 = fn004113E3(Mem560[ebp_545 - 0x00000014:word32] ^ ebp_545, edx_557, Mem560[esp_550 + 20:word32], ebp_545, Mem560[esp_550 + 16:word32], Mem560[esp_550 + 12:word32], es, ds, Mem560[esp_550 + 20:word32], out ecx_731, out edx_732, out ebp_574)
	fn00411488(es, ds, Mem560[esp_550 + 0x00000160:word32])
	ebpOut = Mem560[ebp_574:word32]
	return eax_573
fn00411177_exit:
l0041484B_1:
	Mem594[edi_30:word32] = 0xCCCCCCCC
	edi_30 = edi_30 + 0x00000004
	ecx_31 = ecx_31 - 0x00000001


word32 fn00411186(selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut: ebp esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn00411186_entry:
l00411186:
l00416390:
	word32 edi_108 = fp - 0x000000C4
	word32 ecx_111 = 0x00000030
l004163AC:
	branch ecx_111 == 0x00000000 l004163AE
l004163AE:
	word32 edx_132
	fn00411460(0x0042C027, out edx_132)
	widen(dwArg04 + Mem33[Mem33[dwArg04:word32] + 0x00000004:word32], '\x0A')
	fn00411488(es, ds, 0x0000000A)
	word32 ebp_77 = fn0041118B(es, ds, fn0041161D(es, ds))
	word32 esp_83 = <invalid>
	fn00411488(es, ds, Mem75[esp_83 + 0x000000D4:word32])
	return Mem75[ebp_77:word32]
fn00411186_exit:
l004163AC_1:
	Mem109[edi_108:word32] = 0xCCCCCCCC
	edi_108 = edi_108 + 0x00000004
	ecx_111 = ecx_111 - 0x00000001


word32 fn0041118B(selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut: ebp esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn0041118B_entry:
l0041118B:
l00415FC0:
	word32 ebp_160 = fp - 4
	word32 edi_30 = fp - 0x00000138
	word32 ecx_31 = 0x00000049
l00415FEB:
	branch ecx_31 == 0x00000000 l00415FED
l00415FED:
	Mem46[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_486
	fn00411460(0x0042C027, out edx_486)
	fn004115CD(fp - 0x0000003C, es, ds, dwArg04, 0x01)
	word32 esp_177 = fp - 0x00000148
	branch (word32) SLICE((uint32) (uint8) fn0041114F(fp - 0x0000003C, es, ds), byte, 0) == 0x00000000 l004161F6
l00416041:
	fn004113CA(es, ds, 0x00000000)
	fn00411361(es, ds)
	word32 eax_124 = rdbuf(dwArg04 + Mem117[Mem117[dwArg04:word32] + 0x00000004:word32])
	fn00411488(es, ds, fp + 0x0000000C)
	sgetc(eax_124)
	fn00411488(es, ds, fp + 0x0000000C)
	word32 esp_116 = fp - 0x00000148
l004160EC:
	Mem161[ebp_160 - 0x0000011C:word32] = fn00411235(es, ds)
	word32 esp_164 = esp_116 - 4
	Mem165[esp_164:word32] = ebp_160 - 0x00000050
	Mem168[esp_164 - 4:word32] = ebp_160 - 0x0000011C
	esp_177 = esp_164 + 0x00000004
	branch (word32) SLICE((uint32) (uint8) fn00411456(es, ds, Mem168[esp_164 - 4:word32], Mem168[esp_164:word32]), byte, 0) == 0x00000000 l00416124
l00416124:
	Mem185[esp_164:word32] = ebp_160 - 0x00000044
	Mem188[esp_164 - 4:word32] = ebp_160 - 0x00000050
	esp_177 = esp_164 + 0x00000004
	branch (word32) SLICE((uint32) (uint8) fn00411456(es, ds, Mem188[esp_164 - 4:word32], Mem188[esp_164:word32]), byte, 0) == 0x00000000 l0041617A
l0041617A:
	fn004116BD(es, ds)
	esp_177 = <invalid>
	word32 esi_220
	branch fn004116B3(es, ds, out ebp_160, out esi_220) >u esi_220 l0041619D
l0041619D:
	Mem231[esp_177 - 4:word32] = ebp_160 - 0x00000050
	Mem245[esp_177 - 4:word32] = (word32) SLICE((uint32) (uint8) fn00411195(es, ds, Mem231[esp_177 - 4:word32]), byte, 0)
	ebp_160 = fn00411433(es, ds)
	Mem261[ebp_160 - 0x00000025:byte] = 0x01
	word32 esp_254 = <invalid>
	esp_116 = esp_254 + 0x00000004
l004160A6:
	word32 eax_268 = rdbuf(Mem261[ebp_160 + 0x00000008:word32] + Mem261[Mem261[Mem261[ebp_160 + 0x00000008:word32]:word32] + 0x00000004:word32])
	fn00411488(es, ds, Mem261[esp_254:word32])
	Mem276[ebp_160 - 0x00000130:word32] = eax_268
	word32 eax_279 = snextc(Mem276[ebp_160 - 0x00000130:word32])
	fn00411488(es, ds, Mem276[esp_254:word32])
	Mem287[ebp_160 - 0x00000134:word32] = eax_279
	Mem289[ebp_160 - 0x00000050:word32] = Mem287[ebp_160 - 0x00000134:word32]
l00416190:
	Mem294[ebp_160 - 0x0000001C:word32] = Mem188[ebp_160 - 0x0000001C:word32] | 0x00000002
l0041613B:
	Mem295[ebp_160 - 0x00000025:byte] = 0x01
	word32 eax_302 = rdbuf(Mem295[ebp_160 + 0x00000008:word32] + Mem295[Mem295[Mem295[ebp_160 + 0x00000008:word32]:word32] + 0x00000004:word32])
	fn00411488(es, ds, Mem295[esp_164:word32])
	Mem310[ebp_160 - 0x00000130:word32] = eax_302
	sbumpc(Mem310[ebp_160 - 0x00000130:word32])
	fn00411488(es, ds, Mem310[esp_164:word32])
l00416111:
	Mem325[ebp_160 - 0x0000001C:word32] = Mem168[ebp_160 - 0x0000001C:word32] | 0x00000001
l004161BE:
l004161E6:
	Mem327[ebp_160 - 0x00000004:word32] = 0x00000000
l004161F6:
	branch (word32) Mem329[ebp_160 - 0x00000025:byte] != 0x00000000 l00416207
l004161FE:
	Mem338[ebp_160 - 0x0000001C:word32] = Mem329[ebp_160 - 0x0000001C:word32] | 0x00000002
l00416207:
	word32 esp_343 = esp_177 - 4
	Mem344[esp_343:word32] = 0x00000000
	Mem348[esp_343 - 4:word32] = Mem344[ebp_160 - 0x0000001C:word32]
	setstate(Mem348[ebp_160 + 0x00000008:word32] + Mem348[Mem348[Mem348[ebp_160 + 0x00000008:word32]:word32] + 0x00000004:word32], Mem348[esp_343 - 4:int32], Mem348[esp_343:bool])
	fn00411488(es, ds, Mem348[esp_343:word32])
	Mem380[ebp_160 - 0x00000128:word32] = Mem348[ebp_160 + 0x00000008:word32]
	Mem381[ebp_160 - 0x00000004:word32] = 0xFFFFFFFF
	word32 edx_385 = fn004114F1(ebp_160 - 0x00000038, es, ds)
	word32 eax_391 = Mem381[ebp_160 - 0x00000128:word32]
	Mem393[esp_343:word32] = edx_385
	Mem396[esp_343 - 4:word32] = eax_391
	word32 ebp_401 = fn004114D3(0x00416280, es, ds)
	word32 esp_406 = <invalid>
	word32 edx_413 = Mem396[esp_406 + 4:word32]
	Mem416[fs:0x00000000:word32] = Mem396[ebp_401 - 0x0000000C:word32]
	word32 ecx_487
	word32 edx_488
	word32 ebp_430
	fn004113E3(Mem416[ebp_401 - 0x00000014:word32] ^ ebp_401, edx_413, Mem416[esp_406 + 20:word32], ebp_401, Mem416[esp_406 + 16:word32], Mem416[esp_406 + 12:word32], es, ds, Mem416[esp_406 + 20:word32], out ecx_487, out edx_488, out ebp_430)
	fn00411488(es, ds, Mem416[esp_406 + 0x00000148:word32])
	return Mem416[ebp_430:word32]
fn0041118B_exit:
l00415FEB_1:
	Mem450[edi_30:word32] = 0xCCCCCCCC
	edi_30 = edi_30 + 0x00000004
	ecx_31 = ecx_31 - 0x00000001


word32 fn00411190(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn00411190_entry:
l00411190:
l00415660:
	word32 edi_22 = fp - 0x00000140
	word32 ecx_23 = 0x0000004F
l0041567D:
	branch ecx_23 == 0x00000000 l0041567F
l0041567F:
	word32 edx_399
	fn00411460(0x0042C02B, out edx_399)
	word32 edx_400
	fn00411640(es, ds, out edx_400)
	word32 esp_71 = <invalid>
	word32 ebp_65
	word32 esi_401
	branch fn004116B3(es, ds, out ebp_65, out esi_401) - Mem62[ebp_65 - 0x00000024:word32] >=u Mem62[ebp_65 + 0x00000008:word32] l004156C0
l004156BB:
	fn0041119A(es, ds)
l004156C0:
	word32 edx_246
	Mem96[ebp_65 - 0x00000030:word32] = Mem62[ebp_65 - 0x00000024:word32] + Mem62[ebp_65 + 0x00000008:word32]
	Mem99[ebp_65 - 0x0000003C:word32] = Mem96[Mem96[ebp_65 - 0x00000018:word32] + 0x00000018:word32]
	Mem103[esp_71 - 4:word32] = Mem99[ebp_65 - 0x00000030:word32]
	word32 ebp_112
	Mem123[ebp_112 - 0x00000048:word32] = fn0041105A(es, ds, out ebp_112)
	Mem133[ebp_112 - 0x00000054:word32] = fn00411483(es, ds)
	word32 ecx_135 = Mem133[ebp_112 - 0x00000048:word32]
	Mem147[esp_71 - 8:word32] = -(uint32) (uint8) (ecx_135 <u 0x00000001) | ecx_135 + 0x00000001
	Mem158[ebp_112 - 0x00000060:word32] = fn004112D5(es, ds)
	word32 ebp_161 = fn00411479(Mem158[ebp_112 - 0x00000018:word32], es, ds)
	Mem175[Mem158[ebp_161 - 0x00000018:word32] + 0x00000014:word32] = Mem158[ebp_161 - 0x00000030:word32]
	Mem178[Mem175[ebp_161 - 0x00000018:word32] + 0x00000018:word32] = Mem175[ebp_161 - 0x00000048:word32]
	word32 esp_167 = <invalid>
	Mem181[esp_167 - 4:word32] = Mem178[ebp_161 - 0x00000060:word32]
	Mem191[ebp_161 - 0x0000006C:word32] = fn004115F5(es, ds)
	branch Mem191[ebp_161 - 0x0000003C:word32] <u 0x00000010 l00415782
l00415782:
	Mem196[esp_167 - 4:word32] = Mem191[ebp_161 + 0x00000014:word32]
	Mem199[esp_167 - 8:word32] = Mem196[ebp_161 + 0x00000010:word32]
	Mem202[esp_167 - 12:word32] = Mem199[ebp_161 - 0x00000024:word32]
	Mem207[esp_167 - 16:word32] = Mem202[ebp_161 - 0x00000018:word32] + 0x00000004
	Mem210[esp_167 - 20:word32] = Mem207[ebp_161 - 0x0000006C:word32]
	fn0041143D(es, ds, Mem210[esp_167 - 20:word32], Mem210[esp_167 - 16:word32], Mem210[esp_167 - 12:word32], Mem210[esp_167 - 8:word32], Mem210[esp_167 - 4:word32])
	Mem223[esp_167 - 4:word32] = ebp_161 - 0x00000060
	Mem228[esp_167 - 8:word32] = Mem223[ebp_161 - 0x00000018:word32] + 0x00000004
	Mem240[esp_167 - 0x00000008:word32] = fn004113D9(es, ds)
	Mem243[esp_167 - 0x0000000C:word32] = Mem240[ebp_161 - 0x00000054:word32]
	edx_246 = fn004114DD(es, ds)
l00415736:
	Mem256[ebp_161 - 0x00000078:word32] = Mem191[Mem191[ebp_161 - 0x00000018:word32] + 0x00000004:word32]
	Mem259[esp_167 - 4:word32] = Mem256[ebp_161 + 0x00000014:word32]
	Mem262[esp_167 - 8:word32] = Mem259[ebp_161 + 0x00000010:word32]
	Mem265[esp_167 - 12:word32] = Mem262[ebp_161 - 0x00000024:word32]
	Mem268[esp_167 - 16:word32] = Mem265[ebp_161 - 0x00000078:word32]
	Mem280[esp_167 - 0x00000010:word32] = fn004115F5(es, ds)
	Mem283[esp_167 - 0x00000014:word32] = Mem280[ebp_161 - 0x0000006C:word32]
	fn0041143D(es, ds, Mem283[esp_167 - 0x00000014:word32], Mem283[esp_167 - 0x00000010:word32], Mem283[esp_167 - 0x0000000C:word32], Mem283[esp_167 - 0x00000008:word32], Mem283[esp_167 - 0x00000004:word32])
	Mem298[esp_167 - 4:word32] = Mem283[ebp_161 - 0x0000003C:word32] + 0x00000001
	Mem301[esp_167 - 8:word32] = Mem298[ebp_161 - 0x00000078:word32]
	edx_246 = fn00411695(es, ds, Mem301[esp_167 - 4:word32])
	Mem314[Mem301[ebp_161 - 0x00000018:word32] + 0x00000004:word32] = Mem301[ebp_161 - 0x00000060:word32]
l004157C1:
	word32 eax_317 = Mem316[ebp_161 - 0x0000000C:word32]
	Mem321[esp_167 - 4:word32] = edx_246
	Mem324[esp_167 - 8:word32] = eax_317
	word32 ebp_335 = fn004114D3(0x004157F8, es, ds)
	word32 esp_340 = <invalid>
	word32 edx_403
	word32 ecx_402
	word32 ebp_360
	fn004113E3(Mem324[ebp_335 - 0x00000004:word32] ^ ebp_335, Mem324[esp_340 + 4:word32], Mem324[esp_340 + 16:word32], ebp_335, Mem324[esp_340 + 12:word32], Mem324[esp_340 + 8:word32], es, ds, Mem324[esp_340 + 16:word32], out ecx_402, out edx_403, out ebp_360)
	fn00411488(es, ds, Mem324[esp_340 + 0x0000014C:word32])
	return Mem324[ebp_360:word32]
fn00411190_exit:
l0041567D_1:
	Mem380[edi_22:word32] = 0xCCCCCCCC
	edi_22 = edi_22 + 0x00000004
	ecx_23 = ecx_23 - 0x00000001


byte fn00411195(selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00411195_entry:
l00411195:
l0041BF80:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_27 = fp - 0x000000D0
	word32 ecx_28 = 0x00000030
l0041BFAA:
	branch ecx_28 == 0x00000000 l0041BFAC
l0041BFAC:
	Mem42[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_106
	fn00411460(0x0042C017, out edx_106)
	byte al_51 = Mem42[dwArg04:byte]
	Mem53[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0xFFFFFFFF)
	return al_51
fn00411195_exit:
l0041BFAA_1:
	Mem80[edi_27:word32] = 0xCCCCCCCC
	edi_27 = edi_27 + 0x00000004
	ecx_28 = ecx_28 - 0x00000001


void fn0041119A(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO eax ebx ecx edi edx esi Top
// Preserved: ebp esp
fn0041119A_entry:
l0041119A:
l00419780:
	word32 edi_19 = fp - 0x000000C4
	word32 ecx_20 = 0x00000030
l0041979C:
	branch ecx_20 == 0x00000000 l0041979E
l0041979E:
	word32 edx_78
	fn00411460(0x0042C02B, out edx_78)
	fn0041158C(0x004264C0)
	fn00411488(es, ds, dwLoc0C)
	return
fn0041119A_exit:
l0041979C_1:
	Mem59[edi_19:word32] = 0xCCCCCCCC
	edi_19 = edi_19 + 0x00000004
	ecx_20 = ecx_20 - 0x00000001


word32 fn0041119F(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn0041119F_entry:
l0041119F:
l00417690:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_27 = fp - 0x000000D0
	word32 ecx_28 = 0x00000030
l004176BA:
	branch ecx_28 == 0x00000000 l004176BC
l004176BC:
	Mem42[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_103
	fn00411460(0x0042C000, out edx_103)
	Mem52[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0xFFFFFFFF)
	return dwArg08
fn0041119F_exit:
l004176BA_1:
	Mem79[edi_27:word32] = 0xCCCCCCCC
	edi_27 = edi_27 + 0x00000004
	ecx_28 = ecx_28 - 0x00000001


word32 fn004111A4(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn004111A4_entry:
l004111A4:
l004182F0:
	word32 edi_206 = fp - 0x00000100
	word32 ecx_209 = 0x0000003C
l0041831B:
	branch ecx_209 == 0x00000000 l0041831D
l0041831D:
	word32 esp_116
	word32 ebp_104
	Mem47[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_230
	fn00411460(0x0042C02B, out edx_230)
	word32 edx_231
	branch (word32) SLICE((uint32) (uint8) fn004115A5(fn00411640(es, ds, out edx_231), es, ds), byte, 0) == 0x00000000 l00418364
l00418364:
	ebp_104 = fn004115D7(es, ds)
	esp_116 = <invalid>
l00418356:
	word32 esp_110 = <invalid>
	ebp_104 = fn0041163B(es, ds)
	esp_116 = esp_110 + 0x00000004
l0041836C:
	word32 esp_135 = esp_116 - 4
	word32 edx_232
	Mem136[esp_135:word32] = fn00411640(es, ds, out edx_232)
	Mem148[ebp_104 - 0x0000002C:word32] = fn00411631(es, ds) + 0x00000004
	Mem151[esp_135:word32] = Mem148[ebp_104 - 0x00000020:word32]
	Mem163[ebp_104 - 0x00000038:word32] = fn00411631(es, ds) + 0x00000004
	Mem165[esp_135:word32] = 0x00000018
	Mem168[esp_135 - 4:word32] = Mem165[ebp_104 - 0x00000038:word32]
	Mem171[esp_135 - 8:word32] = Mem168[ebp_104 - 0x0000002C:word32]
	fn00411523(Mem171[esp_135 - 8:(ptr32 void)], Mem171[esp_135 - 4:(ptr32 void)], Mem171[esp_135:size_t])
	fn004112F8(es, ds)
	Mem185[fs:0x00000000:word32] = Mem171[ebp_104 - 0x0000000C:word32]
	fn00411488(es, ds, Mem185[esp_135 + 0x0000010C:word32])
	return Mem185[ebp_104:word32]
fn004111A4_exit:
l0041831B_1:
	Mem207[edi_206:word32] = 0xCCCCCCCC
	edi_206 = edi_206 + 0x00000004
	ecx_209 = ecx_209 - 0x00000001


void fn004111A9(word32 ecx, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn004111A9_entry:
l004111A9:
l00418590:
	word32 edi_22 = fp - 0x000000D0
	word32 ecx_23 = 0x00000033
l004185AD:
	branch ecx_23 == 0x00000000 l004185AF
l004185AF:
	word32 edx_34
	fn00411460(0x0042C02B, out edx_34)
	branch Mem31[ecx + 0x00000014:word32] >=u dwArg04 l004185CD
l004185C8:
	fn00411316(es, ds)
l004185CD:
	fn00411488(es, ds, dwLoc08)
	return
fn004111A9_exit:
l004185AD_1:
	Mem88[edi_22:word32] = 0xCCCCCCCC
	edi_22 = edi_22 + 0x00000004
	ecx_23 = ecx_23 - 0x00000001


word32 fn004111B3(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn004111B3_entry:
l004111B3:
l004181D0:
	word32 edi_121 = fp - 0x000000E8
	word32 ecx_124 = 0x00000036
l004181FB:
	branch ecx_124 == 0x00000000 l004181FD
l004181FD:
	Mem47[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_147
	fn00411460(0x0042C02B, out edx_147)
	fn004115F0(es, ds)
	word32 ebp_86 = fn004111A4(es, ds)
	Mem100[fs:0x00000000:word32] = Mem83[ebp_86 - 0x0000000C:word32]
	word32 esp_92 = <invalid>
	fn00411488(es, ds, Mem100[esp_92 + 0x000000F8:word32])
	return Mem100[ebp_86:word32]
fn004111B3_exit:
l004181FB_1:
	Mem122[edi_121:word32] = 0xCCCCCCCC
	edi_121 = edi_121 + 0x00000004
	ecx_124 = ecx_124 - 0x00000001


word32 fn004111BD()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax
// Trashed: SCZO eax Top
// Preserved: ebp esp
fn004111BD_entry:
l004111BD:
l0041DD30:
	word32 dwLoc08_23
	branch Mem10[0x0042903C:word32] == 0x00000000 l0041DD46
l0041DD46:
	dwLoc08_23 = 0x00000000
l0041DD3D:
	dwLoc08_23 = 0x00000001
l0041DD4D:
	return dwLoc08_23
fn004111BD_exit:


word32 fn004111C7(selector es, selector ds, word128 xmm0, word32 dwArg04, byte bArg08, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..7] xmm0:[0..127]
// LiveOut: eax ebp esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn004111C7_entry:
l004111C7:
l00413680:
	word32 edi_30 = fp - 0x00000168
	word32 ecx_31 = 0x00000055
l004136AB:
	branch ecx_31 == 0x00000000 l004136AD
l004136AD:
	Mem46[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_767
	fn00411460(0x0042C02D, out edx_767)
	fn004116EF(fp - 0x00000030, es, ds, dwArg04)
	word32 dwLoc20_653 = 0x00000000
	branch (word32) SLICE((uint32) (uint8) fn0041103C(fp - 0x00000030, es, ds), byte, 0) == 0x00000000 l00413A35
l004136FB:
	word64 edx_eax_97 = width(dwArg04 + Mem76[Mem76[dwArg04:word32] + 0x00000004:word32])
	fn00411488(es, ds, dwLoc0180)
	word32 eax_105 = SLICE(edx_eax_97, word32, 0)
	word32 edx_107 = SLICE(edx_eax_97, word32, 32)
	branch edx_107 > 0x00000000 l00413744
l0041372C:
	branch edx_107 < 0x00000000 l00413737
l0041372E:
	branch eax_105 >u 0x00000001 l00413744
l00413744:
	word64 edx_eax_123 = width(dwArg04 + Mem108[Mem108[dwArg04:word32] + 0x00000004:word32])
	fn00411488(es, ds, dwLoc0180)
	word32 eax_156 = flags(dwArg04 + Mem149[Mem149[dwArg04:word32] + 0x00000004:word32])
	fn00411488(es, ds, dwLoc0180)
	word32 eax_137 = SLICE(edx_eax_123, word32, 0)
	word32 dwLoc40_664 = eax_137 - 0x00000001
	word32 dwLoc3C_665 = SLICE(edx_eax_123, word32, 32) - (eax_137 <u 0x00000001)
	branch (eax_156 & 0x000001C0) == 0x00000040 l0041389B
l004137BE:
l004137D2:
	branch dwLoc20_653 != 0x00000000 l0041389B
l004137DC:
	branch dwLoc3C_665 < 0x00000000 l0041389B
l004137E6:
	branch dwLoc3C_665 > 0x00000000 l004137F2
l004137E8:
	branch dwLoc40_664 <=u 0x00000000 l0041389B
l0041389B:
	branch dwLoc20_653 != 0x00000000 l00413920
l004138A1:
	word32 eax_190 = rdbuf(dwArg04 + Mem179[Mem179[dwArg04:word32] + 0x00000004:word32])
	fn00411488(es, ds, dwLoc0180)
	word32 eax_212 = (word32) bArg08
	sputc(eax_190, SLICE(eax_212, char, 0))
	fn00411488(es, ds, eax_212)
	fn00411235(es, ds)
	dwLoc0180 = fp - 0x00000124
	branch (word32) SLICE((uint32) (uint8) fn00411456(es, ds, fp - 0x00000130, fp - 0x00000124), byte, 0) == 0x00000000 l00413920
l00413917:
	dwLoc20_653 = dwLoc20_653 | 0x00000004
l00413920:
l00413934:
	branch dwLoc20_653 != 0x00000000 l004139FD
l0041393E:
	branch dwLoc3C_665 < 0x00000000 l004139FD
l00413948:
	branch dwLoc3C_665 > 0x00000000 l00413954
l0041394A:
	branch dwLoc40_664 <=u 0x00000000 l004139FD
l004139FD:
l00413A25:
l00413A35:
	width(dwArg04 + Mem280[Mem280[dwArg04:word32] + 0x00000004:word32], 0)
	fn00411488(es, ds, 0x00000000)
	setstate(dwArg04 + Mem319[Mem319[dwArg04:word32] + 0x00000004:word32], dwLoc20_653, '\x00')
	fn00411488(es, ds, 0x00000000)
	fn00411203(fp - 0x00000030, es, ds)
	word32 ebp_354 = fn004114D3(0x00413AD0, es, ds)
	word32 esp_359 = <invalid>
	word32 edx_366 = Mem349[esp_359 + 4:word32]
	Mem369[fs:0x00000000:word32] = Mem349[ebp_354 - 0x0000000C:word32]
	word32 ecx_768
	word32 ebp_383
	word32 edx_769
	word32 eax_382 = fn004113E3(Mem369[ebp_354 - 0x00000014:word32] ^ ebp_354, edx_366, Mem369[esp_359 + 20:word32], ebp_354, Mem369[esp_359 + 16:word32], Mem369[esp_359 + 12:word32], es, ds, Mem369[esp_359 + 20:word32], out ecx_768, out edx_769, out ebp_383)
	fn00411488(es, ds, Mem369[esp_359 + 0x00000178:word32])
	ebpOut = Mem369[ebp_383:word32]
	return eax_382
fn004111C7_exit:
l00413954:
	byte al_410 = fill(dwArg04 + Mem263[Mem263[dwArg04:word32] + 0x00000004:word32])
	fn00411488(es, ds, dwLoc0180)
	word32 eax_431 = rdbuf(dwArg04 + Mem424[Mem424[dwArg04:word32] + 0x00000004:word32])
	fn00411488(es, ds, dwLoc0180)
	word32 eax_441 = (word32) al_410
	sputc(eax_431, SLICE(eax_441, char, 0))
	fn00411488(es, ds, eax_441)
	fn00411235(es, ds)
	dwLoc0180 = fp - 0x0000013C
	branch (word32) SLICE((uint32) (uint8) fn00411456(es, ds, fp - 0x00000148, fp - 0x0000013C), byte, 0) == 0x00000000 l004139F8
l004139EF:
	dwLoc20_653 = dwLoc20_653 | 0x00000004
l004139F8:
l00413922:
	dwLoc40_664 = dwLoc40_664 - 0x00000001
	dwLoc3C_665 = dwLoc3C_665 - (dwLoc40_664 <u 0x00000001)
l004137F2:
	byte al_511 = fill(dwArg04 + Mem170[Mem170[dwArg04:word32] + 0x00000004:word32])
	fn00411488(es, ds, dwLoc0180)
	word32 eax_532 = rdbuf(dwArg04 + Mem525[Mem525[dwArg04:word32] + 0x00000004:word32])
	fn00411488(es, ds, dwLoc0180)
	word32 eax_542 = (word32) al_511
	sputc(eax_532, SLICE(eax_542, char, 0))
	fn00411488(es, ds, eax_542)
	fn00411235(es, ds)
	dwLoc0180 = fp - 0x0000010C
	branch (word32) SLICE((uint32) (uint8) fn00411456(es, ds, fp - 0x00000118, fp - 0x0000010C), byte, 0) == 0x00000000 l00413896
l0041388D:
	dwLoc20_653 = dwLoc20_653 | 0x00000004
l00413896:
l004137C0:
	dwLoc40_664 = dwLoc40_664 - 0x00000001
	dwLoc3C_665 = dwLoc3C_665 - (dwLoc40_664 <u 0x00000001)
l00413737:
	__xorps(xmm0, xmm0)
l004136AB_1:
	Mem610[edi_30:word32] = 0xCCCCCCCC
	edi_30 = edi_30 + 0x00000004
	ecx_31 = ecx_31 - 0x00000001


void fn004111CC(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn004111CC_entry:
l004111CC:
l0041AD60:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_27 = fp - 0x000000D0
	word32 ecx_28 = 0x00000030
l0041AD8A:
	branch ecx_28 == 0x00000000 l0041AD8C
l0041AD8C:
	Mem42[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_101
	fn00411460(0x0042C01A, out edx_101)
	Mem52[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0xFFFFFFFF)
	return
fn004111CC_exit:
l0041AD8A_1:
	Mem79[edi_27:word32] = 0xCCCCCCCC
	edi_27 = edi_27 + 0x00000004
	ecx_28 = ecx_28 - 0x00000001


void fn004111DB()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: al Top
// Preserved: ebp esp
fn004111DB_entry:
l004111DB:
l0041FE40:
	return
fn004111DB_exit:


void fn004111E0(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn004111E0_entry:
l004111E0:
l00418C50:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_30 = fp - 0x000000DC
	word32 ecx_31 = 0x00000033
l00418C7B:
	branch ecx_31 == 0x00000000 l00418C7D
l00418C7D:
	Mem47[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_110
	fn00411460(0x0042C018, out edx_110)
	Mem58[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0xFFFFFFFF)
	return
fn004111E0_exit:
l00418C7B_1:
	Mem85[edi_30:word32] = 0xCCCCCCCC
	edi_30 = edi_30 + 0x00000004
	ecx_31 = ecx_31 - 0x00000001


word32 fn004111E5(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn004111E5_entry:
l004111E5:
l004111E5_thunk_fn00413B90:
	return fn00413B90(es, ds)
fn004111E5_exit:


word32 fn004111F9(selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn004111F9_entry:
l004111F9:
l0041A510:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_27 = fp - 0x000000D0
	word32 ecx_28 = 0x00000030
l0041A53A:
	branch ecx_28 == 0x00000000 l0041A53C
l0041A53C:
	Mem42[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_120
	fn00411460(0x0042C017, out edx_120)
	word32 eax_59 = fn00411019(dwArg04, dwArg08, dwArg0C)
	Mem62[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0xFFFFFFFF)
	return eax_59
fn004111F9_exit:
l0041A53A_1:
	Mem89[edi_27:word32] = 0xCCCCCCCC
	edi_27 = edi_27 + 0x00000004
	ecx_28 = ecx_28 - 0x00000001


void fn004111FE(void * ptrArg04, int32 dwArg08, size_t tArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: eax Top
// Preserved: esp
fn004111FE_entry:
l004111FE:
	memset(ptrArg04, dwArg08, tArg0C)
	return
fn004111FE_exit:


void fn00411203(word32 ecx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00411203_entry:
l00411203:
l004175D0:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_119 = fp - 0x000000DC
	word32 ecx_122 = 0x00000033
l004175FB:
	branch ecx_122 == 0x00000000 l004175FD
l004175FD:
	Mem47[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_155
	fn00411460(0x0042C02D, out edx_155)
	branch (word32) fn00411064() != 0x00000000 l0041763C
l00417628:
	_Osfx(Mem48[ecx:word32])
	fn00411488(es, ds, dwLocF0)
l0041763C:
	fn00411096(ecx, es, ds)
	Mem97[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0xFFFFFFFF)
	return
fn00411203_exit:
l004175FB_1:
	Mem120[edi_119:word32] = 0xCCCCCCCC
	edi_119 = edi_119 + 0x00000004
	ecx_122 = ecx_122 - 0x00000001


void fn00411212(selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO ebx ecx edi edx esi Top
// Preserved: esp
fn00411212_entry:
l00411212:
l00411212_thunk_fn004144D0:
	fn004144D0(es, ds, dwArg04)
	return
fn00411212_exit:


word32 fn00411226(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn00411226_entry:
l00411226:
l00415450:
	word32 edi_22 = fp - 0x00000140
	word32 ecx_23 = 0x0000004F
l0041546D:
	branch ecx_23 == 0x00000000 l0041546F
l0041546F:
	word32 edx_387
	fn00411460(0x0042C02B, out edx_387)
	word32 edx_388
	fn00411640(es, ds, out edx_388)
	word32 esp_71 = <invalid>
	word32 ebp_65
	word32 esi_389
	branch fn004116B3(es, ds, out ebp_65, out esi_389) - Mem62[ebp_65 - 0x00000024:word32] >=u Mem62[ebp_65 + 0x00000008:word32] l004154B0
l004154AB:
	fn0041119A(es, ds)
l004154B0:
	word32 edx_240
	Mem96[ebp_65 - 0x00000030:word32] = Mem62[ebp_65 - 0x00000024:word32] + Mem62[ebp_65 + 0x00000008:word32]
	Mem99[ebp_65 - 0x0000003C:word32] = Mem96[Mem96[ebp_65 - 0x00000018:word32] + 0x00000018:word32]
	Mem103[esp_71 - 4:word32] = Mem99[ebp_65 - 0x00000030:word32]
	word32 ebp_112
	Mem123[ebp_112 - 0x00000048:word32] = fn0041105A(es, ds, out ebp_112)
	Mem133[ebp_112 - 0x00000054:word32] = fn00411483(es, ds)
	word32 ecx_135 = Mem133[ebp_112 - 0x00000048:word32]
	Mem147[esp_71 - 8:word32] = -(uint32) (uint8) (ecx_135 <u 0x00000001) | ecx_135 + 0x00000001
	Mem158[ebp_112 - 0x00000060:word32] = fn004112D5(es, ds)
	word32 ebp_161 = fn00411479(Mem158[ebp_112 - 0x00000018:word32], es, ds)
	Mem175[Mem158[ebp_161 - 0x00000018:word32] + 0x00000014:word32] = Mem158[ebp_161 - 0x00000030:word32]
	Mem178[Mem175[ebp_161 - 0x00000018:word32] + 0x00000018:word32] = Mem175[ebp_161 - 0x00000048:word32]
	word32 esp_167 = <invalid>
	Mem181[esp_167 - 4:word32] = Mem178[ebp_161 - 0x00000060:word32]
	Mem191[ebp_161 - 0x0000006C:word32] = fn004115F5(es, ds)
	branch Mem191[ebp_161 - 0x0000003C:word32] <u 0x00000010 l0041556A
l0041556A:
	Mem196[esp_167 - 4:word32] = Mem191[ebp_161 - 0x00000024:word32]
	Mem201[esp_167 - 8:word32] = Mem196[ebp_161 - 0x00000018:word32] + 0x00000004
	Mem204[esp_167 - 12:word32] = Mem201[ebp_161 - 0x0000006C:word32]
	fn00411622(es, ds, Mem204[esp_167 - 12:word32], Mem204[esp_167 - 8:word32], Mem204[esp_167 - 4:word32])
	Mem217[esp_167 - 4:word32] = ebp_161 - 0x00000060
	Mem222[esp_167 - 8:word32] = Mem217[ebp_161 - 0x00000018:word32] + 0x00000004
	Mem234[esp_167 - 0x00000008:word32] = fn004113D9(es, ds)
	Mem237[esp_167 - 0x0000000C:word32] = Mem234[ebp_161 - 0x00000054:word32]
	edx_240 = fn004114DD(es, ds)
l00415526:
	Mem250[ebp_161 - 0x00000078:word32] = Mem191[Mem191[ebp_161 - 0x00000018:word32] + 0x00000004:word32]
	Mem253[esp_167 - 4:word32] = Mem250[ebp_161 - 0x00000024:word32]
	Mem256[esp_167 - 8:word32] = Mem253[ebp_161 - 0x00000078:word32]
	Mem268[esp_167 - 0x00000008:word32] = fn004115F5(es, ds)
	Mem271[esp_167 - 0x0000000C:word32] = Mem268[ebp_161 - 0x0000006C:word32]
	fn00411622(es, ds, Mem271[esp_167 - 0x0000000C:word32], Mem271[esp_167 - 0x00000008:word32], Mem271[esp_167 - 0x00000004:word32])
	Mem286[esp_167 - 4:word32] = Mem271[ebp_161 - 0x0000003C:word32] + 0x00000001
	Mem289[esp_167 - 8:word32] = Mem286[ebp_161 - 0x00000078:word32]
	edx_240 = fn00411695(es, ds, Mem289[esp_167 - 4:word32])
	Mem302[Mem289[ebp_161 - 0x00000018:word32] + 0x00000004:word32] = Mem289[ebp_161 - 0x00000060:word32]
l004155A1:
	word32 eax_305 = Mem304[ebp_161 - 0x0000000C:word32]
	Mem309[esp_167 - 4:word32] = edx_240
	Mem312[esp_167 - 8:word32] = eax_305
	word32 ebp_323 = fn004114D3(0x004155D8, es, ds)
	word32 esp_328 = <invalid>
	word32 edx_391
	word32 ecx_390
	word32 ebp_348
	fn004113E3(Mem312[ebp_323 - 0x00000004:word32] ^ ebp_323, Mem312[esp_328 + 4:word32], Mem312[esp_328 + 16:word32], ebp_323, Mem312[esp_328 + 12:word32], Mem312[esp_328 + 8:word32], es, ds, Mem312[esp_328 + 16:word32], out ecx_390, out edx_391, out ebp_348)
	fn00411488(es, ds, Mem312[esp_328 + 0x0000014C:word32])
	return Mem312[ebp_348:word32]
fn00411226_exit:
l0041546D_1:
	Mem368[edi_22:word32] = 0xCCCCCCCC
	edi_22 = edi_22 + 0x00000004
	ecx_23 = ecx_23 - 0x00000001


word32 fn0041122B(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn0041122B_entry:
l0041122B:
l00414F10:
	word32 edi_119 = fp - 0x000000DC
	word32 ecx_122 = 0x00000033
l00414F3A:
	branch ecx_122 == 0x00000000 l00414F3C
l00414F3C:
	Mem42[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_147
	fn00411460(0x0042C01A, out edx_147)
	fn004116D6(es, ds)
	word32 ebp_83 = fn004114D3(0x00414F9C, es, ds)
	Mem98[fs:0x00000000:word32] = Mem78[ebp_83 - 0x0000000C:word32]
	word32 esp_88 = <invalid>
	fn00411488(es, ds, Mem98[esp_88 + 0x000000EC:word32])
	return Mem98[ebp_83:word32]
fn0041122B_exit:
l00414F3A_1:
	Mem120[edi_119:word32] = 0xCCCCCCCC
	edi_119 = edi_119 + 0x00000004
	ecx_122 = ecx_122 - 0x00000001


word32 fn00411235(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn00411235_entry:
l00411235:
l00411235_thunk_fn0041A9C0:
	return fn0041A9C0(es, ds)
fn00411235_exit:


word32 fn0041123A(word32 ecx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn0041123A_entry:
l0041123A:
l00419120:
	word32 edi_106 = fp - 0x000000DC
	word32 ecx_109 = 0x00000036
l0041913D:
	branch ecx_109 == 0x00000000 l0041913F
l0041913F:
	word32 edx_139
	fn00411460(0x0042C02B, out edx_139)
	word32 dwLoc18_123 = ecx + 0x00000004
	branch (word32) SLICE((uint32) (uint8) fn004115A5(ecx, es, ds), byte, 0) == 0x00000000 l00419177
l00419165:
	dwLoc18_123 = fn004115F5(es, ds)
l00419177:
	fn00411488(es, ds, dwLoc08)
	return dwLoc18_123
fn0041123A_exit:
l0041913D_1:
	Mem107[edi_106:word32] = 0xCCCCCCCC
	edi_106 = edi_106 + 0x00000004
	ecx_109 = ecx_109 - 0x00000001


void fn00411249()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO eax Top
// Preserved: ebp esp
fn00411249_entry:
l00411249:
l0041D970:
	fn004116A4()
	return
fn00411249_exit:


word32 fn0041124E(word32 ecx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn0041124E_entry:
l0041124E:
l004167C0:
	word32 edi_160 = fp - 0x000000E8
	word32 ecx_163 = 0x00000036
l004167EB:
	branch ecx_163 == 0x00000000 l004167ED
l004167ED:
	Mem47[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_184
	fn00411460(0x0042C02B, out edx_184)
	fn00411483(es, ds)
	fn004116E5(es, ds)
	word32 ebp_86 = fn00411636(ecx, es, ds)
	Mem103[ebp_86 - 0x000000DD:byte] = 0x00
	word32 esp_92 = <invalid>
	Mem106[esp_92:word32] = (word32) Mem103[ebp_86 - 0x000000DD:byte]
	Mem109[esp_92 - 4:word32] = Mem106[ebp_86 + 0x00000008:word32]
	Mem121[esp_92 - 4:word32] = fn004115F0(es, ds)
	word32 ebp_124 = fn004111A4(es, ds)
	Mem139[fs:0x00000000:word32] = Mem121[ebp_124 - 0x0000000C:word32]
	word32 esp_130 = <invalid>
	fn00411488(es, ds, Mem139[esp_130 + 0x000000F8:word32])
	return Mem139[ebp_124:word32]
fn0041124E_exit:
l004167EB_1:
	Mem161[edi_160:word32] = 0xCCCCCCCC
	edi_160 = edi_160 + 0x00000004
	ecx_163 = ecx_163 - 0x00000001


void fn00411253()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: esp
fn00411253_entry:
l00411253:
l00411253_thunk_fn0041E0C0:
	fn0041E0C0()
	return
fn00411253_exit:


void fn00411258(word32 ecx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn00411258_entry:
l00411258:
l00411258_thunk_fn004166A0:
	fn004166A0(ecx, es, ds)
	return
fn00411258_exit:


void fn0041125D()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: esp
fn0041125D_entry:
l0041125D:
	call _vcrt_GetModuleHandleW (retsize: 4;)
	return
fn0041125D_exit:


byte fn00411262(word32 edx, word32 ebx, word32 esi, word32 edi, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ebx:[0..31] edi:[0..31] edx:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ebx ecx edx esi Top
// Preserved: ebp esp
fn00411262_entry:
l00411262:
l0041C8F0:
	branch dwArg04 != 0x00000000 l0041C900
l0041C8F9:
	Mem10[0x0042932C:byte] = 0x01
l0041C900:
	word32 eax_74
	fn00411014(edx, ebx, esi, edi, es, ds)
	word32 eax_42 = (word32) fn00411299()
	word24 eax_24_8_75 = SLICE(eax_42, word24, 8)
	branch eax_42 != 0x00000000 l0041C915
l0041C915:
	branch (word32) fn004115D2() != 0x00000000 l0041C92F
l0041C92F:
	eax_74 = SEQ(eax_24_8_75, 0x01) (alias)
l0041C921:
	fn004111DB()
	eax_74 = SEQ(eax_24_8_75, 0x00) (alias)
l0041C911:
	eax_74 = SEQ(eax_24_8_75, 0x00) (alias)
l0041C931:
	return SLICE(eax_74, byte, 0)
fn00411262_exit:


word32 fn0041126C(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn0041126C_entry:
l0041126C:
l00417A90:
	word32 ebp_102 = fp - 4
	word32 edi_198 = fp - 0x000000E0
	word32 ecx_201 = 0x00000037
l00417AAD:
	branch ecx_201 == 0x00000000 l00417AAF
l00417AAF:
	byte bLocDD_218
	word32 edx_227
	fn00411460(0x0042C02B, out edx_227)
	branch 0x00000001 == 0x00000000 l00417AEB
l00417AC6:
	fn00411483(es, ds)
	branch (word32) SLICE((uint32) (uint8) fn0041135C(es, ds), byte, 0) == 0x00000000 l00417AEB
l00417AEB:
	bLocDD_218 = 0x00
l00417AE2:
	bLocDD_218 = 0x01
l00417AF2:
	word32 esp_108 = fp - 0x000000EC
	branch (word32) bLocDD_218 == 0x00000000 l00417B0B
l00417B03:
	ebp_102 = fn00411442(es, ds)
	esp_108 = <invalid>
l00417B0B:
	word32 esp_120 = esp_108 - 4
	Mem121[esp_120:word32] = Mem83[ebp_102 + 0x00000008:word32]
	Mem138[esp_120 - 4:word32] = fn00411483(es, ds)
	word32 esp_146 = <invalid>
	word32 ebp_140 = fn0041122B(es, ds)
	word32 esp_152 = esp_146 + 0x00000008
	branch (word32) Mem138[ebp_140 - 0x00000011:byte] == 0x00000000 l00417B30
l00417B28:
	ebp_140 = fn004113D4(es, ds)
	esp_152 = <invalid>
l00417B30:
	fn00411488(es, ds, Mem138[esp_152 + 0x000000E4:word32])
	return Mem138[ebp_140:word32]
fn0041126C_exit:
l00417AAD_1:
	Mem199[edi_198:word32] = 0xCCCCCCCC
	edi_198 = edi_198 + 0x00000004
	ecx_201 = ecx_201 - 0x00000001


void fn0041127B(word32 ecx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn0041127B_entry:
l0041127B:
l004133D0:
	word32 edi_22 = fp - 0x000000D0
	word32 ecx_23 = 0x00000033
l004133ED:
	branch ecx_23 == 0x00000000 l004133EF
l004133EF:
	word32 edx_105
	fn00411460(0x0042C018, out edx_105)
	fn00411334(es, ds)
	fn00411258(ecx, es, ds)
	fn00411488(es, ds, dwLoc08)
	return
fn0041127B_exit:
l004133ED_1:
	Mem83[edi_22:word32] = 0xCCCCCCCC
	edi_22 = edi_22 + 0x00000004
	ecx_23 = ecx_23 - 0x00000001


word32 fn0041128F(selector es, selector ds, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax edx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn0041128F_entry:
l0041128F:
l00418B30:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_30 = fp - 0x000000DC
	word32 ecx_31 = 0x00000033
l00418B5B:
	branch ecx_31 == 0x00000000 l00418B5D
l00418B5D:
	Mem47[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_119
	fn00411460(0x0042C02B, out edx_119)
	word32 edx_64
	word32 eax_62 = fn0041162C(es, ds, out edx_64)
	Mem71[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0xFFFFFFFF)
	edxOut = edx_64
	return eax_62
fn0041128F_exit:
l00418B5B_1:
	Mem93[edi_30:word32] = 0xCCCCCCCC
	edi_30 = edi_30 + 0x00000004
	ecx_31 = ecx_31 - 0x00000001


word32 fn00411294(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00411294_entry:
l00411294:
l00414610:
	word32 edi_19 = fp - 0x000000C4
	word32 ecx_20 = 0x00000030
l0041462C:
	branch ecx_20 == 0x00000000 l0041462E
l0041462E:
	word32 edx_80
	fn00411460(0x0042C01A, out edx_80)
	fn00411488(es, ds, dwLoc08)
	return dwArg04
fn00411294_exit:
l0041462C_1:
	Mem59[edi_19:word32] = 0xCCCCCCCC
	edi_19 = edi_19 + 0x00000004
	ecx_20 = ecx_20 - 0x00000001


byte fn00411299()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: al
// Trashed: al Top
// Preserved: ebp esp
fn00411299_entry:
l00411299:
l0041FE10:
	return 0x01
fn00411299_exit:


void fn0041129E(char * ptrArg04, rsize_t tArg08, char * ptrArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: eax Top
// Preserved: esp
fn0041129E_entry:
l0041129E:
	strcat_s(ptrArg04, tArg08, ptrArg0C)
	return
fn0041129E_exit:


word32 fn004112AD(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn004112AD_entry:
l004112AD:
l0041B070:
	word32 ebp_151 = fp - 4
	word32 edi_169 = fp - 0x0000010C
	word32 ecx_172 = 0x00000042
l0041B08D:
	branch ecx_172 == 0x00000000 l0041B08F
l0041B08F:
	word32 esp_140
	word32 edx_202
	fn00411460(0x0042C02B, out edx_202)
	word32 edx_203
	word32 eax_46 = fn00411640(es, ds, out edx_203)
	word32 ecx_56 = Mem54[eax_46 + 0x00000014:word32]
	branch ecx_56 >=u Mem57[eax_46 + 0x00000018:word32] l0041B109
l0041B109:
	word32 esp_83 = <invalid>
	ebp_151 = fn004116CC(es, ds)
	esp_140 = esp_83 + 0x0000000C
l0041B0BC:
	Mem94[eax_46 + 0x00000014:word32] = ecx_56 + 0x00000001
	word32 eax_96 = fn0041123A(eax_46, es, ds)
	fn0041154B(es, ds, eax_96 + ecx_56, fp + 0x00000004)
	fn0041154B(es, ds, eax_96 + 0x00000001 + ecx_56, fp - 0x000000F9)
	esp_140 = fp - 0x00000118
l0041B128:
	fn00411488(es, ds, Mem143[esp_140 + 0x00000110:word32])
	return Mem143[ebp_151:word32]
fn004112AD_exit:
l0041B08D_1:
	Mem170[edi_169:word32] = 0xCCCCCCCC
	edi_169 = edi_169 + 0x00000004
	ecx_172 = ecx_172 - 0x00000001


void fn004112C1()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: esp
fn004112C1_entry:
l004112C1:
	call _p___argc (retsize: 4;)
	return
fn004112C1_exit:


word32 fn004112C6(wchar_t * ptrArg04, size_t tArg08, wchar_t * ptrArg0C, wchar_t * ptrArg10, wchar_t * ptrArg14, wchar_t * ptrArg18)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31]
// LiveOut: eax
// Trashed: eax Top
// Preserved: esp
fn004112C6_entry:
l004112C6:
	return _wmakepath_s(ptrArg04, tArg08, ptrArg0C, ptrArg10, ptrArg14, ptrArg18)
fn004112C6_exit:


word32 fn004112D5(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn004112D5_entry:
l004112D5:
l004198F0:
	word32 edi_22 = fp - 0x000000D0
	word32 ecx_23 = 0x00000033
l0041990D:
	branch ecx_23 == 0x00000000 l0041990F
l0041990F:
	word32 edx_114
	fn00411460(0x0042C01A, out edx_114)
	word32 eax_60 = fn004114EC(es, ds, fn0041157D(es, ds))
	fn00411488(es, ds, dwLoc08)
	return eax_60
fn004112D5_exit:
l0041990D_1:
	Mem88[edi_22:word32] = 0xCCCCCCCC
	edi_22 = edi_22 + 0x00000004
	ecx_23 = ecx_23 - 0x00000001


word32 fn004112DA()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax
// Trashed: eax Top
// Preserved: esp
fn004112DA_entry:
l004112DA:
l0041ED60:
	return Mem0[0x00429730:word32]
fn004112DA_exit:


void fn004112F3(selector es, selector ds, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +000C:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn004112F3_entry:
l004112F3:
l0041A6C0:
	word32 edi_19 = fp - 0x000000C4
	word32 ecx_20 = 0x00000030
l0041A6DC:
	branch ecx_20 == 0x00000000 l0041A6DE
l0041A6DE:
	word32 edx_100
	fn00411460(0x0042C01A, out edx_100)
	fn00411613(es, ds, dwArg0C << 0x00000003)
	fn00411488(es, ds, dwLoc08)
	return
fn004112F3_exit:
l0041A6DC_1:
	Mem75[edi_19:word32] = 0xCCCCCCCC
	edi_19 = edi_19 + 0x00000004
	ecx_20 = ecx_20 - 0x00000001


void fn004112F8(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn004112F8_entry:
l004112F8:
l004177E0:
	word32 edi_22 = fp - 0x000000E8
	word32 ecx_100 = 0x00000039
l004177FD:
	branch ecx_100 == 0x00000000 l004177FF
l004177FF:
	word32 edx_124
	fn00411460(0x0042C02B, out edx_124)
	word32 edx_125
	word32 eax_46 = fn00411640(es, ds, out edx_125)
	Mem56[eax_46 + 0x00000014:word32] = 0x00000000
	Mem58[eax_46 + 0x00000018:word32] = 0x0000000F
	fn0041154B(es, ds, eax_46 + 0x00000004, fp - 0x000000E1)
	fn00411488(es, ds, dwLoc08)
	return
fn004112F8_exit:
l004177FD_1:
	Mem98[edi_22:word32] = 0xCCCCCCCC
	edi_22 = edi_22 + 0x00000004
	ecx_100 = ecx_100 - 0x00000001


word32 fn00411302(selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: edx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00411302_entry:
l00411302:
l0041A5B0:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_27 = fp - 0x000000D0
	word32 ecx_28 = 0x00000030
l0041A5DA:
	branch ecx_28 == 0x00000000 l0041A5DC
l0041A5DC:
	Mem42[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_120
	fn00411460(0x0042C017, out edx_120)
	fn00411523(dwArg04, dwArg08, dwArg0C)
	Mem62[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0xFFFFFFFF)
	return dwArg04
fn00411302_exit:
l0041A5DA_1:
	Mem89[edi_27:word32] = 0xCCCCCCCC
	edi_27 = edi_27 + 0x00000004
	ecx_28 = ecx_28 - 0x00000001


void fn00411307(char * ptrArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: Top
// Preserved: esp
fn00411307_entry:
l00411307:
	_Xout_of_range(ptrArg04)
	return
fn00411307_exit:


void fn00411316(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO eax ebx ecx edi edx esi Top
// Preserved: ebp esp
fn00411316_entry:
l00411316:
l004197E0:
	word32 edi_19 = fp - 0x000000C4
	word32 ecx_20 = 0x00000030
l004197FC:
	branch ecx_20 == 0x00000000 l004197FE
l004197FE:
	word32 edx_78
	fn00411460(0x0042C02B, out edx_78)
	fn00411307(0x004264A4)
	fn00411488(es, ds, dwLoc0C)
	return
fn00411316_exit:
l004197FC_1:
	Mem59[edi_19:word32] = 0xCCCCCCCC
	edi_19 = edi_19 + 0x00000004
	ecx_20 = ecx_20 - 0x00000001


word32 fn00411320(selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn00411320_entry:
l00411320:
l00411320_thunk_fn004147A0:
	return fn004147A0(es, ds, dwArg04)
fn00411320_exit:


void fn0041132A(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn0041132A_entry:
l0041132A:
l00419270:
	word32 edi_195 = fp - 0x00000100
	word32 ecx_198 = 0x0000003F
l0041928D:
	branch ecx_198 == 0x00000000 l0041928F
l0041928F:
	word32 edx_212
	fn00411460(0x0042C02B, out edx_212)
	word32 ebp_47 = fn004115D7(es, ds)
	word32 edx_213
	Mem68[ebp_47 - 0x00000014:word32] = fn00411640(es, ds, out edx_213)
	word32 esp_53 = <invalid>
	branch (word32) SLICE((uint32) (uint8) fn004115A5(Mem68[ebp_47 - 0x00000014:word32], es, ds), byte, 0) == 0x00000000 l00419305
l004192BF:
	Mem85[ebp_47 - 0x00000020:word32] = Mem68[Mem68[ebp_47 - 0x00000014:word32] + 0x00000004:word32]
	Mem95[ebp_47 - 0x0000002C:word32] = fn00411483(es, ds)
	Mem100[esp_53 - 4:word32] = Mem95[ebp_47 - 0x00000014:word32] + 0x00000004
	Mem112[esp_53 - 4:word32] = fn004113D9(es, ds)
	Mem115[esp_53 - 8:word32] = Mem112[ebp_47 - 0x0000002C:word32]
	fn004110AF(es, ds)
	Mem130[esp_53 - 4:word32] = Mem115[Mem115[ebp_47 - 0x00000014:word32] + 0x00000018:word32] + 0x00000001
	Mem133[esp_53 - 8:word32] = Mem130[ebp_47 - 0x00000020:word32]
	fn00411695(es, ds, Mem133[esp_53 - 4:word32])
l00419305:
	Mem147[Mem145[ebp_47 - 0x00000014:word32] + 0x00000014:word32] = 0x00000000
	Mem149[Mem147[ebp_47 - 0x00000014:word32] + 0x00000018:word32] = 0x0000000F
	Mem150[ebp_47 - 0x000000F5:byte] = 0x00
	Mem154[esp_53 - 4:word32] = ebp_47 - 0x000000F5
	Mem161[esp_53 - 8:word32] = Mem154[ebp_47 - 0x00000014:word32] + 0x00000004
	fn0041154B(es, ds, Mem161[esp_53 - 8:word32], Mem161[esp_53 - 4:word32])
	fn00411488(es, ds, Mem161[esp_53 + 0x00000104:word32])
	return
fn0041132A_exit:
l0041928D_1:
	Mem196[edi_195:word32] = 0xCCCCCCCC
	edi_195 = edi_195 + 0x00000004
	ecx_198 = ecx_198 - 0x00000001


void fn00411334(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn00411334_entry:
l00411334:
l00411334_thunk_fn00416730:
	fn00416730(es, ds)
	return
fn00411334_exit:


word32 fn0041133E()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax
// Trashed: eax Top
// Preserved: ebp esp
fn0041133E_entry:
l0041133E:
l0041F0E0:
	return 0x00429768
fn0041133E_exit:


word32 fn00411348(word32 edx, selector es, selector ds, word32 dwArg04, word32 dwArg08, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] edx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: ebp ebx edi esi esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn00411348_entry:
l00411348:
l0041E320:
	word32 ebp_106 = fp - 4
	word32 esp_118 = fp - 0x00000414
	branch Mem22[0x00429028:word32] == 0xFFFFFFFF l0041E3BA
l0041E347:
	word32 eax_41
	branch Mem22[dwArg08:byte] == 0x00 l0041E3A8
l0041E34C:
	branch fn0041E490(dwArg08, out edx) >u 0x000003D3 l0041E3A8
l0041E3A8:
	eax_41 = 0x00426AC0
l0041E35F:
	fn004115B4(fp - 0x00000408, 0x00000400, 0x004265E0)
	fn0041129E(fp - 0x00000408, 0x00000400, dwArg08)
	fn0041129E(fp - 0x00000408, 0x00000400, 0x004265FC)
	eax_41 = fp - 0x00000408
l0041E3AD:
	fn0041E4B0(edx, es, ds, dwArg04, 0x00000002, eax_41, out edx, out ebp_106)
	word32 esp_112 = <invalid>
	esp_118 = esp_112 + 0x00000010
l0041E3BA:
	word32 esp_125 = esp_118 + 4
	word32 edi_124 = Mem121[esp_118:word32]
	word32 esi_126 = Mem121[esp_125:word32]
	word32 ebx_131 = Mem121[esp_125 + 4:word32]
	word32 ebp_141
	word32 ecx_176
	word32 edx_177
	fn004113E3(Mem121[ebp_106 - 0x00000004:word32] ^ ebp_106, edx, ebx_131, ebp_106, esi_126, edi_124, es, ds, Mem121[esp_125 + 4:word32], out ecx_176, out edx_177, out ebp_141)
	ebpOut = Mem121[ebp_141:word32]
	esiOut = esi_126
	ediOut = edi_124
	return ebx_131
fn00411348_exit:


void fn0041134D(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn0041134D_entry:
l0041134D:
l004146E0:
	word32 edi_19 = fp - 0x000000C4
	word32 ecx_20 = 0x00000030
l004146FC:
	branch ecx_20 == 0x00000000 l004146FE
l004146FE:
	word32 edx_100
	fn00411460(0x0042C01A, out edx_100)
	fn004112F3(es, ds, 0x00000001)
	fn00411488(es, ds, dwLoc08)
	return
fn0041134D_exit:
l004146FC_1:
	Mem74[edi_19:word32] = 0xCCCCCCCC
	edi_19 = edi_19 + 0x00000004
	ecx_20 = ecx_20 - 0x00000001


void fn00411357(word32 ecx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn00411357_entry:
l00411357:
l00411357_thunk_fn00416B40:
	fn00416B40(ecx, es, ds)
	return
fn00411357_exit:


byte fn0041135C(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn0041135C_entry:
l0041135C:
l00414250:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_27 = fp - 0x000000D0
	word32 ecx_28 = 0x00000030
l0041427A:
	branch ecx_28 == 0x00000000 l0041427C
l0041427C:
	Mem42[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_103
	fn00411460(0x0042C01A, out edx_103)
	Mem52[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0xFFFFFFFF)
	return 0x00
fn0041135C_exit:
l0041427A_1:
	Mem79[edi_27:word32] = 0xCCCCCCCC
	edi_27 = edi_27 + 0x00000004
	ecx_28 = ecx_28 - 0x00000001


void fn00411361(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00411361_entry:
l00411361:
l00414D10:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_27 = fp - 0x000000D0
	word32 ecx_28 = 0x00000030
l00414D3A:
	branch ecx_28 == 0x00000000 l00414D3C
l00414D3C:
	Mem42[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_104
	fn00411460(0x0042C017, out edx_104)
	Mem53[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0xFFFFFFFF)
	return
fn00411361_exit:
l00414D3A_1:
	Mem80[edi_27:word32] = 0xCCCCCCCC
	edi_27 = edi_27 + 0x00000004
	ecx_28 = ecx_28 - 0x00000001


void fn00411366()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: esp
fn00411366_entry:
l00411366:
l00411366_thunk_fn0041D590:
	fn0041D590()
	return
fn00411366_exit:


word32 fn0041137F(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn0041137F_entry:
l0041137F:
l004159B0:
	word32 edi_19 = fp - 0x000000C4
	word32 ecx_20 = 0x00000030
l004159CC:
	branch ecx_20 == 0x00000000 l004159CE
l004159CE:
	word32 edx_80
	fn00411460(0x0042C030, out edx_80)
	fn00411488(es, ds, dwLoc08)
	return dwArg04
fn0041137F_exit:
l004159CC_1:
	Mem59[edi_19:word32] = 0xCCCCCCCC
	edi_19 = edi_19 + 0x00000004
	ecx_20 = ecx_20 - 0x00000001


void fn00411384()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp esp
fn00411384_entry:
l00411384:
l0041D900:
	fn004110DC(fp - 0x00000010)
	fn0041178A()
	return
fn00411384_exit:


word32 fn0041138E(selector es, selector ds, word128 xmm0, word32 dwArg04, word32 dwArg08, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] xmm0:[0..127]
// LiveOut: eax ebp esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn0041138E_entry:
l0041138E:
l00413C10:
	word32 edi_30 = fp - 0x00000168
	word32 ecx_31 = 0x00000055
l00413C3B:
	branch ecx_31 == 0x00000000 l00413C3D
l00413C3D:
	Mem46[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_812
	fn00411460(0x0042C02D, out edx_812)
	word32 eax_64 = fn00411136(es, ds, dwArg08)
	word64 edx_eax_82 = width(dwArg04 + Mem75[Mem75[dwArg04:word32] + 0x00000004:word32])
	fn00411488(es, ds, dwArg08)
	word32 dwLoc20_683 = 0x00000000
	word32 eax_90 = SLICE(edx_eax_82, word32, 0)
	word32 edx_92 = SLICE(edx_eax_82, word32, 32)
	branch edx_92 < 0x00000000 l00413D23
l00413CAA:
	branch edx_92 > 0x00000000 l00413CB5
l00413CAC:
	branch eax_90 <=u 0x00000000 l00413D23
l00413CB5:
	word64 edx_eax_108 = width(dwArg04 + Mem93[Mem93[dwArg04:word32] + 0x00000004:word32])
	fn00411488(es, ds, dwArg08)
	word32 eax_122 = SLICE(edx_eax_108, word32, 0)
	word32 edx_124 = SLICE(edx_eax_108, word32, 32)
	branch edx_124 < 0x00000000 l00413D23
l00413CE8:
	branch edx_124 > 0x00000000 l00413CF5
l00413CEA:
	branch eax_122 <=u eax_64 l00413D23
l00413D23:
	__xorps(xmm0, xmm0)
l00413CF5:
	word64 edx_eax_147 = width(dwArg04 + Mem125[Mem125[dwArg04:word32] + 0x00000004:word32])
	fn00411488(es, ds, dwArg08)
	word64 edx_eax_671 = edx_eax_147 - (uint64) ((uint32) eax_64)
	word32 eax_162 = SLICE(edx_eax_671, word32, 0)
	word32 edx_166 = SLICE(edx_eax_671, word32, 32)
l00413D2E:
	fn004116EF(fp - 0x00000050, es, ds, dwArg04)
	word32 dwLoc40_703 = eax_162
	word32 dwLoc3C_704 = edx_166
	branch (word32) SLICE((uint32) (uint8) fn0041103C(fp - 0x00000050, es, ds), byte, 0) != 0x00000000 l00413D70
l00413D70:
	word32 eax_211 = flags(dwArg04 + Mem204[Mem204[dwArg04:word32] + 0x00000004:word32])
	fn00411488(es, ds, dwLoc0180)
	branch (eax_211 & 0x000001C0) == 0x00000040 l00413E7F
l00413DAA:
l00413DBE:
	branch dwLoc3C_704 < 0x00000000 l00413E7F
l00413DC8:
	branch dwLoc3C_704 > 0x00000000 l00413DD4
l00413DCA:
	branch dwLoc40_703 <=u 0x00000000 l00413E7F
l00413DD4:
	byte al_241 = fill(dwArg04 + Mem225[Mem225[dwArg04:word32] + 0x00000004:word32])
	fn00411488(es, ds, dwLoc0180)
	word32 eax_268 = rdbuf(dwArg04 + Mem261[Mem261[dwArg04:word32] + 0x00000004:word32])
	fn00411488(es, ds, dwLoc0180)
	word32 eax_278 = (word32) al_241
	sputc(eax_268, SLICE(eax_278, char, 0))
	fn00411488(es, ds, eax_278)
	fn00411235(es, ds)
	dwLoc0180 = fp - 0x0000011C
	branch (word32) SLICE((uint32) (uint8) fn00411456(es, ds, fp - 0x00000128, fp - 0x0000011C), byte, 0) == 0x00000000 l00413E7A
l00413E7A:
l00413DAC:
	dwLoc40_703 = dwLoc40_703 - 0x00000001
	dwLoc3C_704 = dwLoc3C_704 - (dwLoc40_703 <u 0x00000001)
l00413E6F:
	dwLoc20_683 = 0x00000004
l00413E7F:
	branch dwLoc20_683 != 0x00000000 l00413EF3
l00413E85:
	word32 eax_348 = rdbuf(dwArg04 + Mem338[Mem338[dwArg04:word32] + 0x00000004:word32])
	fn00411488(es, ds, dwLoc0180)
	word64 edx_eax_374 = sputn(eax_348, dwArg08, (uint64) (uint32) eax_64)
	fn00411488(es, ds, 0x00000000)
	dwLoc0180 = 0x00000000
	word32 edx_385 = SLICE(edx_eax_374, word32, 32)
	branch SLICE(edx_eax_374, word32, 0) != eax_64 l00413EEA
l00413EDF:
	branch edx_385 == 0x00000000 l00413EF3
l00413EEA:
	dwLoc20_683 = dwLoc20_683 | 0x00000004
l00413EF3:
	branch dwLoc20_683 != 0x00000000 l00413FD2
l00413EFD:
l00413F11:
	branch dwLoc3C_704 < 0x00000000 l00413FD2
l00413F1B:
	branch dwLoc3C_704 > 0x00000000 l00413F27
l00413F1D:
	branch dwLoc40_703 <=u 0x00000000 l00413FD2
l00413F27:
	byte al_421 = fill(dwArg04 + Mem405[Mem405[dwArg04:word32] + 0x00000004:word32])
	fn00411488(es, ds, dwLoc0180)
	word32 eax_448 = rdbuf(dwArg04 + Mem441[Mem441[dwArg04:word32] + 0x00000004:word32])
	fn00411488(es, ds, dwLoc0180)
	word32 eax_458 = (word32) al_421
	sputc(eax_448, SLICE(eax_458, char, 0))
	fn00411488(es, ds, eax_458)
	fn00411235(es, ds)
	dwLoc0180 = fp - 0x00000134
	branch (word32) SLICE((uint32) (uint8) fn00411456(es, ds, fp - 0x00000140, fp - 0x00000134), byte, 0) == 0x00000000 l00413FCD
l00413FCD:
l00413EFF:
	dwLoc40_703 = dwLoc40_703 - 0x00000001
	dwLoc3C_704 = dwLoc3C_704 - (dwLoc40_703 <u 0x00000001)
l00413FC2:
	dwLoc20_683 = dwLoc20_683 | 0x00000004
l00413FD2:
	width(dwArg04 + Mem524[Mem524[dwArg04:word32] + 0x00000004:word32], 0)
	fn00411488(es, ds, 0x00000000)
l0041401A:
l00413D62:
	dwLoc20_683 = 0x00000004
l0041402A:
	setstate(dwArg04 + Mem571[Mem571[dwArg04:word32] + 0x00000004:word32], dwLoc20_683, '\x00')
	fn00411488(es, ds, 0x00000000)
	fn00411203(fp - 0x00000050, es, ds)
	word32 ebp_612 = fn004114D3(0x004140A4, es, ds)
	word32 esp_617 = <invalid>
	word32 edx_624 = Mem607[esp_617 + 4:word32]
	Mem627[fs:0x00000000:word32] = Mem607[ebp_612 - 0x0000000C:word32]
	word32 ebp_641
	word32 ecx_813
	word32 edx_814
	word32 eax_640 = fn004113E3(Mem627[ebp_612 - 0x00000014:word32] ^ ebp_612, edx_624, Mem627[esp_617 + 20:word32], ebp_612, Mem627[esp_617 + 16:word32], Mem627[esp_617 + 12:word32], es, ds, Mem627[esp_617 + 20:word32], out ecx_813, out edx_814, out ebp_641)
	fn00411488(es, ds, Mem627[esp_617 + 0x00000178:word32])
	ebpOut = Mem627[ebp_641:word32]
	return eax_640
fn0041138E_exit:
l00413C3B_1:
	Mem661[edi_30:word32] = 0xCCCCCCCC
	edi_30 = edi_30 + 0x00000004
	ecx_31 = ecx_31 - 0x00000001


byte fn00411398(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] Stack +0004:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00411398_entry:
l00411398:
l0041CA70:
	word32 eax_151
	word32 eax_15 = Mem13[fs:0x00000000:word32]
	Mem38[fs:0x00000000:word32] = fp - 0x00000014
	word32 eax_47 = (uint32) (uint8) fn0041C660(0x00400000)
	word24 eax_24_8_152 = SLICE(eax_47, word24, 8)
	branch (word32) SLICE(eax_47, byte, 0) != 0x00000000 l0041CADD
l0041CADD:
	word32 eax_70 = fn0041C5A0(0x00400000, dwArg04 - 0x00400000)
	word24 eax_24_8_154 = SLICE(eax_70, word24, 8)
	branch eax_70 != 0x00000000 l0041CB0F
l0041CB0F:
	word24 eax_24_8_156 = SLICE(eax_70, word24, 8)
	branch (Mem78[eax_70 + 0x00000024:word32] & 0x80000000) == 0x00000000 l0041CB2D
l0041CB2D:
	eax_151 = SEQ(eax_24_8_156, 0x01) (alias)
l0041CB1D:
	eax_151 = SEQ(eax_24_8_156, 0x00) (alias)
l0041CAFF:
	eax_151 = SEQ(eax_24_8_154, 0x00) (alias)
l0041CACA:
	eax_151 = SEQ(eax_24_8_152, 0x00) (alias)
l0041CB87:
	Mem103[fs:0x00000000:word32] = eax_15
	return SLICE(eax_151, byte, 0)
fn00411398_exit:


void fn004113A7()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: esp
fn004113A7_entry:
l004113A7:
	call initterm (retsize: 4;)
	return
fn004113A7_exit:


word32 fn004113AC(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn004113AC_entry:
l004113AC:
l00418BC0:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_30 = fp - 0x000000DC
	word32 ecx_31 = 0x00000033
l00418BEB:
	branch ecx_31 == 0x00000000 l00418BED
l00418BED:
	Mem47[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_110
	fn00411460(0x0042C018, out edx_110)
	Mem58[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0xFFFFFFFF)
	return ecx
fn004113AC_exit:
l00418BEB_1:
	Mem85[edi_30:word32] = 0xCCCCCCCC
	edi_30 = edi_30 + 0x00000004
	ecx_31 = ecx_31 - 0x00000001


byte fn004113BB()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp esp
fn004113BB_entry:
l004113BB:
l0041DF60:
	word32 eax_69
	word32 eax_11 = GetModuleHandleW(0x00000000)
	word24 eax_24_8_70 = SLICE(eax_11, word24, 8)
	branch eax_11 != 0x00000000 l0041DF7B
l0041DF7B:
	word24 eax_24_8_72 = SLICE(eax_11, word24, 8)
	branch (word32) Mem12[eax_11:word16] == 0x00005A4D l0041DF8D
l0041DF8D:
	word32 eax_21 = eax_11 + Mem12[eax_11 + 0x0000003C:word32]
	word24 eax_24_8_74 = SLICE(eax_21, word24, 8)
	branch Mem22[eax_21:word32] == 0x00004550 l0041DFA8
l0041DFA8:
	word32 eax_27 = (word32) Mem22[eax_21 + 0x00000018:word16]
	word24 eax_24_8_76 = SLICE(eax_27, word24, 8)
	branch eax_27 == 0x0000010B l0041DFBA
l0041DFBA:
	branch Mem22[eax_21 + 0x00000074:word32] >u 0x0000000E l0041DFC7
l0041DFC7:
	branch Mem22[eax_21 + 0x000000E8:word32] != 0x00000000 l0041DFDD
l0041DFDD:
	eax_69 = 0x00000001 (alias)
l0041DFD9:
	eax_69 = 0x00000000 (alias)
l0041DFC3:
	eax_69 = SEQ(eax_24_8_76, 0x00) (alias)
l0041DFB6:
	eax_69 = SEQ(eax_24_8_76, 0x00) (alias)
l0041DFA4:
	eax_69 = SEQ(eax_24_8_74, 0x00) (alias)
l0041DF89:
	eax_69 = SEQ(eax_24_8_72, 0x00) (alias)
l0041DF77:
	eax_69 = SEQ(eax_24_8_70, 0x00) (alias)
l0041DFDF:
	return SLICE(eax_69, byte, 0)
fn004113BB_exit:


word32 fn004113C0(selector es, selector ds, word32 dwArg04, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut: eax ebp esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn004113C0_entry:
l004113C0:
l00413610:
	word32 edi_19 = fp - 0x000000C4
	word32 ecx_20 = 0x00000030
l0041362C:
	branch ecx_20 == 0x00000000 l0041362E
l0041362E:
	word32 edx_118
	fn00411460(0x0042C027, out edx_118)
	word32 ebp_65
	word32 eax_64 = fn00411177(es, ds, dwArg04, fn004111E5(es, ds), fn004116BD(es, ds), out ebp_65)
	word32 esp_71 = <invalid>
	fn00411488(es, ds, Mem63[esp_71 + 0x000000D4:word32])
	ebpOut = Mem63[ebp_65:word32]
	return eax_64
fn004113C0_exit:
l0041362C_1:
	Mem97[edi_19:word32] = 0xCCCCCCCC
	edi_19 = edi_19 + 0x00000004
	ecx_20 = ecx_20 - 0x00000001


void fn004113CA(selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn004113CA_entry:
l004113CA:
l0041AB10:
	word32 edi_100 = fp - 0x000000DC
	word32 ecx_103 = 0x00000036
l0041AB2D:
	branch ecx_103 == 0x00000000 l0041AB2F
l0041AB2F:
	word32 edx_128
	fn00411460(0x0042C02B, out edx_128)
	word32 edx_129
	fn004111A9(fn00411640(es, ds, out edx_129), es, ds, dwArg04)
	fn004110E1(es, ds, dwArg04)
	fn00411488(es, ds, dwLoc08)
	return
fn004113CA_exit:
l0041AB2D_1:
	Mem101[edi_100:word32] = 0xCCCCCCCC
	edi_100 = edi_100 + 0x00000004
	ecx_103 = ecx_103 - 0x00000001


word32 fn004113D4(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn004113D4_entry:
l004113D4:
l004178D0:
	word32 edi_22 = fp - 0x000000F0
	word32 ecx_23 = 0x0000003B
l004178ED:
	branch ecx_23 == 0x00000000 l004178EF
l004178EF:
	word32 edx_255
	fn00411460(0x0042C02B, out edx_255)
	fn00411483(es, ds)
	fn00411555(es, ds)
	fn00411438(es, ds, 0x00000001)
	word32 edx_256
	Mem105[fn00411758(es, ds, out edx_256):word32] = fn0041137F(es, ds)
	fn00411546(fp - 0x000000EC, es, ds)
	word32 edx_257
	fn00411758(es, ds, out edx_257)
	fn0041174E(es, ds)
	word32 edx_258
	fn00411640(es, ds, out edx_258)
	word32 edx_259
	Mem174[Mem152[fn00411758(es, ds, out edx_259):word32]:word32] = fn00411631(es, ds)
	word32 ebp_184 = fn004114D3(0x004179A8, es, ds)
	word32 esp_189 = <invalid>
	word32 ebp_209
	word32 ecx_260
	word32 edx_261
	fn004113E3(Mem179[ebp_184 - 0x00000004:word32] ^ ebp_184, Mem179[esp_189 + 4:word32], Mem179[esp_189 + 16:word32], ebp_184, Mem179[esp_189 + 12:word32], Mem179[esp_189 + 8:word32], es, ds, Mem179[esp_189 + 16:word32], out ecx_260, out edx_261, out ebp_209)
	fn00411488(es, ds, Mem179[esp_189 + 0x000000FC:word32])
	return Mem179[ebp_209:word32]
fn004113D4_exit:
l004178ED_1:
	Mem229[edi_22:word32] = 0xCCCCCCCC
	edi_22 = edi_22 + 0x00000004
	ecx_23 = ecx_23 - 0x00000001


word32 fn004113D9(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn004113D9_entry:
l004113D9:
l00415A00:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_27 = fp - 0x000000D0
	word32 ecx_28 = 0x00000030
l00415A2A:
	branch ecx_28 == 0x00000000 l00415A2C
l00415A2C:
	Mem42[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_103
	fn00411460(0x0042C030, out edx_103)
	Mem52[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0xFFFFFFFF)
	return dwArg04
fn004113D9_exit:
l00415A2A_1:
	Mem79[edi_27:word32] = 0xCCCCCCCC
	edi_27 = edi_27 + 0x00000004
	ecx_28 = ecx_28 - 0x00000001


word32 fn004113E3(word32 ecx, word32 edx, word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, word32 dwArg00, ptr32 & ecxOut, ptr32 & edxOut, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ebx:[0..31] ecx:[0..31] edi:[0..31] edx:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0000:[0..31]
// LiveOut: eax ebp ecx edx
// Trashed: SCZO eax ebp ecx edx Top
// Preserved: esp
fn004113E3_entry:
l004113E3:
l004113E3_thunk_fn0041D010:
	word32 ebp_18
	word32 ecx_19
	word32 edx_20
	word32 eax_17 = fn0041D010(ecx, edx, ebx, ebp, esi, edi, es, ds, dwArg00, out ecx_19, out edx_20, out ebp_18)
	ecxOut = ecx_19
	edxOut = edx_20
	ebpOut = ebp_18
	return eax_17
fn004113E3_exit:


void fn004113F7(selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn004113F7_entry:
l004113F7:
l00417C00:
	word32 edi_101 = fp - 0x000000DC
	word32 ecx_102 = 0x00000036
l00417C1D:
	branch ecx_102 == 0x00000000 l00417C1F
l00417C1F:
	word32 edx_134
	fn00411460(0x0042C02B, out edx_134)
	fn00411302(es, ds, dwArg04, dwArg0C, dwArg08)
	fn0041154B(es, ds, dwArg04 + dwArg08, fp - 0x000000D5)
	fn00411488(es, ds, dwLoc08)
	return
fn004113F7_exit:
l00417C1D_1:
	Mem100[edi_101:word32] = 0xCCCCCCCC
	edi_101 = edi_101 + 0x00000004
	ecx_102 = ecx_102 - 0x00000001


word32 fn00411406(selector es, selector ds, ptr32 & edxOut, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax ebp edx esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn00411406_entry:
l00411406:
l00417210:
	word32 edi_111 = fp - 0x000000DC
	word32 ecx_114 = 0x00000033
l0041723B:
	branch ecx_114 == 0x00000000 l0041723D
l0041723D:
	Mem47[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_133
	fn00411460(0x0042C02B, out edx_133)
	fn0041132A(es, ds)
	word32 ebp_77
	word32 edx_81
	word32 eax_76 = fn00411104(es, ds, out edx_81, out ebp_77)
	Mem90[fs:0x00000000:word32] = Mem48[ebp_77 - 0x0000000C:word32]
	word32 esp_83 = <invalid>
	fn00411488(es, ds, Mem90[esp_83 + 0x000000E4:word32])
	word32 ebp_108 = Mem90[ebp_77:word32]
	edxOut = edx_81
	ebpOut = ebp_108
	return eax_76
fn00411406_exit:
l0041723B_1:
	Mem112[edi_111:word32] = 0xCCCCCCCC
	edi_111 = edi_111 + 0x00000004
	ecx_114 = ecx_114 - 0x00000001


void fn00411410(word32 ecx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax edx Top
// Preserved: ebp ecx esp
fn00411410_entry:
l00411410:
l0041D620:
	fn00411041(ecx, dwArg04)
	Mem26[ecx:word32] = 0x00426564
	return
fn00411410_exit:


word32 fn0041141A(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn0041141A_entry:
l0041141A:
l004199E0:
	word32 edi_103 = fp - 0x000000DC
	word32 ecx_106 = 0x00000036
l004199FD:
	branch ecx_106 == 0x00000000 l004199FF
l004199FF:
	word32 edx_125
	fn00411460(0x0042C02B, out edx_125)
	word32 edx_126
	word32 eax_46 = fn0041128F(es, ds, out edx_126)
	word32 ebp_72 = fn00411717(es, ds, fn0041108C(eax_46, es, ds), Mem54[eax_46 + 0x00000014:word32])
	word32 esp_78 = <invalid>
	fn00411488(es, ds, Mem69[esp_78 + 0x000000E8:word32])
	return Mem69[ebp_72:word32]
fn0041141A_exit:
l004199FD_1:
	Mem104[edi_103:word32] = 0xCCCCCCCC
	edi_103 = edi_103 + 0x00000004
	ecx_106 = ecx_106 - 0x00000001


word32 fn0041141F(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn0041141F_entry:
l0041141F:
l00415070:
	word32 edi_22 = fp - 0x00000110
	word32 ecx_23 = 0x00000043
l0041508D:
	branch ecx_23 == 0x00000000 l0041508F
l0041508F:
	word32 edx_341
	fn00411460(0x0042C02B, out edx_341)
	word32 esp_58 = <invalid>
	word32 esi_342
	word32 ebp_52
	branch Mem36[ebp_52 + 0x00000008:word32] <=u fn004116B3(es, ds, out ebp_52, out esi_342) l004150B9
l004150B4:
	fn0041119A(es, ds)
l004150B9:
	word32 edx_229
	word32 edx_343
	Mem94[ebp_52 - 0x00000018:word32] = fn00411640(es, ds, out edx_343)
	Mem97[ebp_52 - 0x00000024:word32] = Mem94[Mem94[ebp_52 - 0x00000018:word32] + 0x00000018:word32]
	Mem101[esp_58 - 4:word32] = Mem97[ebp_52 + 0x00000008:word32]
	word32 ebp_104
	Mem115[ebp_104 - 0x00000030:word32] = fn0041105A(es, ds, out ebp_104)
	Mem125[ebp_104 - 0x0000003C:word32] = fn00411483(es, ds)
	word32 ecx_127 = Mem125[ebp_104 - 0x00000030:word32]
	Mem139[esp_58 - 8:word32] = -(uint32) (uint8) (ecx_127 <u 0x00000001) | ecx_127 + 0x00000001
	Mem150[ebp_104 - 0x00000048:word32] = fn004112D5(es, ds)
	word32 ebp_153 = fn00411479(Mem150[ebp_104 - 0x00000018:word32], es, ds)
	Mem167[Mem150[ebp_153 - 0x00000018:word32] + 0x00000014:word32] = Mem150[ebp_153 + 0x00000008:word32]
	Mem170[Mem167[ebp_153 - 0x00000018:word32] + 0x00000018:word32] = Mem167[ebp_153 - 0x00000030:word32]
	word32 esp_159 = <invalid>
	Mem173[esp_159 - 4:word32] = Mem170[ebp_153 + 0x00000010:word32]
	Mem176[esp_159 - 8:word32] = Mem173[ebp_153 + 0x00000008:word32]
	Mem179[esp_159 - 12:word32] = Mem176[ebp_153 - 0x00000048:word32]
	Mem191[esp_159 - 0x0000000C:word32] = fn004115F5(es, ds)
	fn004113F7(es, ds, Mem191[esp_159 - 0x0000000C:word32], Mem191[esp_159 - 0x00000008:word32], Mem191[esp_159 - 0x00000004:word32])
	branch Mem191[ebp_153 - 0x00000024:word32] <u 0x00000010 l00415160
l00415160:
	Mem206[esp_159 - 4:word32] = ebp_153 - 0x00000048
	Mem211[esp_159 - 8:word32] = Mem206[ebp_153 - 0x00000018:word32] + 0x00000004
	Mem223[esp_159 - 0x00000008:word32] = fn004113D9(es, ds)
	Mem226[esp_159 - 0x0000000C:word32] = Mem223[ebp_153 - 0x0000003C:word32]
	edx_229 = fn004114DD(es, ds)
l0041513F:
	Mem241[esp_159 - 4:word32] = Mem191[ebp_153 - 0x00000024:word32] + 0x00000001
	Mem245[esp_159 - 8:word32] = Mem241[Mem241[ebp_153 - 0x00000018:word32] + 0x00000004:word32]
	edx_229 = fn00411695(es, ds, Mem245[esp_159 - 4:word32])
	Mem258[Mem245[ebp_153 - 0x00000018:word32] + 0x00000004:word32] = Mem245[ebp_153 - 0x00000048:word32]
l00415180:
	word32 eax_261 = Mem260[ebp_153 - 0x0000000C:word32]
	Mem265[esp_159 - 4:word32] = edx_229
	Mem268[esp_159 - 8:word32] = eax_261
	word32 ebp_279 = fn004114D3(0x004151B4, es, ds)
	word32 esp_284 = <invalid>
	word32 edx_345
	word32 ecx_344
	word32 ebp_304
	fn004113E3(Mem268[ebp_279 - 0x00000004:word32] ^ ebp_279, Mem268[esp_284 + 4:word32], Mem268[esp_284 + 16:word32], ebp_279, Mem268[esp_284 + 12:word32], Mem268[esp_284 + 8:word32], es, ds, Mem268[esp_284 + 16:word32], out ecx_344, out edx_345, out ebp_304)
	fn00411488(es, ds, Mem268[esp_284 + 0x0000011C:word32])
	return Mem268[ebp_304:word32]
fn0041141F_exit:
l0041508D_1:
	Mem324[edi_22:word32] = 0xCCCCCCCC
	edi_22 = edi_22 + 0x00000004
	ecx_23 = ecx_23 - 0x00000001


word32 fn00411424(selector es, selector ds, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax edx
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn00411424_entry:
l00411424:
l00411424_thunk_fn004172B0:
	word32 edx_12
	word32 eax_10 = fn004172B0(es, ds, out edx_12)
	edxOut = edx_12
	return eax_10
fn00411424_exit:


void fn0041142E(word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut:
// Trashed: SCZO eax ebx ecx edi edx esi Top
// Preserved: ebp esp
fn0041142E_entry:
l0041142E:
l0041C260:
	word32 eax_15 = Mem13[fs:0x00000000:word32]
	Mem36[fs:0x00000000:word32] = fp - 0x00000014
	word32 dwArg04_112 = dwArg08 *s dwArg0C + dwArg04
l0041C2A8:
	dwArg0C = dwArg0C - 0x00000001
	branch dwArg0C <=u 0x00000000 l0041C2DD
l0041C2DD:
	fn0041C2EF(fp - 4)
l0041C30D:
	Mem68[fs:0x00000000:word32] = eax_15
	return
fn0041142E_exit:
l0041C2BD:
	word32 eax_80 = dwArg04_112 - dwArg08
	fn00411366()
	call dwArg10 (retsize: 4;)
		uses: ecx:eax_80,Stack +0008:eax_80,Stack +000C:dwArg08,Stack +0010:dwArg0C_114 - 0x00000001,Stack +0014:dwArg10
	dwArg04_112 = eax_80


word32 fn00411433(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn00411433_entry:
l00411433:
l00417DA0:
	word32 edi_22 = fp - 0x000000D0
	word32 ecx_23 = 0x00000033
l00417DBD:
	branch ecx_23 == 0x00000000 l00417DBF
l00417DBF:
	word32 edx_102
	fn00411460(0x0042C02B, out edx_102)
	word32 ebp_50 = fn004112AD(es, ds)
	word32 esp_56 = <invalid>
	fn00411488(es, ds, Mem41[esp_56 + 0x000000D8:word32])
	return Mem41[ebp_50:word32]
fn00411433_exit:
l00417DBD_1:
	Mem83[edi_22:word32] = 0xCCCCCCCC
	edi_22 = edi_22 + 0x00000004
	ecx_23 = ecx_23 - 0x00000001


void fn00411438(selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00411438_entry:
l00411438:
l00419960:
	word32 edi_22 = fp - 0x000000D0
	word32 ecx_23 = 0x00000033
l0041997D:
	branch ecx_23 == 0x00000000 l0041997F
l0041997F:
	word32 edx_114
	fn00411460(0x0042C01A, out edx_114)
	fn004114EC(es, ds, fn00411320(es, ds, dwArg04))
	fn00411488(es, ds, dwLoc08)
	return
fn00411438_exit:
l0041997D_1:
	Mem88[edi_22:word32] = 0xCCCCCCCC
	edi_22 = edi_22 + 0x00000004
	ecx_23 = ecx_23 - 0x00000001


void fn0041143D(selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn0041143D_entry:
l0041143D:
l004162D0:
	word32 edi_120 = fp - 0x000000DC
	word32 ecx_123 = 0x00000036
l004162ED:
	branch ecx_123 == 0x00000000 l004162EF
l004162EF:
	word32 edx_162
	fn00411460(0x0042C02B, out edx_162)
	fn00411302(es, ds, dwArg04, dwArg08, dwArg0C)
	fn00411302(es, ds, dwArg04 + dwArg0C, dwArg10, dwArg14)
	fn0041154B(es, ds, dwArg0C + dwArg14 + dwArg04, fp - 0x000000D5)
	fn00411488(es, ds, dwLoc08)
	return
fn0041143D_exit:
l004162ED_1:
	Mem121[edi_120:word32] = 0xCCCCCCCC
	edi_120 = edi_120 + 0x00000004
	ecx_123 = ecx_123 - 0x00000001


word32 fn00411442(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn00411442_entry:
l00411442:
l004189A0:
	word32 edi_198 = fp - 0x000000E0
	word32 ecx_201 = 0x00000037
l004189BD:
	branch ecx_201 == 0x00000000 l004189BF
l004189BF:
	word32 edx_217
	fn00411460(0x0042C02B, out edx_217)
	fn00411483(es, ds)
	fn00411555(es, ds)
	word32 ebp_73 = fn004115D7(es, ds)
	word32 esp_79 = <invalid>
	word32 edx_218
	Mem96[esp_79 - 4:word32] = Mem60[fn00411758(es, ds, out edx_218):word32]
	Mem99[esp_79 - 8:word32] = ebp_73 - 0x00000015
	fn004115C3(es, ds)
	word32 edx_219
	Mem121[esp_79 - 4:word32] = Mem99[fn00411758(es, ds, out edx_219):word32]
	Mem124[esp_79 - 8:word32] = ebp_73 - 0x00000015
	fn0041134D(es, ds)
	word32 edx_138
	word32 eax_136 = fn00411758(es, ds, out edx_138)
	Mem144[eax_136:word32] = 0x00000000
	Mem146[esp_79 - 4:word32] = edx_138
	Mem149[esp_79 - 8:word32] = eax_136
	word32 ebp_154 = fn004114D3(0x00418A5C, es, ds)
	word32 esp_159 = <invalid>
	word32 ebp_179
	word32 ecx_220
	word32 edx_221
	fn004113E3(Mem149[ebp_154 - 0x00000004:word32] ^ ebp_154, Mem149[esp_159 + 4:word32], Mem149[esp_159 + 16:word32], ebp_154, Mem149[esp_159 + 12:word32], Mem149[esp_159 + 8:word32], es, ds, Mem149[esp_159 + 16:word32], out ecx_220, out edx_221, out ebp_179)
	fn00411488(es, ds, Mem149[esp_159 + 0x000000EC:word32])
	return Mem149[ebp_179:word32]
fn00411442_exit:
l004189BD_1:
	Mem199[edi_198:word32] = 0xCCCCCCCC
	edi_198 = edi_198 + 0x00000004
	ecx_201 = ecx_201 - 0x00000001


void fn00411447()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO eax Top
// Preserved: ebp esp
fn00411447_entry:
l00411447:
l0041C4E0:
	fn00411249()
	return
fn00411447_exit:


byte fn00411456(selector es, selector ds, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00411456_entry:
l00411456:
l0041AA80:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_27 = fp - 0x000000D4
	word32 ecx_28 = 0x00000031
l0041AAAA:
	branch ecx_28 == 0x00000000 l0041AAAC
l0041AAAC:
	byte bLocD4_115
	Mem42[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_137
	fn00411460(0x0042C017, out edx_137)
	branch Mem42[dwArg04:word32] != Mem42[dwArg08:word32] l0041AADF
l0041AADF:
	bLocD4_115 = 0x00 (alias)
l0041AAD3:
	bLocD4_115 = 0x01 (alias)
l0041AAE9:
	Mem62[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0xFFFFFFFF)
	return bLocD4_115
fn00411456_exit:
l0041AAAA_1:
	Mem95[edi_27:word32] = 0xCCCCCCCC
	edi_27 = edi_27 + 0x00000004
	ecx_28 = ecx_28 - 0x00000001


word32 fn0041145B(selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut: ebp esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn0041145B_entry:
l0041145B:
l00419B80:
	word32 edi_108 = fp - 0x000000D0
	word32 ecx_111 = 0x00000033
l00419B9D:
	branch ecx_111 == 0x00000000 l00419B9F
l00419B9F:
	word32 edx_131
	fn00411460(0x0042C02B, out edx_131)
	fn00411136(es, ds, dwArg04)
	word32 ebp_77 = fn00411627(es, ds, dwArg04, fn00411294(es, ds))
	word32 esp_83 = <invalid>
	fn00411488(es, ds, Mem74[esp_83 + 0x000000DC:word32])
	return Mem74[ebp_77:word32]
fn0041145B_exit:
l00419B9D_1:
	Mem109[edi_108:word32] = 0xCCCCCCCC
	edi_108 = edi_108 + 0x00000004
	ecx_111 = ecx_111 - 0x00000001


word32 fn00411460(word32 ecx, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx:[0..31]
// LiveOut: eax edx
// Trashed: SCZO eax edx Top
// Preserved: ebp ecx esp
fn00411460_entry:
l00411460:
l0041CFC0:
	word32 eax_11 = ecx
	word32 edx_14 = (word32) Mem12[ecx:byte]
	branch edx_14 == 0x00000000 l0041CFF1
l0041CFD9:
	branch Mem12[0x00429774:word32] == 0x00000000 l0041CFF1
l0041CFE2:
	eax_11 = GetCurrentThreadId()
	branch Mem12[0x00429774:word32] != eax_11 l0041CFF1
l0041CFF0:
l0041CFF1:
	edxOut = edx_14
	return eax_11
fn00411460_exit:


word32 fn00411465(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn00411465_entry:
l00411465:
l00411465_thunk_fn00415EA0:
	return fn00415EA0(es, ds)
fn00411465_exit:


word32 fn0041146A(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn0041146A_entry:
l0041146A:
l00417D30:
	word32 edi_22 = fp - 0x000000D0
	word32 ecx_23 = 0x00000033
l00417D4D:
	branch ecx_23 == 0x00000000 l00417D4F
l00417D4F:
	word32 edx_101
	fn00411460(0x0042C02B, out edx_101)
	word32 ebp_50 = fn0041141A(es, ds)
	word32 esp_56 = <invalid>
	fn00411488(es, ds, Mem41[esp_56 + 0x000000D8:word32])
	return Mem41[ebp_50:word32]
fn0041146A_exit:
l00417D4D_1:
	Mem82[edi_22:word32] = 0xCCCCCCCC
	edi_22 = edi_22 + 0x00000004
	ecx_23 = ecx_23 - 0x00000001


word32 fn00411474(selector es, selector ds, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax ebp esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn00411474_entry:
l00411474:
l004142E0:
	word32 edi_228 = fp - 0x00000104
	word32 ecx_231 = 0x0000003D
l0041430A:
	branch ecx_231 == 0x00000000 l0041430C
l0041430C:
	Mem43[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_249
	fn00411460(0x0042C02B, out edx_249)
	Mem67[fn0041111D(fp - 0x00000034, es, ds) - 0x00000004:word32] = 0x00000000
	word32 esp_90 = <invalid>
	Mem98[esp_90:word32] = Mem80[fn0041104B(es, ds, fn004116BD(es, ds) + 0x00000001) + 0x0000000C:word32]
	word32 esp_107 = <invalid>
	Mem116[esp_107:word32] = (word32) Mem98[fn0041146A(es, ds) + 0x00000010:byte]
	word32 ebp_119 = fn00411433(es, ds)
	word32 esp_125 = <invalid>
	Mem134[esp_125:word32] = ebp_119 - 0x00000030
	word32 ebp_137 = fn0041124E(Mem134[ebp_119 + 0x00000008:word32], es, ds)
	Mem154[ebp_137 - 0x000000FC:word32] = Mem134[ebp_137 - 0x000000FC:word32] | 0x00000001
	Mem155[ebp_137 - 0x00000004:word32] = 0xFFFFFFFF
	word32 ebp_158
	word32 edx_162
	fn00411406(es, ds, out edx_162, out ebp_158)
	word32 esp_164 = <invalid>
	word32 eax_170 = Mem155[ebp_158 + 0x00000008:word32]
	Mem172[esp_164 - 4:word32] = edx_162
	Mem175[esp_164 - 8:word32] = eax_170
	word32 ebp_180 = fn004114D3(0x004143D8, es, ds)
	word32 esp_185 = <invalid>
	word32 edx_192 = Mem175[esp_185 + 4:word32]
	Mem195[fs:0x00000000:word32] = Mem175[ebp_180 - 0x0000000C:word32]
	word32 ebp_209
	word32 ecx_250
	word32 edx_251
	word32 eax_208 = fn004113E3(Mem195[ebp_180 - 0x00000010:word32] ^ ebp_180, edx_192, Mem195[esp_185 + 20:word32], ebp_180, Mem195[esp_185 + 16:word32], Mem195[esp_185 + 12:word32], es, ds, Mem195[esp_185 + 20:word32], out ecx_250, out edx_251, out ebp_209)
	fn00411488(es, ds, Mem195[esp_185 + 0x00000114:word32])
	ebpOut = Mem195[ebp_209:word32]
	return eax_208
fn00411474_exit:
l0041430A_1:
	Mem229[edi_228:word32] = 0xCCCCCCCC
	edi_228 = edi_228 + 0x00000004
	ecx_231 = ecx_231 - 0x00000001


word32 fn00411479(word32 ecx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn00411479_entry:
l00411479:
l00418F80:
	word32 edi_182 = fp - 0x000000F8
	word32 ecx_185 = 0x0000003A
l00418FAB:
	branch ecx_185 == 0x00000000 l00418FAD
l00418FAD:
	Mem48[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_210
	fn00411460(0x0042C018, out edx_210)
	branch Mem49[ecx:word32] == 0x00000000 l00419038
l00418FD7:
	_Lockit(fp - 0x00000028, 0x00000003)
	fn00411488(es, ds, 0x00000003)
	word32 ecx_78 = Mem62[ecx:word32]
l00419005:
	branch Mem83[ecx_78 + 0x00000004:word32] == 0x00000000 l0041901A
l0041901A:
	Mem89[Mem83[ecx:word32] + 0x00000004:word32] = 0x00000000
	~_Lockit(fp - 0x00000028)
	fn00411488(es, ds, 0x00000003)
l00419038:
	word32 ebp_126 = fn004114D3(0x00419074, es, ds)
	word32 esp_131 = <invalid>
	word32 edx_138 = Mem115[esp_131 + 4:word32]
	Mem141[fs:0x00000000:word32] = Mem115[ebp_126 - 0x0000000C:word32]
	word32 edx_212
	word32 ecx_211
	word32 ebp_155
	fn004113E3(Mem141[ebp_126 - 0x00000010:word32] ^ ebp_126, edx_138, Mem141[esp_131 + 20:word32], ebp_126, Mem141[esp_131 + 16:word32], Mem141[esp_131 + 12:word32], es, ds, Mem141[esp_131 + 20:word32], out ecx_211, out edx_212, out ebp_155)
	fn00411488(es, ds, Mem141[esp_131 + 0x00000108:word32])
	return Mem141[ebp_155:word32]
fn00411479_exit:
l0041900D:
	Mem175[Mem83[ecx_78 + 0x00000004:word32]:word32] = 0x00000000
l00418FF8:
	Mem180[ecx_78 + 0x00000004:word32] = Mem175[Mem175[ecx_78 + 0x00000004:word32] + 0x00000004:word32]
l00418FAB_1:
	Mem183[edi_182:word32] = 0xCCCCCCCC
	edi_182 = edi_182 + 0x00000004
	ecx_185 = ecx_185 - 0x00000001


word32 fn0041147E(word32 ecx, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut: ebp esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn0041147E_entry:
l0041147E:
l00419550:
	word32 edi_185 = fp - 0x000000F8
	word32 ecx_188 = 0x0000003A
l0041957B:
	branch ecx_188 == 0x00000000 l0041957D
l0041957D:
	Mem48[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_215
	fn00411460(0x0042C018, out edx_215)
	_Lockit(fp - 0x00000028, 0x00000003)
	fn00411488(es, ds, 0x00000003)
	word32 ecx_75 = Mem59[ecx:word32]
	Mem80[ecx:word32] = Mem76[dwArg04:word32]
	Mem83[dwArg04:word32] = ecx_75
	branch Mem83[ecx:word32] == 0x00000000 l004195DF
l004195D5:
	Mem90[Mem83[ecx:word32]:word32] = ecx
l004195DF:
	branch Mem92[dwArg04:word32] == 0x00000000 l004195F1
l004195E7:
	Mem99[Mem92[dwArg04:word32]:word32] = dwArg04
l004195F1:
	~_Lockit(fp - 0x00000028)
	fn00411488(es, ds, 0x00000003)
	word32 ebp_137 = fn004114D3(0x00419640, es, ds)
	word32 esp_142 = <invalid>
	word32 edx_149 = Mem132[esp_142 + 4:word32]
	Mem152[fs:0x00000000:word32] = Mem132[ebp_137 - 0x0000000C:word32]
	word32 ecx_216
	word32 edx_217
	word32 ebp_166
	fn004113E3(Mem152[ebp_137 - 0x00000010:word32] ^ ebp_137, edx_149, Mem152[esp_142 + 20:word32], ebp_137, Mem152[esp_142 + 16:word32], Mem152[esp_142 + 12:word32], es, ds, Mem152[esp_142 + 20:word32], out ecx_216, out edx_217, out ebp_166)
	fn00411488(es, ds, Mem152[esp_142 + 0x00000108:word32])
	return Mem152[ebp_166:word32]
fn0041147E_exit:
l0041957B_1:
	Mem186[edi_185:word32] = 0xCCCCCCCC
	edi_185 = edi_185 + 0x00000004
	ecx_188 = ecx_188 - 0x00000001


word32 fn00411483(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00411483_entry:
l00411483:
l00418E00:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_30 = fp - 0x000000DC
	word32 ecx_31 = 0x00000033
l00418E2B:
	branch ecx_31 == 0x00000000 l00418E2D
l00418E2D:
	Mem47[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_118
	fn00411460(0x0042C02B, out edx_118)
	word32 eax_62 = fn004113AC(es, ds)
	Mem71[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0xFFFFFFFF)
	return eax_62
fn00411483_exit:
l00418E2B_1:
	Mem93[edi_30:word32] = 0xCCCCCCCC
	edi_30 = edi_30 + 0x00000004
	ecx_31 = ecx_31 - 0x00000001


word32 fn00411488(selector es, selector ds, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0000:[0..31]
// LiveOut: ecx
// Trashed: SCZO ecx Top
// Preserved: eax ebp ebx edi edx esi esp
fn00411488_entry:
l00411488:
l0041CF80:
	branch Z l0041CF85
l0041CF85:
	return fn00411528(es, ds, dwArg00, 0x00000000)
l0041CF83:
	return ecx
fn00411488_exit:


word32 fn0041148D(selector es, selector ds, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: edx
// Trashed: SCZO eax ebx ecx edi edx esi Top
// Preserved: esp
fn0041148D_entry:
l0041148D:
l0041148D_thunk_fn00417E00:
	return fn00417E00(es, ds, dwArg04, dwArg08)
fn0041148D_exit:


word32 fn00411492(selector es, selector ds, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax edx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00411492_entry:
l00411492:
l004170C0:
	word32 edi_22 = fp - 0x000000D0
	word32 ecx_23 = 0x00000033
l004170DD:
	branch ecx_23 == 0x00000000 l004170DF
l004170DF:
	word32 edx_41
	word32 eax_39 = fn004114AB(es, ds, out edx_41)
	fn00411488(es, ds, dwLoc08)
	edxOut = edx_41
	return eax_39
fn00411492_exit:
l004170DD_1:
	Mem66[edi_22:word32] = 0xCCCCCCCC
	edi_22 = edi_22 + 0x00000004
	ecx_23 = ecx_23 - 0x00000001


word32 fn004114A1(word32 ecx, selector es, selector ds, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebx edi esi
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn004114A1_entry:
l004114A1:
l004168A0:
	word32 edi_145 = fp - 0x000000E8
	word32 ecx_148 = 0x00000036
l004168CB:
	branch ecx_148 == 0x00000000 l004168CD
l004168CD:
	Mem47[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_172
	fn00411460(0x0042C02B, out edx_172)
	fn004114E2(es, ds)
	fn0041153C(es, ds)
	word32 ebp_89 = fn00411636(ecx, es, ds)
	Mem102[ebp_89 - 0x00000004:word32] = 0x00000000
	word32 esp_95 = <invalid>
	Mem105[esp_95:word32] = Mem102[ebp_89 + 0x00000008:word32]
	word32 ebp_108 = fn00411500(es, ds)
	Mem121[ebp_108 - 0x00000004:word32] = 0xFFFFFFFF
	Mem124[fs:0x00000000:word32] = Mem121[ebp_108 - 0x0000000C:word32]
	word32 esp_114 = <invalid>
	word32 edi_127 = Mem124[esp_114 + 0x00000008:word32]
	word32 esi_129 = Mem124[esp_114 + 0x0000000C:word32]
	word32 ebx_131 = Mem124[esp_114 + 0x00000010:word32]
	fn00411488(es, ds, Mem124[esp_114 + 0x000000F4:word32])
	esiOut = esi_129
	ediOut = edi_127
	return ebx_131
fn004114A1_exit:
l004168CB_1:
	Mem146[edi_145:word32] = 0xCCCCCCCC
	edi_145 = edi_145 + 0x00000004
	ecx_148 = ecx_148 - 0x00000001


word32 fn004114A6(size_t tArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut: eax
// Trashed: eax Top
// Preserved: esp
fn004114A6_entry:
l004114A6:
	return malloc(tArg04)
fn004114A6_exit:


word32 fn004114AB(selector es, selector ds, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax edx
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn004114AB_entry:
l004114AB:
l004114AB_thunk_fn004171B0:
	word32 edx_12
	word32 eax_10 = fn004171B0(es, ds, out edx_12)
	edxOut = edx_12
	return eax_10
fn004114AB_exit:


word32 fn004114C4(selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ebx ecx edi edx esi Top
// Preserved: ebp esp
fn004114C4_entry:
l004114C4:
l004140C0:
	word32 edi_191 = fp - 0x000000DC
	word32 ecx_194 = 0x00000036
l004140DD:
	branch ecx_194 == 0x00000000 l004140DF
l004140DF:
	word32 edx_231
	fn00411460(0x0042C02B, out edx_231)
	word32 esp_125 = fp - 0x000000E8
	word32 edx_232
	word32 eax_46 = fn00411640(es, ds, out edx_232)
l004140F8:
	word32 ecx_133 = dwArg04
	branch dwArg04 >u Mem56[eax_46 + 0x00000014:word32] l00414105
l00414105:
	word32 esp_63 = esp_125 - 4
	Mem64[esp_63:word32] = 0x004261CC
	Mem66[esp_63 - 4:word32] = 0x00425C54
	Mem68[esp_63 - 8:word32] = 0x00000000
	Mem70[esp_63 - 12:word32] = 0x00000C84
	Mem72[esp_63 - 16:word32] = 0x004261F0
	Mem74[esp_63 - 20:word32] = 0x00000002
	word32 esp_80
	word32 eax_82
	call CrtDbgReport (retsize: 4;)
		uses: ecx:ecx_78,Stack +0008:dwArg04
		defs: eax:eax_82,esp:esp_80
	word32 ecx_94 = fn00411488(es, ds, Mem74[esp_80 + 0x00000014:word32])
	branch eax_82 != 0x00000001 l00414135
l00414134:
	int3()
l00414135:
	Mem105[esp_80 + 0x00000014:word32] = 0x00000000
	Mem107[esp_80 + 0x00000010:word32] = 0x00000C84
	Mem109[esp_80 + 0x0000000C:word32] = 0x00426270
	Mem111[esp_80 + 0x00000008:word32] = 0x00426370
	Mem113[esp_80 + 0x00000004:word32] = 0x00426458
	word32 esp_119
	call invalid_parameter (retsize: 4;)
		uses: ecx:ecx_94,Stack +0008:dwArg04
		defs: esp:esp_119
	esp_125 = esp_119 + 0x00000014
	ecx_133 = fn00411488(es, ds, Mem113[esp_119 + 0x00000010:word32])
	branch false l00414105
l00414103:
l00414161:
	branch false l004140F8
l00414165:
	word32 eax_170 = fn0041123A(eax_46, es, ds) + dwArg04
	fn00411488(es, ds, Mem148[esp_125 + 0x000000E0:word32])
	return eax_170
fn004114C4_exit:
l004140DD_1:
	Mem192[edi_191:word32] = 0xCCCCCCCC
	edi_191 = edi_191 + 0x00000004
	ecx_194 = ecx_194 - 0x00000001


word32 fn004114C9()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax
// Trashed: eax Top
// Preserved: ebp esp
fn004114C9_entry:
l004114C9:
l0041F0F0:
	return 0x0042975C
fn004114C9_exit:


word32 fn004114D3(word32 edx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] edx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn004114D3_entry:
l004114D3:
l0041CF00:
	word32 ebp_103 = fp - 4
	word32 ebx_13 = edx
	word32 esi_19 = 0x00000000
	branch Mem20[edx:word32] <= 0x00000000 l0041CF5D
l0041CF15:
	word32 esp_24 = fp - 0x00000018
	word32 edi_31 = 0x00000000
l0041CF20:
	word32 ecx_34 = Mem33[ebx_13 + 0x00000004:word32]
	word32 edx_38 = Mem33[ecx_34 + edi_31:word32]
	branch Mem33[edx_38 + Mem33[ebp_103 - 0x00000004:word32]:word32] != 0xCCCCCCCC l0041CF44
l0041CF32:
	edx_38 = Mem33[ebp_103 - 0x00000008:word32]
	branch Mem33[Mem33[ecx_34 + 0x00000004 + edi_31:word32] + edx_38 + edx_38:word32] == 0xCCCCCCCC l0041CF54
l0041CF44:
	word32 esp_52 = esp_24 - 4
	Mem53[esp_52:word32] = Mem33[ecx_34 + 0x00000008 + edi_31:word32]
	Mem57[esp_52 - 4:word32] = Mem53[ebp_103 + 0x00000004:word32]
	word32 esp_77 = <invalid>
	ebx_13 = fn00411348(edx_38, es, ds, Mem57[esp_52 - 4:word32], Mem57[esp_52:word32], out ebp_103, out esi_19, out edi_31)
	esp_24 = esp_77 + 0x00000008
l0041CF54:
	esi_19 = esi_19 + 0x00000001
	edi_31 = edi_31 + 0x0000000C
	branch esi_19 < Mem92[ebx_13:word32] l0041CF20
l0041CF5C:
l0041CF5D:
	return Mem99[ebp_103:word32]
fn004114D3_exit:


void fn004114D8(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn004114D8_entry:
l004114D8:
l004114D8_thunk_fn00416AE0:
	fn00416AE0(es, ds)
	return
fn004114D8_exit:


word32 fn004114DD(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: edx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn004114DD_entry:
l004114DD:
l00415BB0:
	word32 edi_19 = fp - 0x000000D0
	word32 ecx_20 = 0x00000033
l00415BCC:
	branch ecx_20 == 0x00000000 l00415BCE
l00415BCE:
	word32 edx_116
	fn00411460(0x0042C01A, out edx_116)
	word32 eax_44 = fn0041119F(es, ds)
	Mem69[eax_44:word32] = Mem57[fn00411645(es, ds):word32]
	fn00411488(es, ds, dwLoc08)
	return eax_44
fn004114DD_exit:
l00415BCC_1:
	Mem89[edi_19:word32] = 0xCCCCCCCC
	edi_19 = edi_19 + 0x00000004
	ecx_20 = ecx_20 - 0x00000001


void fn004114E2(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn004114E2_entry:
l004114E2:
l00418E90:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_30 = fp - 0x000000DC
	word32 ecx_31 = 0x00000033
l00418EBB:
	branch ecx_31 == 0x00000000 l00418EBD
l00418EBD:
	Mem47[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_118
	fn00411460(0x0042C02B, out edx_118)
	fn004111E0(es, ds)
	Mem71[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0xFFFFFFFF)
	return
fn004114E2_exit:
l00418EBB_1:
	Mem93[edi_30:word32] = 0xCCCCCCCC
	edi_30 = edi_30 + 0x00000004
	ecx_31 = ecx_31 - 0x00000001


word32 fn004114E7(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn004114E7_entry:
l004114E7:
l004183F0:
	word32 edi_184 = fp - 0x000000F4
	word32 ecx_187 = 0x0000003C
l0041840D:
	branch ecx_187 == 0x00000000 l0041840F
l0041840F:
	word32 edx_202
	fn00411460(0x0042C02B, out edx_202)
	word32 edx_203
	word32 ebp_57 = fn00411479(fn00411640(es, ds, out edx_203), es, ds)
	Mem71[ebp_57 - 0x00000020:word32] = Mem54[Mem54[ebp_57 - 0x00000014:word32] + 0x00000004:word32]
	Mem81[ebp_57 - 0x0000002C:word32] = fn00411483(es, ds)
	word32 esp_63 = <invalid>
	Mem86[esp_63 - 4:word32] = Mem81[ebp_57 - 0x00000014:word32] + 0x00000004
	Mem98[esp_63 - 4:word32] = fn004113D9(es, ds)
	Mem101[esp_63 - 8:word32] = Mem98[ebp_57 - 0x0000002C:word32]
	fn004110AF(es, ds)
	Mem116[esp_63 - 4:word32] = Mem101[Mem101[ebp_57 - 0x00000014:word32] + 0x00000014:word32] + 0x00000001
	Mem119[esp_63 - 8:word32] = Mem116[ebp_57 - 0x00000020:word32]
	Mem130[esp_63 - 0x00000008:word32] = fn004115F5(es, ds)
	Mem135[esp_63 - 0x0000000C:word32] = Mem130[ebp_57 - 0x00000014:word32] + 0x00000004
	fn00411302(es, ds, Mem135[esp_63 - 0x0000000C:word32], Mem135[esp_63 - 0x00000008:word32], Mem135[esp_63 - 0x00000004:word32])
	Mem150[esp_63 - 4:word32] = Mem135[Mem135[ebp_57 - 0x00000014:word32] + 0x00000018:word32] + 0x00000001
	Mem153[esp_63 - 8:word32] = Mem150[ebp_57 - 0x00000020:word32]
	fn00411695(es, ds, Mem153[esp_63 - 4:word32])
	Mem165[Mem153[ebp_57 - 0x00000014:word32] + 0x00000018:word32] = 0x0000000F
	fn00411488(es, ds, Mem165[esp_63 + 0x000000F8:word32])
	return Mem165[ebp_57:word32]
fn004114E7_exit:
l0041840D_1:
	Mem185[edi_184:word32] = 0xCCCCCCCC
	edi_184 = edi_184 + 0x00000004
	ecx_187 = ecx_187 - 0x00000001


word32 fn004114EC(selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn004114EC_entry:
l004114EC:
l004114EC_thunk_fn00414440:
	return fn00414440(es, ds, dwArg04)
fn004114EC_exit:


word32 fn004114F1(word32 ecx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: edx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn004114F1_entry:
l004114F1:
l00417580:
	word32 edi_22 = fp - 0x000000D0
	word32 ecx_23 = 0x00000033
l0041759D:
	branch ecx_23 == 0x00000000 l0041759F
l0041759F:
	word32 edx_43 = fn00411767(ecx, es, ds)
	fn00411488(es, ds, dwLoc08)
	return edx_43
fn004114F1_exit:
l0041759D_1:
	Mem69[edi_22:word32] = 0xCCCCCCCC
	edi_22 = edi_22 + 0x00000004
	ecx_23 = ecx_23 - 0x00000001


void fn004114F6(byte bArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0008:[0..7]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp esp
fn004114F6_entry:
l004114F6:
l0041CC20:
	branch (word32) Mem6[0x0042932C:byte] == 0x00000000 l0041CC3A
l0041CC2E:
	branch (word32) bArg08 == 0x00000000 l0041CC3A
l0041CC3A:
	fn004110FF()
	fn004111DB()
l0041CC36:
l0041CC56:
	return
fn004114F6_exit:


word32 fn00411500(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn00411500_entry:
l00411500:
l004185F0:
	word32 edi_22 = fp - 0x00000140
	word32 ecx_23 = 0x0000004F
l0041860D:
	branch ecx_23 == 0x00000000 l0041860F
l0041860F:
	word32 eax_216
	word32 edx_205
	word32 esp_211
	word32 edx_335
	fn00411460(0x0042C02B, out edx_335)
	word32 edx_336
	word32 eax_51 = fn00411640(es, ds, out edx_336)
	word32 edx_337
	word32 eax_61 = fn0041128F(es, ds, out edx_337)
	word32 ecx_71 = Mem69[eax_61 + 0x00000014:word32]
	word32 eax_74 = fn0041108C(eax_61, es, ds)
	branch ecx_71 >=u 0x00000010 l00418684
l00418684:
	fn00411483(es, ds)
	word32 ebp_97
	word32 esi_338
	Mem109[ebp_97 - 0x0000012C:word32] = fn004116B3(es, ds, out ebp_97, out esi_338)
	Mem114[ebp_97 - 0x00000138:word32] = Mem109[ebp_97 - 0x00000030:word32] | 0x0000000F
	word32 esp_103 = <invalid>
	Mem117[esp_103 - 4:word32] = ebp_97 - 0x0000012C
	Mem120[esp_103 - 8:word32] = ebp_97 - 0x00000138
	Mem131[ebp_97 - 0x00000054:word32] = Mem120[fn004116F9(es, ds, Mem120[esp_103 - 8:word32], Mem120[esp_103 - 4:word32]):word32]
	Mem136[esp_103 - 4:word32] = Mem131[ebp_97 - 0x00000054:word32] + 0x00000001
	Mem147[ebp_97 - 0x00000060:word32] = fn004112D5(es, ds)
	Mem150[esp_103 - 4:word32] = ebp_97 - 0x00000060
	Mem155[esp_103 - 8:word32] = Mem150[ebp_97 - 0x00000018:word32] + 0x00000004
	Mem167[esp_103 - 0x00000008:word32] = fn004113D9(es, ds)
	Mem170[esp_103 - 0x0000000C:word32] = Mem167[ebp_97 - 0x00000048:word32]
	fn004114DD(es, ds)
	Mem184[esp_103 - 4:word32] = Mem170[ebp_97 - 0x00000030:word32] + 0x00000001
	Mem187[esp_103 - 8:word32] = Mem184[ebp_97 - 0x0000003C:word32]
	Mem190[esp_103 - 12:word32] = Mem187[ebp_97 - 0x00000060:word32]
	Mem202[esp_103 - 0x0000000C:word32] = fn004115F5(es, ds)
	edx_205 = fn00411302(es, ds, Mem202[esp_103 - 0x0000000C:word32], Mem202[esp_103 - 0x00000008:word32], Mem202[esp_103 - 0x00000004:word32])
	Mem215[Mem202[ebp_97 - 0x00000018:word32] + 0x00000014:word32] = Mem202[ebp_97 - 0x00000030:word32]
	eax_216 = Mem215[ebp_97 - 0x00000018:word32]
	Mem218[eax_216 + 0x00000018:word32] = Mem215[ebp_97 - 0x00000054:word32]
	esp_211 = esp_103
l00418657:
	edx_205 = fn00411302(es, ds, eax_51 + 0x00000004, eax_74, 0x00000010)
	Mem241[eax_51 + 0x00000014:word32] = ecx_71
	Mem243[eax_51 + 0x00000018:word32] = 0x0000000F
	esp_211 = fp - 0x0000014C
	eax_216 = eax_51
l00418728:
	word32 esp_245 = esp_211 - 4
	Mem247[esp_245:word32] = edx_205
	Mem252[esp_245 - 4:word32] = eax_216
	word32 ebp_263 = fn004114D3(0x0041875C, es, ds)
	word32 esp_268 = <invalid>
	word32 ebp_288
	word32 ecx_339
	word32 edx_340
	fn004113E3(Mem252[ebp_263 - 0x00000004:word32] ^ ebp_263, Mem252[esp_268 + 4:word32], Mem252[esp_268 + 16:word32], ebp_263, Mem252[esp_268 + 12:word32], Mem252[esp_268 + 8:word32], es, ds, Mem252[esp_268 + 16:word32], out ecx_339, out edx_340, out ebp_288)
	fn00411488(es, ds, Mem252[esp_268 + 0x0000014C:word32])
	return Mem252[ebp_288:word32]
fn00411500_exit:
l0041860D_1:
	Mem308[edi_22:word32] = 0xCCCCCCCC
	edi_22 = edi_22 + 0x00000004
	ecx_23 = ecx_23 - 0x00000001


void fn0041150F(int32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved: esp
// Terminates process
fn0041150F_exit:
fn0041150F_entry:
l0041150F:
	exit(dwArg04)


word32 fn0041151E(wchar_t * ptrArg04, wchar_t * ptrArg08, size_t tArg0C, wchar_t * ptrArg10, size_t tArg14, wchar_t * ptrArg18, size_t tArg1C, wchar_t * ptrArg20, size_t tArg24)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0024:[0..31]
// LiveOut: eax
// Trashed: eax Top
// Preserved: esp
fn0041151E_entry:
l0041151E:
	return _wsplitpath_s(ptrArg04, ptrArg08, tArg0C, ptrArg10, tArg14, ptrArg18, tArg1C, ptrArg20, tArg24)
fn0041151E_exit:


void fn00411523(void * ptrArg04, void * ptrArg08, size_t tArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: eax Top
// Preserved: esp
fn00411523_entry:
l00411523:
	memcpy(ptrArg04, ptrArg08, tArg0C)
	return
fn00411523_exit:


word32 fn00411528(selector es, selector ds, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: ecx
// Trashed: SCZO eax ebx ecx edi edx esi Top
// Preserved: ebp esp
fn00411528_entry:
l00411528:
l0041E2B0:
	word32 ecx_101
	branch dwArg08 >u 0x00000004 l0041E2DE
l0041E2DE:
	word32 edx_11 = Mem6[0x004265C4:word32]
	word32 edx_34
	word32 ebp_128
	ecx_101 = fn0041E4B0(edx_11, es, ds, dwArg04, 0x00000005, edx_11, out edx_34, out ebp_128)
l0041E2BB:
	ecx_101 = Mem6[dwArg08 * 0x00000004 + 0x00429020:word32]
	word32 edx_45 = Mem6[dwArg08 * 0x00000004 + 0x004265B0:word32]
	branch ecx_101 == 0xFFFFFFFF l0041E2FC
l0041E2FC:
	return ecx_101
l0041E2CE:
	word32 edx_129
	word32 ebp_130
	return fn0041E4B0(edx_45, es, ds, dwArg04, dwArg08, edx_45, out edx_129, out ebp_130)
fn00411528_exit:


void fn0041153C(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn0041153C_entry:
l0041153C:
l0041B1C0:
	word32 edi_19 = fp - 0x000000C4
	word32 ecx_20 = 0x00000030
l0041B1DC:
	branch ecx_20 == 0x00000000 l0041B1DE
l0041B1DE:
	word32 edx_80
	fn00411460(0x0042C01A, out edx_80)
	fn00411488(es, ds, dwLoc08)
	return
fn0041153C_exit:
l0041B1DC_1:
	Mem59[edi_19:word32] = 0xCCCCCCCC
	edi_19 = edi_19 + 0x00000004
	ecx_20 = ecx_20 - 0x00000001


void fn00411546(word32 ecx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00411546_entry:
l00411546:
l00416BA0:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_30 = fp - 0x000000DC
	word32 ecx_31 = 0x00000033
l00416BCB:
	branch ecx_31 == 0x00000000 l00416BCD
l00416BCD:
	Mem47[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_114
	fn00411460(0x0042C018, out edx_114)
	Mem57[ecx:word32] = 0x00000000
	Mem59[ecx + 0x00000004:word32] = 0x00000000
	Mem62[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0xFFFFFFFF)
	return
fn00411546_exit:
l00416BCB_1:
	Mem89[edi_30:word32] = 0xCCCCCCCC
	edi_30 = edi_30 + 0x00000004
	ecx_31 = ecx_31 - 0x00000001


void fn0041154B(selector es, selector ds, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn0041154B_entry:
l0041154B:
l00419D10:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_27 = fp - 0x000000D0
	word32 ecx_28 = 0x00000030
l00419D3A:
	branch ecx_28 == 0x00000000 l00419D3C
l00419D3C:
	Mem42[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_45
	fn00411460(0x0042C017, out edx_45)
	Mem53[dwArg04:byte] = Mem42[dwArg08:byte]
	Mem55[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0xFFFFFFFF)
	return
fn0041154B_exit:
l00419D3A_1:
	Mem82[edi_27:word32] = 0xCCCCCCCC
	edi_27 = edi_27 + 0x00000004
	ecx_28 = ecx_28 - 0x00000001


void fn00411555(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00411555_entry:
l00411555:
l00413440:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_30 = fp - 0x000000DC
	word32 ecx_31 = 0x00000033
l0041346B:
	branch ecx_31 == 0x00000000 l0041346D
l0041346D:
	Mem47[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_110
	fn00411460(0x0042C01A, out edx_110)
	Mem58[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0xFFFFFFFF)
	return
fn00411555_exit:
l0041346B_1:
	Mem85[edi_30:word32] = 0xCCCCCCCC
	edi_30 = edi_30 + 0x00000004
	ecx_31 = ecx_31 - 0x00000001


void fn0041155F(selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn0041155F_entry:
l0041155F:
l00414C80:
	word32 edi_117 = fp - 0x000000DC
	word32 ecx_120 = 0x00000036
l00414C9D:
	branch ecx_120 == 0x00000000 l00414C9F
l00414C9F:
	word32 edx_154
	fn00411460(0x0042C02B, out edx_154)
	fn00411302(es, ds, dwArg04, dwArg08, dwArg0C)
	fn0041154B(es, ds, dwArg04 + dwArg0C, fp + 0x00000010)
	fn0041154B(es, ds, dwArg04 + 0x00000001 + dwArg0C, fp - 0x000000D5)
	fn00411488(es, ds, dwLoc08)
	return
fn0041155F_exit:
l00414C9D_1:
	Mem118[edi_117:word32] = 0xCCCCCCCC
	edi_117 = edi_117 + 0x00000004
	ecx_120 = ecx_120 - 0x00000001


word32 fn0041157D(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn0041157D_entry:
l0041157D:
l00414750:
	word32 edi_19 = fp - 0x000000C4
	word32 ecx_20 = 0x00000030
l0041476C:
	branch ecx_20 == 0x00000000 l0041476E
l0041476E:
	word32 edx_80
	fn00411460(0x0042C01A, out edx_80)
	fn00411488(es, ds, dwLoc08)
	return dwArg04
fn0041157D_exit:
l0041476C_1:
	Mem59[edi_19:word32] = 0xCCCCCCCC
	edi_19 = edi_19 + 0x00000004
	ecx_20 = ecx_20 - 0x00000001


word32 fn00411587(selector es, selector ds, word128 xmm0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] xmm0:[0..127]
// LiveOut: eax
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn00411587_entry:
l00411587:
l00414190:
	word32 edi_19 = fp - 0x000000C4
	word32 ecx_20 = 0x00000030
l004141AC:
	branch ecx_20 == 0x00000000 l004141AE
l004141AE:
	word32 edx_85
	fn00411460(0x0042C02A, out edx_85)
	fn0041A790(es, ds, xmm0)
	word32 esp_44 = <invalid>
	fn00411488(es, ds, Mem51[esp_44 + 0x000000C8:word32])
	return 0x00000000
fn00411587_exit:
l004141AC_1:
	Mem71[edi_19:word32] = 0xCCCCCCCC
	edi_19 = edi_19 + 0x00000004
	ecx_20 = ecx_20 - 0x00000001


void fn0041158C(char * ptrArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: Top
// Preserved: esp
fn0041158C_entry:
l0041158C:
	_Xlength_error(ptrArg04)
	return
fn0041158C_exit:


void fn0041159B(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn0041159B_entry:
l0041159B:
l00415F30:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_27 = fp - 0x000000D0
	word32 ecx_28 = 0x00000030
l00415F5A:
	branch ecx_28 == 0x00000000 l00415F5C
l00415F5C:
	Mem42[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_103
	fn00411460(0x0042C00D, out edx_103)
	Mem52[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0xFFFFFFFF)
	return
fn0041159B_exit:
l00415F5A_1:
	Mem79[edi_27:word32] = 0xCCCCCCCC
	edi_27 = edi_27 + 0x00000004
	ecx_28 = ecx_28 - 0x00000001


byte fn004115A5(word32 ecx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn004115A5_entry:
l004115A5:
l00418F10:
	word32 edi_22 = fp - 0x000000D4
	word32 ecx_23 = 0x00000034
l00418F2D:
	branch ecx_23 == 0x00000000 l00418F2F
l00418F2F:
	byte bLocD4_97
	word32 edx_115
	fn00411460(0x0042C02B, out edx_115)
	branch Mem31[ecx + 0x00000018:word32] <u 0x00000010 l00418F52
l00418F52:
	bLocD4_97 = 0x00 (alias)
l00418F46:
	bLocD4_97 = 0x01 (alias)
l00418F5C:
	fn00411488(es, ds, dwLoc08)
	return bLocD4_97
fn004115A5_exit:
l00418F2D_1:
	Mem79[edi_22:word32] = 0xCCCCCCCC
	edi_22 = edi_22 + 0x00000004
	ecx_23 = ecx_23 - 0x00000001


word32 fn004115AF()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: edx
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn004115AF_entry:
l004115AF:
l004115AF_thunk_fn0041EEC0:
	return fn0041EEC0()
fn004115AF_exit:


void fn004115B4(char * ptrArg04, rsize_t tArg08, char * ptrArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: eax Top
// Preserved: esp
fn004115B4_entry:
l004115B4:
	strcpy_s(ptrArg04, tArg08, ptrArg0C)
	return
fn004115B4_exit:


void fn004115BE()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: esp
fn004115BE_entry:
l004115BE:
	call _vcrt_LoadLibraryExW (retsize: 4;)
	return
fn004115BE_exit:


void fn004115C3(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn004115C3_entry:
l004115C3:
l00415D10:
	word32 edi_19 = fp - 0x000000C4
	word32 ecx_20 = 0x00000030
l00415D2C:
	branch ecx_20 == 0x00000000 l00415D2E
l00415D2E:
	word32 edx_77
	fn00411460(0x0042C01A, out edx_77)
	fn00411488(es, ds, dwLoc08)
	return
fn004115C3_exit:
l00415D2C_1:
	Mem58[edi_19:word32] = 0xCCCCCCCC
	edi_19 = edi_19 + 0x00000004
	ecx_20 = ecx_20 - 0x00000001


void fn004115C8(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO ecx edx Top
// Preserved: ebp esp
fn004115C8_entry:
l004115C8:
l0041C480:
l0041C484:
	word32 eax_17 = fn004114A6(dwArg04)
	branch eax_17 == 0x00000000 l0041C49E
l0041C49E:
	fn004110F0()
	branch eax_17 != 0x00000000 l0041C4C0
l0041C4AE:
	branch dwArg04 != 0xFFFFFFFF l0041C4BB
l0041C4BB:
	fn0041169F()
l0041C4B4:
	fn00411384()
l0041C4C0:
l0041C499:
l0041C4C2:
	return
fn004115C8_exit:


void fn004115CD(word32 ecx, selector es, selector ds, word32 dwArg04, byte bArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..7]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn004115CD_entry:
l004115CD:
l00416E50:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_119 = fp - 0x000000DC
	word32 ecx_122 = 0x00000033
l00416E7B:
	branch ecx_122 == 0x00000000 l00416E7D
l00416E7D:
	Mem47[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_153
	fn00411460(0x0042C02C, out edx_153)
	fn004110C8(ecx, es, ds, dwArg04)
	word32 eax_79 = (word32) bArg08
	byte al_84 = (uint8) (1) _Ipfx(Mem81[ecx:word32], SLICE(eax_79, bool, 0))
	fn00411488(es, ds, eax_79)
	Mem94[ecx + 0x00000004:byte] = al_84
	Mem98[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0xFFFFFFFF)
	return
fn004115CD_exit:
l00416E7B_1:
	Mem120[edi_119:word32] = 0xCCCCCCCC
	edi_119 = edi_119 + 0x00000004
	ecx_122 = ecx_122 - 0x00000001


byte fn004115D2()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: al
// Trashed: al Top
// Preserved: ebp esp
fn004115D2_entry:
l004115D2:
l0041FE10_in_fn004115D2:
	return 0x01
fn004115D2_exit:


word32 fn004115D7(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn004115D7_entry:
l004115D7:
l00419220:
	word32 edi_22 = fp - 0x000000D0
	word32 ecx_23 = 0x00000033
l0041923D:
	branch ecx_23 == 0x00000000 l0041923F
l0041923F:
	word32 edx_103
	fn00411460(0x0042C02B, out edx_103)
	word32 edx_104
	word32 ebp_56 = fn00411479(fn00411640(es, ds, out edx_104), es, ds)
	word32 esp_62 = <invalid>
	fn00411488(es, ds, Mem31[esp_62 + 0x000000D4:word32])
	return Mem31[ebp_56:word32]
fn004115D7_exit:
l0041923D_1:
	Mem87[edi_22:word32] = 0xCCCCCCCC
	edi_22 = edi_22 + 0x00000004
	ecx_23 = ecx_23 - 0x00000001


void fn004115DC()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: esp
fn004115DC_entry:
l004115DC:
	call _p___argv (retsize: 4;)
	return
fn004115DC_exit:


void fn004115E6(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZDOP eax ecx edx Top
// Preserved: ebp esp
fn004115E6_entry:
l004115E6:
l0041DD60:
	branch fn004110A0(0x00000017) == 0x00000000 l0041DD79
l0041DD79:
	byte bLoc05_149
	fn00411253()
	fn004111FE(fp - 0x00000330, 0x00000000, 0x000002CC)
	fn004111FE(fp - 0x00000064, 0x00000000, 0x00000050)
	branch IsDebuggerPresent() != 0x00000001 l0041DE4B
l0041DE4B:
	bLoc05_149 = 0x00
l0041DE45:
	bLoc05_149 = 0x01
l0041DE4F:
	SetUnhandledExceptionFilter(0x00000000)
	branch UnhandledExceptionFilter(fp - 0x00000014) != 0x00000000 l0041DE91
l0041DE7F:
	branch (word32) bLoc05_149 != 0x00000000 l0041DE91
l0041DE87:
	fn00411253()
l0041DE91:
	return
fn004115E6_exit:
l0041DD74:
	__fastfail(dwArg04)


word32 fn004115F0(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn004115F0_entry:
l004115F0:
l00416550:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_27 = fp - 0x000000D0
	word32 ecx_28 = 0x00000030
l0041657A:
	branch ecx_28 == 0x00000000 l0041657C
l0041657C:
	Mem42[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_103
	fn00411460(0x0042C00D, out edx_103)
	Mem52[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0xFFFFFFFF)
	return dwArg04
fn004115F0_exit:
l0041657A_1:
	Mem79[edi_27:word32] = 0xCCCCCCCC
	edi_27 = edi_27 + 0x00000004
	ecx_28 = ecx_28 - 0x00000001


word32 fn004115F5(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn004115F5_entry:
l004115F5:
l00415960:
	word32 edi_19 = fp - 0x000000C4
	word32 ecx_20 = 0x00000030
l0041597C:
	branch ecx_20 == 0x00000000 l0041597E
l0041597E:
	word32 edx_80
	fn00411460(0x0042C030, out edx_80)
	fn00411488(es, ds, dwLoc08)
	return dwArg04
fn004115F5_exit:
l0041597C_1:
	Mem59[edi_19:word32] = 0xCCCCCCCC
	edi_19 = edi_19 + 0x00000004
	ecx_20 = ecx_20 - 0x00000001


word32 fn00411609(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00411609_entry:
l00411609:
l00415B20:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_27 = fp - 0x000000D0
	word32 ecx_28 = 0x00000030
l00415B4A:
	branch ecx_28 == 0x00000000 l00415B4C
l00415B4C:
	Mem42[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_103
	fn00411460(0x0042C030, out edx_103)
	Mem52[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0xFFFFFFFF)
	return dwArg04
fn00411609_exit:
l00415B4A_1:
	Mem79[edi_27:word32] = 0xCCCCCCCC
	edi_27 = edi_27 + 0x00000004
	ecx_28 = ecx_28 - 0x00000001


word32 fn00411613(selector es, selector ds, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0008:[0..31]
// LiveOut: edx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00411613_entry:
l00411613:
l00414660:
	word32 edi_100 = fp - 0x000000C4
	word32 ecx_103 = 0x00000030
l0041467C:
	branch ecx_103 == 0x00000000 l0041467E
l0041467E:
	word32 edx_135
	fn00411460(0x0042C01A, out edx_135)
	branch dwArg08 <u 0x00001000 l004146A1
l00414691:
	edx_135 = fn0041148D(es, ds, fp + 0x00000004, fp + 0x00000008)
l004146A1:
	fn00411447()
	fn00411488(es, ds, dwLoc08)
	return edx_135
fn00411613_exit:
l0041467C_1:
	Mem101[edi_100:word32] = 0xCCCCCCCC
	edi_100 = edi_100 + 0x00000004
	ecx_103 = ecx_103 - 0x00000001


word32 fn0041161D(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn0041161D_entry:
l0041161D:
l0041161D_thunk_fn004164C0:
	return fn004164C0(es, ds)
fn0041161D_exit:


void fn00411622(selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00411622_entry:
l00411622:
l00417B60:
	word32 edi_22 = fp - 0x000000D0
	word32 ecx_23 = 0x00000033
l00417B7D:
	branch ecx_23 == 0x00000000 l00417B7F
l00417B7F:
	word32 edx_115
	fn00411460(0x0042C02B, out edx_115)
	fn00411302(es, ds, dwArg04, dwArg08, dwArg0C + 0x00000001)
	fn00411488(es, ds, dwLoc08)
	return
fn00411622_exit:
l00417B7D_1:
	Mem84[edi_22:word32] = 0xCCCCCCCC
	edi_22 = edi_22 + 0x00000004
	ecx_23 = ecx_23 - 0x00000001


word32 fn00411627(selector es, selector ds, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: ebp esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn00411627_entry:
l00411627:
l004184C0:
	word32 ebp_148 = fp - 4
	word32 edi_166 = fp - 0x00000100
	word32 ecx_169 = 0x0000003F
l004184DD:
	branch ecx_169 == 0x00000000 l004184DF
l004184DF:
	word32 esp_136
	word32 edx_201
	fn00411460(0x0042C02B, out edx_201)
	word32 edx_202
	word32 eax_46 = fn00411640(es, ds, out edx_202)
	branch dwArg08 >u Mem54[eax_46 + 0x00000018:word32] l0041854D
l0041854D:
	word32 esp_81 = <invalid>
	ebp_148 = fn0041141F(es, ds)
	esp_136 = esp_81 + 0x0000000C
l00418503:
	word32 eax_89 = fn0041123A(eax_46, es, ds)
	Mem100[eax_46 + 0x00000014:word32] = dwArg08
	fn00411087(es, ds, eax_89, dwArg04, dwArg08)
	fn0041154B(es, ds, eax_89 + dwArg08, fp - 0x000000ED)
	esp_136 = fp - 0x0000010C
l0041856D:
	fn00411488(es, ds, Mem140[esp_136 + 0x00000104:word32])
	return Mem140[ebp_148:word32]
fn00411627_exit:
l004184DD_1:
	Mem167[edi_166:word32] = 0xCCCCCCCC
	edi_166 = edi_166 + 0x00000004
	ecx_169 = ecx_169 - 0x00000001


word32 fn0041162C(selector es, selector ds, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax edx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn0041162C_entry:
l0041162C:
l00418D70:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_30 = fp - 0x000000DC
	word32 ecx_31 = 0x00000033
l00418D9B:
	branch ecx_31 == 0x00000000 l00418D9D
l00418D9D:
	Mem47[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_51
	fn00411460(0x0042C018, out edx_51)
	Mem58[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0xFFFFFFFF)
	edxOut = edx_51
	return ecx
fn0041162C_exit:
l00418D9B_1:
	Mem85[edi_30:word32] = 0xCCCCCCCC
	edi_30 = edi_30 + 0x00000004
	ecx_31 = ecx_31 - 0x00000001


word32 fn00411631(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00411631_entry:
l00411631:
l00415A90:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_27 = fp - 0x000000D0
	word32 ecx_28 = 0x00000030
l00415ABA:
	branch ecx_28 == 0x00000000 l00415ABC
l00415ABC:
	Mem42[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_103
	fn00411460(0x0042C030, out edx_103)
	Mem52[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0xFFFFFFFF)
	return dwArg04
fn00411631_exit:
l00415ABA_1:
	Mem79[edi_27:word32] = 0xCCCCCCCC
	edi_27 = edi_27 + 0x00000004
	ecx_28 = ecx_28 - 0x00000001


word32 fn00411636(word32 ecx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn00411636_entry:
l00411636:
l00413540:
	word32 edi_128 = fp - 0x000000E8
	word32 ecx_131 = 0x00000036
l0041356B:
	branch ecx_131 == 0x00000000 l0041356D
l0041356D:
	Mem47[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_156
	fn00411460(0x0042C02B, out edx_156)
	fn0041159B(es, ds)
	fn00411046(ecx, es, ds)
	word32 ebp_92 = fn004113D4(es, ds)
	Mem104[ebp_92 - 0x00000004:word32] = 0xFFFFFFFF
	Mem107[fs:0x00000000:word32] = Mem104[ebp_92 - 0x0000000C:word32]
	word32 esp_98 = <invalid>
	fn00411488(es, ds, Mem107[esp_98 + 0x000000F0:word32])
	return Mem107[ebp_92:word32]
fn00411636_exit:
l0041356B_1:
	Mem129[edi_128:word32] = 0xCCCCCCCC
	edi_128 = edi_128 + 0x00000004
	ecx_131 = ecx_131 - 0x00000001


word32 fn0041163B(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn0041163B_entry:
l0041163B:
l00419400:
	word32 edi_100 = fp - 0x000000D0
	word32 ecx_101 = 0x00000033
l0041941D:
	branch ecx_101 == 0x00000000 l0041941F
l0041941F:
	word32 edx_118
	fn00411460(0x0042C02B, out edx_118)
	word32 edx_119
	word32 edx_120
	word32 ebp_67 = fn0041147E(fn00411640(es, ds, out edx_120), es, ds, fn00411640(es, ds, out edx_119))
	word32 esp_73 = <invalid>
	fn00411488(es, ds, Mem55[esp_73 + 0x000000D8:word32])
	return Mem55[ebp_67:word32]
fn0041163B_exit:
l0041941D_1:
	Mem99[edi_100:word32] = 0xCCCCCCCC
	edi_100 = edi_100 + 0x00000004
	ecx_101 = ecx_101 - 0x00000001


word32 fn00411640(selector es, selector ds, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax edx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00411640_entry:
l00411640:
l00418AA0:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_30 = fp - 0x000000DC
	word32 ecx_31 = 0x00000033
l00418ACB:
	branch ecx_31 == 0x00000000 l00418ACD
l00418ACD:
	Mem47[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_119
	fn00411460(0x0042C02B, out edx_119)
	word32 edx_64
	word32 eax_62 = fn00411131(es, ds, out edx_64)
	Mem71[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0xFFFFFFFF)
	edxOut = edx_64
	return eax_62
fn00411640_exit:
l00418ACB_1:
	Mem93[edi_30:word32] = 0xCCCCCCCC
	edi_30 = edi_30 + 0x00000004
	ecx_31 = ecx_31 - 0x00000001


word32 fn00411645(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00411645_entry:
l00411645:
l00415E10:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_27 = fp - 0x000000D0
	word32 ecx_28 = 0x00000030
l00415E3A:
	branch ecx_28 == 0x00000000 l00415E3C
l00415E3C:
	Mem42[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_103
	fn00411460(0x0042C00D, out edx_103)
	Mem52[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0xFFFFFFFF)
	return dwArg04
fn00411645_exit:
l00415E3A_1:
	Mem79[edi_27:word32] = 0xCCCCCCCC
	edi_27 = edi_27 + 0x00000004
	ecx_28 = ecx_28 - 0x00000001


word32 fn00411659(selector es, selector ds, word32 dwArg04, word32 dwArg08, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: eax edx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00411659_entry:
l00411659:
l00414D90:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_100 = fp - 0x000000E0
	word32 ecx_101 = 0x00000034
l00414DBA:
	branch ecx_101 == 0x00000000 l00414DBC
l00414DBC:
	word32 dwLocE0_117
	Mem42[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_137
	fn00411460(0x0042C02F, out edx_137)
	branch Mem42[dwArg04:word32] >=u Mem42[dwArg08:word32] l00414DEE
l00414DEE:
	dwLocE0_117 = dwArg04
l00414DE3:
	dwLocE0_117 = dwArg08
l00414DF7:
	Mem66[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0xFFFFFFFF)
	edxOut = dwLocE0_117
	return dwLocE0_117
fn00411659_exit:
l00414DBA_1:
	Mem99[edi_100:word32] = 0xCCCCCCCC
	edi_100 = edi_100 + 0x00000004
	ecx_101 = ecx_101 - 0x00000001


void fn00411663(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00411663_entry:
l00411663:
l0041ACD0:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_27 = fp - 0x000000D0
	word32 ecx_28 = 0x00000030
l0041ACFA:
	branch ecx_28 == 0x00000000 l0041ACFC
l0041ACFC:
	Mem42[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_101
	fn00411460(0x0042C016, out edx_101)
	Mem52[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0xFFFFFFFF)
	return
fn00411663_exit:
l0041ACFA_1:
	Mem79[edi_27:word32] = 0xCCCCCCCC
	edi_27 = edi_27 + 0x00000004
	ecx_28 = ecx_28 - 0x00000001


byte fn00411677(selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00411677_entry:
l00411677:
l00415890:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_121 = fp - 0x000000D4
	word32 ecx_124 = 0x00000031
l004158BA:
	branch ecx_124 == 0x00000000 l004158BC
l004158BC:
	byte bLocD4_147
	Mem42[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_45
	fn00411460(0x0042C02B, out edx_45)
	branch dwArg08 != dwArg10 l00415903
l004158DF:
	word32 eax_67 = fn004111F9(es, ds, dwArg04, dwArg0C, dwArg08)
	branch eax_67 != 0x00000000 l00415903
l00415903:
	bLocD4_147 = 0x00 (alias)
l004158F7:
	bLocD4_147 = 0x01 (alias)
l0041590D:
	Mem88[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0xFFFFFFFF)
	return bLocD4_147
fn00411677_exit:
l004158BA_1:
	Mem122[edi_121:word32] = 0xCCCCCCCC
	edi_121 = edi_121 + 0x00000004
	ecx_124 = ecx_124 - 0x00000001


void fn0041167C(word32 ecx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn0041167C_entry:
l0041167C:
l00417720:
	word32 ebp_140 = fp - 4
	word32 edi_185 = fp - 0x000000E8
	word32 ecx_188 = 0x00000036
l0041774B:
	branch ecx_188 == 0x00000000 l0041774D
l0041774D:
	Mem47[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_209
	fn00411460(0x0042C02B, out edx_209)
	word32 esp_152 = fp - 0x000000F8
	branch ecx == fn00411609(es, ds) l004177BB
l0041777D:
	fn0041132A(es, ds)
	word32 esp_83 = <invalid>
	Mem99[esp_83 - 4:word32] = fn00411483(es, ds)
	word32 ebp_102 = fn0041126C(es, ds)
	Mem119[ebp_102 - 0x000000DD:byte] = 0x00
	word32 esp_108 = <invalid>
	Mem122[esp_108:word32] = (word32) Mem119[ebp_102 - 0x000000DD:byte]
	Mem125[esp_108 - 4:word32] = Mem122[ebp_102 + 0x00000008:word32]
	Mem137[esp_108 - 4:word32] = fn004115F0(es, ds)
	word32 esp_146 = <invalid>
	ebp_140 = fn004111B3(es, ds)
	esp_152 = esp_146 + 0x00000008
l004177BB:
	Mem158[fs:0x00000000:word32] = Mem154[ebp_140 - 0x0000000C:word32]
	fn00411488(es, ds, Mem158[esp_152 + 0x000000F0:word32])
	return
fn0041167C_exit:
l0041774B_1:
	Mem186[edi_185:word32] = 0xCCCCCCCC
	edi_185 = edi_185 + 0x00000004
	ecx_188 = ecx_188 - 0x00000001


word32 fn00411695(selector es, selector ds, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0008:[0..31]
// LiveOut: edx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00411695_entry:
l00411695:
l0041A730:
	word32 edi_22 = fp - 0x000000D0
	word32 ecx_23 = 0x00000033
l0041A74D:
	branch ecx_23 == 0x00000000 l0041A74F
l0041A74F:
	word32 edx_107
	fn00411460(0x0042C01A, out edx_107)
	word32 edx_53 = fn00411613(es, ds, dwArg08)
	fn00411488(es, ds, dwLoc08)
	return edx_53
fn00411695_exit:
l0041A74D_1:
	Mem79[edi_22:word32] = 0xCCCCCCCC
	edi_22 = edi_22 + 0x00000004
	ecx_23 = ecx_23 - 0x00000001


void fn0041169F()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp esp
fn0041169F_entry:
l0041169F:
l0041D8D0:
	fn004116DB(fp - 0x00000010)
	fn0041178A()
	return
fn0041169F_exit:


void fn004116A4()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: esp
fn004116A4_entry:
l004116A4:
	call free_dbg (retsize: 4;)
	return
fn004116A4_exit:


word32 fn004116B3(selector es, selector ds, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax ebp esi esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn004116B3_entry:
l004116B3:
l00419660:
	word32 edi_189 = fp - 0x0000011C
	word32 ecx_192 = 0x00000043
l0041968B:
	branch ecx_192 == 0x00000000 l0041968D
l0041968D:
	Mem48[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_224
	fn00411460(0x0042C02B, out edx_224)
	fn004114E2(es, ds)
	fn004111CC(es, ds)
	word32 edx_225
	fn00411659(es, ds, fp - 0x00000028, fp - 0x00000100, out edx_225)
	fn00411663(es, ds)
	fn004116F9(es, ds, fp - 0x00000118, fp - 0x0000010C)
	word32 ebp_141 = fn004114D3(0x00419750, es, ds)
	word32 esp_146 = <invalid>
	word32 edx_153 = Mem136[esp_146 + 4:word32]
	Mem156[fs:0x00000000:word32] = Mem136[ebp_141 - 0x0000000C:word32]
	word32 esi_161 = Mem156[esp_146 + 16:word32]
	word32 ebp_170
	word32 ecx_226
	word32 edx_227
	word32 eax_169 = fn004113E3(Mem156[ebp_141 - 0x00000010:word32] ^ ebp_141, edx_153, Mem156[esp_146 + 20:word32], ebp_141, esi_161, Mem156[esp_146 + 12:word32], es, ds, Mem156[esp_146 + 20:word32], out ecx_226, out edx_227, out ebp_170)
	fn00411488(es, ds, Mem156[esp_146 + 0x0000012C:word32])
	ebpOut = Mem156[ebp_170:word32]
	esiOut = esi_161
	return eax_169
fn004116B3_exit:
l0041968B_1:
	Mem190[edi_189:word32] = 0xCCCCCCCC
	edi_189 = edi_189 + 0x00000004
	ecx_192 = ecx_192 - 0x00000001


word32 fn004116BD(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn004116BD_entry:
l004116BD:
l0041B260:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_30 = fp - 0x000000DC
	word32 ecx_31 = 0x00000033
l0041B28B:
	branch ecx_31 == 0x00000000 l0041B28D
l0041B28D:
	Mem47[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_119
	fn00411460(0x0042C02B, out edx_119)
	word32 edx_120
	word32 eax_70 = Mem48[fn0041128F(es, ds, out edx_120) + 0x00000014:word32]
	Mem72[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0xFFFFFFFF)
	return eax_70
fn004116BD_exit:
l0041B28B_1:
	Mem94[edi_30:word32] = 0xCCCCCCCC
	edi_30 = edi_30 + 0x00000004
	ecx_31 = ecx_31 - 0x00000001


word32 fn004116CC(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn004116CC_entry:
l004116CC:
l00415230:
	word32 edi_22 = fp - 0x00000140
	word32 ecx_23 = 0x0000004F
l0041524D:
	branch ecx_23 == 0x00000000 l0041524F
l0041524F:
	word32 edx_393
	fn00411460(0x0042C02B, out edx_393)
	word32 edx_394
	fn00411640(es, ds, out edx_394)
	word32 esp_71 = <invalid>
	word32 ebp_65
	word32 esi_395
	branch fn004116B3(es, ds, out ebp_65, out esi_395) - Mem62[ebp_65 - 0x00000024:word32] >=u Mem62[ebp_65 + 0x00000008:word32] l00415290
l0041528B:
	fn0041119A(es, ds)
l00415290:
	word32 edx_243
	Mem96[ebp_65 - 0x00000030:word32] = Mem62[ebp_65 - 0x00000024:word32] + Mem62[ebp_65 + 0x00000008:word32]
	Mem99[ebp_65 - 0x0000003C:word32] = Mem96[Mem96[ebp_65 - 0x00000018:word32] + 0x00000018:word32]
	Mem103[esp_71 - 4:word32] = Mem99[ebp_65 - 0x00000030:word32]
	word32 ebp_112
	Mem123[ebp_112 - 0x00000048:word32] = fn0041105A(es, ds, out ebp_112)
	Mem133[ebp_112 - 0x00000054:word32] = fn00411483(es, ds)
	word32 ecx_135 = Mem133[ebp_112 - 0x00000048:word32]
	Mem147[esp_71 - 8:word32] = -(uint32) (uint8) (ecx_135 <u 0x00000001) | ecx_135 + 0x00000001
	Mem158[ebp_112 - 0x00000060:word32] = fn004112D5(es, ds)
	word32 ebp_161 = fn00411479(Mem158[ebp_112 - 0x00000018:word32], es, ds)
	Mem175[Mem158[ebp_161 - 0x00000018:word32] + 0x00000014:word32] = Mem158[ebp_161 - 0x00000030:word32]
	Mem178[Mem175[ebp_161 - 0x00000018:word32] + 0x00000018:word32] = Mem175[ebp_161 - 0x00000048:word32]
	word32 esp_167 = <invalid>
	Mem181[esp_167 - 4:word32] = Mem178[ebp_161 - 0x00000060:word32]
	Mem191[ebp_161 - 0x0000006C:word32] = fn004115F5(es, ds)
	branch Mem191[ebp_161 - 0x0000003C:word32] <u 0x00000010 l0041534F
l0041534F:
	Mem196[esp_167 - 4:word32] = (word32) Mem191[ebp_161 + 0x00000010:byte]
	Mem199[esp_167 - 8:word32] = Mem196[ebp_161 - 0x00000024:word32]
	Mem204[esp_167 - 12:word32] = Mem199[ebp_161 - 0x00000018:word32] + 0x00000004
	Mem207[esp_167 - 16:word32] = Mem204[ebp_161 - 0x0000006C:word32]
	fn0041155F(es, ds, Mem207[esp_167 - 16:word32], Mem207[esp_167 - 12:word32], Mem207[esp_167 - 8:word32])
	Mem220[esp_167 - 4:word32] = ebp_161 - 0x00000060
	Mem225[esp_167 - 8:word32] = Mem220[ebp_161 - 0x00000018:word32] + 0x00000004
	Mem237[esp_167 - 0x00000008:word32] = fn004113D9(es, ds)
	Mem240[esp_167 - 0x0000000C:word32] = Mem237[ebp_161 - 0x00000054:word32]
	edx_243 = fn004114DD(es, ds)
l00415306:
	Mem253[ebp_161 - 0x00000078:word32] = Mem191[Mem191[ebp_161 - 0x00000018:word32] + 0x00000004:word32]
	Mem256[esp_167 - 4:word32] = (word32) Mem253[ebp_161 + 0x00000010:byte]
	Mem259[esp_167 - 8:word32] = Mem256[ebp_161 - 0x00000024:word32]
	Mem262[esp_167 - 12:word32] = Mem259[ebp_161 - 0x00000078:word32]
	Mem274[esp_167 - 0x0000000C:word32] = fn004115F5(es, ds)
	Mem277[esp_167 - 0x00000010:word32] = Mem274[ebp_161 - 0x0000006C:word32]
	fn0041155F(es, ds, Mem277[esp_167 - 0x00000010:word32], Mem277[esp_167 - 0x0000000C:word32], Mem277[esp_167 - 0x00000008:word32])
	Mem292[esp_167 - 4:word32] = Mem277[ebp_161 - 0x0000003C:word32] + 0x00000001
	Mem295[esp_167 - 8:word32] = Mem292[ebp_161 - 0x00000078:word32]
	edx_243 = fn00411695(es, ds, Mem295[esp_167 - 4:word32])
	Mem308[Mem295[ebp_161 - 0x00000018:word32] + 0x00000004:word32] = Mem295[ebp_161 - 0x00000060:word32]
l0041538B:
	word32 eax_311 = Mem310[ebp_161 - 0x0000000C:word32]
	Mem315[esp_167 - 4:word32] = edx_243
	Mem318[esp_167 - 8:word32] = eax_311
	word32 ebp_329 = fn004114D3(0x004153C0, es, ds)
	word32 esp_334 = <invalid>
	word32 edx_397
	word32 ecx_396
	word32 ebp_354
	fn004113E3(Mem318[ebp_329 - 0x00000004:word32] ^ ebp_329, Mem318[esp_334 + 4:word32], Mem318[esp_334 + 16:word32], ebp_329, Mem318[esp_334 + 12:word32], Mem318[esp_334 + 8:word32], es, ds, Mem318[esp_334 + 16:word32], out ecx_396, out edx_397, out ebp_354)
	fn00411488(es, ds, Mem318[esp_334 + 0x0000014C:word32])
	return Mem318[ebp_354:word32]
fn004116CC_exit:
l0041524D_1:
	Mem374[edi_22:word32] = 0xCCCCCCCC
	edi_22 = edi_22 + 0x00000004
	ecx_23 = ecx_23 - 0x00000001


void fn004116D6(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn004116D6_entry:
l004116D6:
l004116D6_thunk_fn00414FE0:
	fn00414FE0(es, ds)
	return
fn004116D6_exit:


void fn004116DB(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp esp
fn004116DB_entry:
l004116DB:
l0041D680:
	fn00411041(ecx, 0x00426570)
	Mem25[ecx:word32] = 0x00426564
	return
fn004116DB_exit:


void fn004116E5(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn004116E5_entry:
l004116E5:
l00416430:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_27 = fp - 0x000000D0
	word32 ecx_28 = 0x00000030
l0041645A:
	branch ecx_28 == 0x00000000 l0041645C
l0041645C:
	Mem42[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_103
	fn00411460(0x0042C00D, out edx_103)
	Mem52[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0xFFFFFFFF)
	return
fn004116E5_exit:
l0041645A_1:
	Mem79[edi_27:word32] = 0xCCCCCCCC
	edi_27 = edi_27 + 0x00000004
	ecx_28 = ecx_28 - 0x00000001


void fn004116EF(word32 ecx, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ebx ecx edi edx esi Top
// Preserved: esp
fn004116EF_entry:
l004116EF:
l004116EF_thunk_fn00416F30:
	fn00416F30(ecx, es, ds, dwArg04)
	return
fn004116EF_exit:


word32 fn004116F9(selector es, selector ds, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn004116F9_entry:
l004116F9:
l00414E50:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_100 = fp - 0x000000E0
	word32 ecx_101 = 0x00000034
l00414E7A:
	branch ecx_101 == 0x00000000 l00414E7C
l00414E7C:
	word32 dwLocE0_117
	Mem42[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_136
	fn00411460(0x0042C02F, out edx_136)
	branch Mem42[dwArg08:word32] >=u Mem42[dwArg04:word32] l00414EAE
l00414EAE:
	dwLocE0_117 = dwArg04
l00414EA3:
	dwLocE0_117 = dwArg08
l00414EB7:
	Mem66[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0xFFFFFFFF)
	return dwLocE0_117
fn004116F9_exit:
l00414E7A_1:
	Mem99[edi_100:word32] = 0xCCCCCCCC
	edi_100 = edi_100 + 0x00000004
	ecx_101 = ecx_101 - 0x00000001


DWORD Win32CrtStartup()
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ebx:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] xmm0:[0..127]
// LiveOut: eax
// Trashed: eax
// Preserved:
Win32CrtStartup_entry:
l004116FE:
l0041D550:
	return fn0041D200(ebx, esi, edi, es, ds, xmm0)
Win32CrtStartup_exit:


word32 fn0041170D(wchar_t * ptrArg04, rsize_t tArg08, wchar_t * ptrArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: eax
// Trashed: eax Top
// Preserved: esp
fn0041170D_entry:
l0041170D:
	return wcscpy_s(ptrArg04, tArg08, ptrArg0C)
fn0041170D_exit:


word32 fn00411717(selector es, selector ds, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: ebp esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn00411717_entry:
l00411717:
l00419460:
	word32 ebp_160 = fp - 4
	word32 edi_178 = fp - 0x0000010C
	word32 ecx_181 = 0x00000042
l0041947D:
	branch ecx_181 == 0x00000000 l0041947F
l0041947F:
	word32 esp_148
	word32 edx_215
	fn00411460(0x0042C02B, out edx_215)
	word32 edx_216
	word32 eax_46 = fn00411640(es, ds, out edx_216)
	word32 ecx_56 = Mem54[eax_46 + 0x00000014:word32]
	branch dwArg08 >u Mem57[eax_46 + 0x00000018:word32] - ecx_56 l00419502
l00419502:
	word32 esp_88 = <invalid>
	ebp_160 = fn00411190(es, ds)
	esp_148 = esp_88 + 0x00000010
l004194AF:
	Mem99[eax_46 + 0x00000014:word32] = ecx_56 + dwArg08
	word32 eax_101 = fn0041123A(eax_46, es, ds)
	fn00411087(es, ds, eax_101 + ecx_56, dwArg04, dwArg08)
	fn0041154B(es, ds, ecx_56 + dwArg08 + eax_101, fp - 0x000000F9)
	esp_148 = fp - 0x00000118
l00419526:
	fn00411488(es, ds, Mem152[esp_148 + 0x00000110:word32])
	return Mem152[ebp_160:word32]
fn00411717_exit:
l0041947D_1:
	Mem179[edi_178:word32] = 0xCCCCCCCC
	edi_178 = edi_178 + 0x00000004
	ecx_181 = ecx_181 - 0x00000001


void fn0041172B()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: esp
fn0041172B_entry:
l0041172B:
	call get_initial_narrow_environment (retsize: 4;)
	return
fn0041172B_exit:


void fn00411730(void * ptrArg04, void * ptrArg08, size_t tArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: eax Top
// Preserved: esp
fn00411730_entry:
l00411730:
	memmove(ptrArg04, ptrArg08, tArg0C)
	return
fn00411730_exit:


void fn00411735(word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut:
// Trashed: SCZO eax ebx ecx edi esi Top
// Preserved: esp
fn00411735_entry:
l00411735:
l00411735_thunk_fn0041C3A0:
	fn0041C3A0(dwArg04, dwArg08, dwArg0C, dwArg10)
	return
fn00411735_exit:


void fn00411744(word32 ecx, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ebx ecx edi edx esi Top
// Preserved: esp
fn00411744_entry:
l00411744:
l00411744_thunk_fn00416D50:
	fn00416D50(ecx, es, ds, dwArg04)
	return
fn00411744_exit:


void fn0041174E(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn0041174E_entry:
l0041174E:
l00415C30:
	word32 edi_19 = fp - 0x000000D0
	word32 ecx_20 = 0x00000033
l00415C4C:
	branch ecx_20 == 0x00000000 l00415C4E
l00415C4E:
	word32 edx_118
	fn00411460(0x0042C01A, out edx_118)
	word32 eax_44 = fn0041119F(es, ds)
	word32 eax_58 = fn00411465(es, ds)
	word32 eax_68 = Mem57[eax_58 + 0x00000004:word32]
	Mem70[eax_44:word32] = Mem57[eax_58:word32]
	Mem71[eax_44 + 0x00000004:word32] = eax_68
	fn00411488(es, ds, dwLoc08)
	return
fn0041174E_exit:
l00415C4C_1:
	Mem91[edi_19:word32] = 0xCCCCCCCC
	edi_19 = edi_19 + 0x00000004
	ecx_20 = ecx_20 - 0x00000001


word32 fn00411758(selector es, selector ds, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax edx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00411758_entry:
l00411758:
l00419090:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_30 = fp - 0x000000DC
	word32 ecx_31 = 0x00000033
l004190BB:
	branch ecx_31 == 0x00000000 l004190BD
l004190BD:
	Mem47[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_119
	fn00411460(0x0042C02B, out edx_119)
	word32 edx_64
	word32 eax_62 = fn00411640(es, ds, out edx_64)
	Mem71[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0xFFFFFFFF)
	edxOut = edx_64
	return eax_62
fn00411758_exit:
l004190BB_1:
	Mem93[edi_30:word32] = 0xCCCCCCCC
	edi_30 = edi_30 + 0x00000004
	ecx_31 = ecx_31 - 0x00000001


byte fn0041175D(selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn0041175D_entry:
l0041175D:
l004188F0:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_135 = fp - 0x000000E8
	word32 ecx_138 = 0x00000036
l0041891B:
	branch ecx_138 == 0x00000000 l0041891D
l0041891D:
	Mem47[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_169
	fn00411460(0x0042C02B, out edx_169)
	word32 edx_170
	word32 eax_62 = fn0041128F(es, ds, out edx_170)
	word32 eax_104 = (uint32) (uint8) fn00411677(es, ds, fn0041108C(eax_62, es, ds), Mem88[eax_62 + 0x00000014:word32], dwArg04, fn00411136(es, ds, dwArg04))
	Mem114[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0xFFFFFFFF)
	return SLICE(eax_104, byte, 0)
fn0041175D_exit:
l0041891B_1:
	Mem136[edi_135:word32] = 0xCCCCCCCC
	edi_135 = edi_135 + 0x00000004
	ecx_138 = ecx_138 - 0x00000001


word32 fn00411767(word32 ecx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: edx
// Trashed: SCZO eax ebx ecx edi edx esi Top
// Preserved: ebp esp
fn00411767_entry:
l00411767:
l00417340:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_103 = fp - 0x000000E4
	word32 ecx_150 = 0x00000035
l0041736B:
	branch ecx_150 == 0x00000000 l0041736D
l0041736D:
	Mem47[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_178
	fn00411460(0x0042C02C, out edx_178)
	word32 ecx_57 = Mem48[ecx:word32]
	word32 eax_64 = rdbuf(ecx_57 + Mem58[Mem58[ecx_57:word32] + 0x00000004:word32])
	fn00411488(es, ds, dwLocF8)
	word32 esp_104 = fp - 0x000000F4
	word32 edx_107 = ecx_57
	branch eax_64 == 0x00000000 l00417408
l004173BB:
	word32 ecx_81 = Mem58[ecx:word32]
	word32 eax_88 = rdbuf(ecx_81 + Mem82[Mem82[ecx_81:word32] + 0x00000004:word32])
	fn00411488(es, ds, dwLocF8)
	word32 edx_98 = Mem96[eax_88:word32]
	call Mem96[edx_98 + 0x00000008:word32] (retsize: 4;)
		uses: ecx:eax_88,edx:edx_98,Stack +0000:dwLocF8,Stack +0014:eax_88
		defs: edx:edx_107,esp:esp_104
	fn00411488(es, ds, Mem96[esp_104 + -4:word32])
l00417408:
	Mem121[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, Mem121[esp_104 + 0x000000EC:word32])
	return edx_107
fn00411767_exit:
l0041736B_1:
	Mem148[edi_103:word32] = 0xCCCCCCCC
	edi_103 = edi_103 + 0x00000004
	ecx_150 = ecx_150 - 0x00000001


word32 fn00411771()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15]
// LiveOut: eax
// Trashed: eax Top
// Preserved: ebp esp
fn00411771_entry:
l00411771:
l0041C6F0:
	return Mem6[fs:0x00000018:word32]
fn00411771_exit:


word32 fn00411776()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp esp
fn00411776_entry:
l00411776:
l0041C700:
	word32 eax_55
	word32 eax_10 = fn004111BD()
	word24 eax_24_8_56 = SLICE(eax_10, word24, 8)
	branch eax_10 != 0x00000000 l0041C713
l0041C713:
	word32 eax_20 = Mem6[fn00411771() + 0x00000004:word32]
l0041C71E:
	__lock()
	word32 eax_27
	__cmpxchg(Mem23[0x00429328:word32], eax_20, 0x00000000, out eax_27)
	word24 eax_24_8_60 = SLICE(eax_27, word24, 8)
	branch eax_27 == 0x00000000 l0041C743
l0041C743:
	eax_55 = SEQ(eax_24_8_60, 0x00) (alias)
l0041C735:
	word24 eax_24_8_58 = SLICE(eax_20, word24, 8)
	branch eax_20 != eax_27 l0041C741
l0041C741:
l0041C73D:
	eax_55 = SEQ(eax_24_8_58, 0x01) (alias)
l0041C70F:
	eax_55 = SEQ(eax_24_8_56, 0x00) (alias)
l0041C745:
	return eax_55
fn00411776_exit:


word32 fn00411780(selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, ptr32 & ebpOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31]
// LiveOut: ebp ebx edi esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn00411780_entry:
l00411780:
l0041F770:
	Mem18[dwArg10:word32] = 0x00000000
	Mem27[dwArg08:word16] = 0x0000
	word32 ebp_141 = fp - 4
	word32 esp_144 = fp - 0x00000068
	word32 eax_33 = VirtualQuery(dwArg04 - 0x00000001, fp - 0x00000050, 0x0000001C)
	branch eax_33 == 0x00000000 l0041FAF3
l0041F7A3:
	fn004110B4()
	esp_144 = fp - 0x00000068
	branch eax_33 == 0x00000000 l0041FAF3
l0041F7BC:
	branch Mem45[dwLoc4C:word16] != 0x5A4D l0041FAF3
l0041F7CD:
	word32 ecx_56 = Mem45[dwLoc4C + 0x0000003C:word32]
	branch ecx_56 <= 0x00000000 l0041FAF3
l0041F7D8:
	word32 ecx_59 = ecx_56 + dwLoc4C
	branch Mem45[ecx_59:word32] != 0x00004550 l0041FAF3
l0041F7E6:
	word32 edx_62 = (word32) Mem45[ecx_59 + 0x00000014:word16]
	word32 esi_63 = dwArg04 - 0x00000001 - dwLoc4C
	word32 edi_64 = (word32) Mem45[ecx_59 + 0x00000006:word16]
	word32 edx_133 = edx_62 + 0x00000020
	word32 ebx_135 = 0x00000000
	word32 eax_67 = 0x00000000
	branch edi_64 == 0x00000000 l0041F817
l0041F7FB:
	word32 ecx_73 = ecx_59 + (edx_62 + 0x00000020) + 0x00000004
l0041F800:
	edx_133 = Mem45[ecx_73 + 0x00000000:word32]
	branch esi_63 <u edx_133 l0041F80F
l0041F807:
	ebx_135 = esi_63 - edx_133
	branch esi_63 <u Mem45[ecx_73:word32] l0041F817
l0041F80F:
	eax_67 = eax_67 + 0x00000001
	ecx_73 = ecx_73 + 0x00000028
	branch eax_67 <u edi_64 l0041F800
l0041F817:
	branch eax_67 == edi_64 l0041FAF3
l0041F81F:
	word32 eax_106
	branch Mem45[0x00429759:byte] != 0x00 l0041F854
l0041F854:
	eax_106 = Mem104[0x00429754:word32]
l0041F82C:
	branch Mem104[0x00429754:word32] != 0x00000000 l0041FAF3
l0041F839:
	eax_106 = fn0041F1E0(edx_133, ebx_135, esi_63, edi_64, es, ds, out ebx_135, out ebp_141)
	Mem153[0x00429754:word32] = eax_106
	esp_144 = <invalid>
	branch eax_106 == 0x00000000 l0041FAF3
l0041F84B:
	Mem157[0x00429759:byte] = 0x01
l0041F859:
	word32 esp_162 = esp_144 - 4
	Mem163[esp_162:word32] = 0x00426F5C
	Mem166[esp_162 - 4:word32] = eax_106
	esp_144 = esp_162 - 4
	word32 eax_167 = GetProcAddress(Mem166[esp_162 - 4:HMODULE], Mem166[esp_162:LPCSTR])
	branch eax_167 == 0x00000000 l0041FAF3
l0041F86F:
	Mem176[esp_162 - 8:word32] = ebp_141 - 0x00000018
	Mem178[esp_162 - 12:word32] = 0x00000000
	Mem180[esp_162 - 16:word32] = 0x00000000
	Mem183[esp_162 - 20:word32] = ebp_141 - 0x00000030
	Mem185[esp_162 - 24:word32] = 0x00000000
	Mem187[esp_162 - 28:word32] = 0x00000000
	Mem189[esp_162 - 32:word32] = 0x00000000
	Mem192[esp_162 - 36:word32] = Mem189[ebp_141 + 0x00000018:word32]
	fn00411366()
	esp_144 = esp_162 - 0x00000004
	branch eax_167() == 0x00000000 l0041FAF3
l0041FAF3:
	word32 edi_217 = Mem216[esp_144:word32]
	word32 ebx_224 = Mem216[esp_144 + 8:word32]
	ebpOut = Mem216[ebp_141:word32]
	ediOut = edi_217
	return ebx_224
l0041F899:
	word32 edi_229 = Mem192[ebp_141 - 0x00000018:word32]
	Mem230[ebp_141 - 0x00000024:word32] = 0x00000000
	word32 esi_232 = Mem230[Mem230[edi_229:word32]:word32]
	fn00411366()
	word32 esp_235
	word32 eax_236
	word32 edx_238
	call esi_232 (retsize: 4;)
		uses: ecx:edi_229,edx:edx_238,Stack +0008:dwArg04,Stack +000C:dwArg08,Stack +0014:dwArg10,Stack +0018:dwArg14,Stack +001C:dwArg18,Stack +FFFFFFB8:dwLoc4C
		defs: eax:eax_236,edx:edx_238,esp:esp_235
	branch eax_236 != 0x01329141 l0041FA0E
l0041F8BE:
	word32 edi_243 = Mem230[ebp_141 - 0x00000018:word32]
	word32 esi_245 = Mem230[Mem230[edi_243:word32] + 0x0000001C:word32]
	Mem248[esp_235 - 4:word32] = ebp_141 - 0x00000020
	Mem250[esp_235 - 8:word32] = 0x00426F70
	Mem252[esp_235 - 12:word32] = 0x00000000
	fn00411366()
	word32 esp_255
	word32 eax_256
	word32 edx_258
	call esi_245 (retsize: 4;)
		uses: ecx:edi_243,edx:edx_258,Stack +0008:dwArg04,Stack +000C:dwArg08,Stack +0014:dwArg10,Stack +0018:dwArg14,Stack +001C:dwArg18,Stack +FFFFFFB8:dwLoc4C
		defs: eax:eax_256,edx:edx_258,esp:esp_255
	branch eax_256 == 0x00000000 l0041FA0E
l0041F8E5:
	word32 edi_264 = Mem252[ebp_141 - 0x00000020:word32]
	Mem266[esp_255 - 4:word32] = 0x00000000
	Mem268[esp_255 - 8:word32] = 0x00000000
	Mem270[esp_255 - 12:word32] = 0x00000000
	word32 esi_272 = Mem270[Mem270[edi_264:word32] + 0x00000020:word32]
	Mem275[esp_255 - 16:word32] = ebp_141 - 0x00000014
	Mem277[esp_255 - 20:word32] = ebx_135
	Mem280[esp_255 - 24:word32] = Mem277[ebp_141 - 0x0000000C:word32]
	fn00411366()
	word32 esp_283
	word32 eax_284
	word32 edx_286
	call esi_272 (retsize: 4;)
		uses: ecx:edi_264,edx:edx_286,Stack +0008:dwArg04,Stack +000C:dwArg08,Stack +0014:dwArg10,Stack +0018:dwArg14,Stack +001C:dwArg18,Stack +FFFFFFB8:dwLoc4C
		defs: eax:eax_284,edx:edx_286,esp:esp_283
	branch eax_284 == 0x00000000 l0041F9FA
l0041F90F:
	word32 edi_292 = Mem280[ebp_141 - 0x00000014:word32]
	Mem293[ebp_141 - 0x00000008:word32] = 0x00000000
	word32 esi_295 = Mem293[Mem293[edi_292:word32] + 0x00000068:word32]
	Mem298[esp_283 - 4:word32] = ebp_141 - 0x00000008
	fn00411366()
	word32 eax_302
	word32 edx_304
	call esi_295 (retsize: 4;)
		uses: ecx:edi_292,edx:edx_304,Stack +0008:dwArg04,Stack +000C:dwArg08,Stack +0014:dwArg10,Stack +0018:dwArg14,Stack +001C:dwArg18,Stack +FFFFFFB8:dwLoc4C
		defs: eax:eax_302,edx:edx_304
	branch SLICE(eax_302, byte, 0) == 0x00 l0041F9E6
l0041F936:
	word32 eax_311 = Mem298[ebp_141 - 0x00000008:word32]
	branch eax_311 == 0x00000000 l0041F9E6
l0041F941:
	word32 esi_319 = Mem298[Mem298[eax_311:word32] + 0x00000008:word32]
	fn00411366()
	word32 eax_323
	word32 edx_325
	word32 esp_322
	call esi_319 (retsize: 4;)
		uses: ecx:Mem298[ebp_172 - 0x00000008:word32],edx:edx_325,Stack +0008:dwArg04,Stack +000C:dwArg08,Stack +0014:dwArg10,Stack +0018:dwArg14,Stack +001C:dwArg18,Stack +FFFFFFB8:dwLoc4C
		defs: eax:eax_323,edx:edx_325,esp:esp_322
	word32 edi_316 = 0x00000000
	branch eax_323 == 0x00000000 l0041F9C3
l0041F959:
l0041F960:
	word32 edi_334 = Mem333[ebp_141 - 0x00000008:word32]
	word32 esp_336 = esp_322 - 4
	Mem337[esp_336:word32] = 0x00000000
	word32 esi_339 = Mem337[Mem337[edi_334:word32] + 0x0000000C:word32]
	Mem342[esp_336 - 4:word32] = ebp_141 - 0x00000010
	Mem346[esp_336 - 8:word32] = ebp_141 - 0x00000028
	Mem349[esp_336 - 12:word32] = ebp_141 - 0x00000004
	Mem352[esp_336 - 16:word32] = ebp_141 - 0x0000001C
	Mem354[esp_336 - 20:word32] = 0x00000000
	fn00411366()
	word32 esp_364
	word32 eax_365
	word32 edx_367
	call esi_339 (retsize: 4;)
		uses: ecx:edi_334,edx:edx_367,Stack +0008:dwArg04,Stack +000C:dwArg08,Stack +0014:dwArg10,Stack +0018:dwArg14,Stack +001C:dwArg18,Stack +FFFFFFB8:dwLoc4C
		defs: eax:eax_365,edx:edx_367,esp:esp_364
	branch SLICE(eax_365, byte, 0) == 0x00 l0041F9D3
l0041F98C:
	branch (word32) Mem354[ebp_141 - 0x00000004:word16] != Mem354[ebp_141 - 0x0000000C:word32] l0041F9A9
l0041F995:
	word32 ecx_377 = Mem354[ebp_141 - 0x0000001C:word32]
	branch ecx_377 >u ebx_135 l0041F9A9
l0041F99C:
	branch ebx_135 <u Mem354[ebp_141 - 0x00000028:word32] + ecx_377 l0041FA2C
l0041FA2C:
	word32 eax_384 = Mem354[ebp_141 - 0x00000010:word32]
	branch eax_384 == 0x00000000 l0041F9D3
l0041FA33:
	branch eax_384 >=u 0x1FFFFFFF l0041F9D3
l0041FA3A:
	Mem392[esp_364 - 4:word32] = eax_384 << 0x00000003
	Mem394[esp_364 - 8:word32] = 0x00000000
	Mem397[esp_364 - 12:word32] = GetProcessHeap()
	word32 eax_398 = HeapAlloc(Mem397[esp_364 - 12:HANDLE], Mem397[esp_364 - 8:DWORD], Mem397[esp_364 - 4:SIZE_T])
	Mem399[ebp_141 - 0x0000000C:word32] = eax_398
	branch eax_398 == 0x00000000 l0041F9D3
l0041FA58:
	word32 edi_403 = Mem399[ebp_141 - 0x00000008:word32]
	Mem405[esp_364 - 16:word32] = eax_398
	Mem408[esp_364 - 20:word32] = ebp_141 - 0x00000010
	word32 ecx_409 = Mem408[edi_403:word32]
	Mem412[esp_364 - 24:word32] = 0x00000000
	Mem414[esp_364 - 28:word32] = 0x00000000
	Mem416[esp_364 - 32:word32] = 0x00000000
	word32 esi_417 = Mem416[ecx_409 + 0x0000000C:word32]
	Mem420[esp_364 - 36:word32] = ebp_141 - 0x0000002C
	fn00411366()
	word32 eax_423
	word32 edx_425
	call esi_417 (retsize: 4;)
		uses: ecx:edi_403,edx:edx_425,Stack +0008:dwArg04,Stack +000C:dwArg08,Stack +0014:dwArg10,Stack +0018:dwArg14,Stack +001C:dwArg18,Stack +FFFFFFB8:dwLoc4C
		defs: eax:eax_423,edx:edx_425,esp:esp_422
	edi_316 = Mem420[ebp_141 - 0x0000000C:word32]
	branch SLICE(eax_423, byte, 0) == 0x00 l0041F9C3
l0041FA86:
	word32 ebx_433 = ebx_135 - Mem420[ebp_141 - 0x0000001C:word32]
	branch ebx_433 <u Mem420[edi_316:word32] l0041F9C3
l0041FA91:
	word32 ecx_436 = Mem420[ebp_141 - 0x00000010:word32]
	word32 eax_437 = 0x00000001
	branch ecx_436 <=u 0x00000001 l0041FAAA
l0041FA9D:
l0041FAA0:
	branch ebx_433 <u Mem420[edi_316 + eax_437 * 0x00000008:word32] l0041FAAA
l0041FAA5:
	eax_437 = eax_437 + 0x00000001
	branch eax_437 <u ecx_436 l0041FAA0
l0041FAAA:
	word32 eax_454 = Mem420[edi_316 - 0x00000004 + eax_437 * 0x00000008:word32]
	word32 ecx_457 = Mem420[ebp_141 + 0x00000014:word32]
	word32 edi_461 = Mem420[ebp_141 - 0x00000014:word32]
	Mem465[esp_322 - 4:word32] = 0x00000000
	Mem467[esp_322 - 8:word32] = 0x00000000
	Mem468[ecx_457:word32] = eax_454 & 0x00FFFFFF
	word32 eax_469 = Mem468[edi_461:word32]
	Mem471[esp_322 - 12:word32] = 0x00000000
	word32 esi_472 = Mem471[eax_469 + 0x00000070:word32]
	Mem475[esp_322 - 16:word32] = ebp_141 + 0x00000010
	Mem478[esp_322 - 20:word32] = Mem475[ebp_141 + 0x0000000C:word32]
	Mem482[esp_322 - 24:word32] = Mem478[ebp_141 - 0x0000002C:word32]
	fn00411366()
	word32 eax_500
	word32 edx_502
	call esi_472 (retsize: 4;)
		uses: ecx:edi_461,edx:edx_502,Stack +0008:dwArg04,Stack +000C:dwArg08,Stack +0014:dwArg10,Stack +0018:dwArg14,Stack +001C:dwArg18,Stack +FFFFFFB8:dwLoc4C
		defs: eax:eax_500,edx:edx_502,esp:esp_499
	edi_316 = Mem482[ebp_141 - 0x0000000C:word32]
	branch SLICE(eax_500, byte, 0) == 0x00 l0041F9C3
l0041FAE7:
	Mem510[ebp_141 - 0x00000024:word32] = 0x00000001
l0041F9A9:
	word32 edi_513 = Mem354[ebp_141 - 0x00000008:word32]
	word32 esi_515 = Mem354[Mem354[edi_513:word32] + 0x00000008:word32]
	fn00411366()
	word32 eax_528
	word32 edx_530
	call esi_515 (retsize: 4;)
		uses: ecx:edi_513,edx:edx_530,Stack +0008:dwArg04,Stack +000C:dwArg08,Stack +0014:dwArg10,Stack +0018:dwArg14,Stack +001C:dwArg18,Stack +FFFFFFB8:dwLoc4C
		defs: eax:eax_528,edx:edx_530,esp:esp_527
	branch eax_528 != 0x00000000 l0041F960
l0041F9C1:
	edi_316 = 0x00000000
l0041F9C3:
	word32 esp_540 = esp_322 - 4
	Mem542[esp_540:word32] = edi_316
	Mem544[esp_540 - 4:word32] = 0x00000000
	Mem547[esp_540 - 8:word32] = GetProcessHeap()
	HeapFree(Mem547[esp_540 - 8:HANDLE], Mem547[esp_540 - 4:DWORD], Mem547[esp_540:LPVOID])
l0041F9D3:
	word32 edi_552 = Mem551[ebp_141 - 0x00000008:word32]
	word32 esi_554 = Mem551[Mem551[edi_552:word32]:word32]
	fn00411366()
	word32 edx_577
	call esi_554 (retsize: 4;)
		uses: ecx:edi_552,edx:edx_577,Stack +0008:dwArg04,Stack +000C:dwArg08,Stack +0014:dwArg10,Stack +0018:dwArg14,Stack +001C:dwArg18,Stack +FFFFFFB8:dwLoc4C
		defs: edx:edx_577
l0041F9E6:
	word32 edi_582 = Mem581[ebp_141 - 0x00000014:word32]
	word32 esi_584 = Mem581[Mem581[edi_582:word32] + 0x00000040:word32]
	fn00411366()
	word32 edx_599
	call esi_584 (retsize: 4;)
		uses: ecx:edi_582,edx:edx_599,Stack +0008:dwArg04,Stack +000C:dwArg08,Stack +0014:dwArg10,Stack +0018:dwArg14,Stack +001C:dwArg18,Stack +FFFFFFB8:dwLoc4C
		defs: edx:edx_599
l0041F9FA:
	word32 edi_604 = Mem603[ebp_141 - 0x00000020:word32]
	word32 esi_606 = Mem603[Mem603[edi_604:word32] + 0x00000038:word32]
	fn00411366()
	word32 edx_621
	call esi_606 (retsize: 4;)
		uses: ecx:edi_604,edx:edx_621,Stack +0008:dwArg04,Stack +000C:dwArg08,Stack +0014:dwArg10,Stack +0018:dwArg14,Stack +001C:dwArg18,Stack +FFFFFFB8:dwLoc4C
		defs: edx:edx_621
l0041FA0E:
	word32 edi_626 = Mem625[ebp_141 - 0x00000018:word32]
	word32 esi_628 = Mem625[Mem625[edi_626:word32] + 0x0000002C:word32]
	fn00411366()
	word32 esp_640
	word32 edx_643
	call esi_628 (retsize: 4;)
		uses: ecx:edi_626,edx:edx_643,Stack +0008:dwArg04,Stack +000C:dwArg08,Stack +0014:dwArg10,Stack +0018:dwArg14,Stack +001C:dwArg18,Stack +FFFFFFB8:dwLoc4C
		defs: edx:edx_643,esp:esp_640
	word32 edi_647 = Mem625[esp_640:word32]
	word32 ebx_651 = Mem625[esp_640 + 8:word32]
	ebpOut = Mem625[ebp_141:word32]
	ediOut = edi_647
	return ebx_651
fn00411780_exit:


void fn0041178A()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: esp
fn0041178A_entry:
l0041178A:
	call CxxThrowException (retsize: 4;)
	return
fn0041178A_exit:


void fn0041178F(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn0041178F_entry:
l0041178F:
l00413AF0:
	word32 edi_123 = fp - 0x000000F4
	word32 ecx_126 = 0x0000003C
l00413B0D:
	branch ecx_126 == 0x00000000 l00413B0F
l00413B0F:
	word32 edx_153
	fn00411460(0x0042C02B, out edx_153)
	word32 edx_154
	word32 eax_46 = fn00411640(es, ds, out edx_154)
	Mem56[eax_46 + 0x00000014:word32] = 0x00000001
	word32 eax_58 = fn0041123A(eax_46, es, ds)
	fn0041154B(es, ds, eax_58, fp + 0x00000004)
	fn0041154B(es, ds, eax_58 + 0x00000001, fp - 0x000000ED)
	fn00411488(es, ds, dwLoc08)
	return
fn0041178F_exit:
l00413B0D_1:
	Mem124[edi_123:word32] = 0xCCCCCCCC
	edi_123 = edi_123 + 0x00000004
	ecx_126 = ecx_126 - 0x00000001


word32 fn00413B90(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00413B90_entry:
l00413B90:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_101 = fp - 0x000000DC
	word32 ecx_104 = 0x00000033
l00413BBB:
	branch ecx_104 == 0x00000000 l00413BBD
l00413BBD:
	Mem47[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_127
	fn00411460(0x0042C02B, out edx_127)
	word32 edx_128
	word32 eax_71 = fn0041108C(fn0041128F(es, ds, out edx_128), es, ds)
	Mem80[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0xFFFFFFFF)
	return eax_71
fn00413B90_exit:
l00413BBB_1:
	Mem102[edi_101:word32] = 0xCCCCCCCC
	edi_101 = edi_101 + 0x00000004
	ecx_104 = ecx_104 - 0x00000001


byte fn004141F0(selector es, selector ds, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0008:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn004141F0_entry:
l004141F0:
	word32 edi_19 = fp - 0x000000C4
	word32 ecx_20 = 0x00000030
l0041420C:
	branch ecx_20 == 0x00000000 l0041420E
l0041420E:
	word32 edx_95
	fn00411460(0x0042C02B, out edx_95)
	word32 eax_43 = (uint32) (uint8) fn0041175D(es, ds, dwArg08)
	fn00411488(es, ds, dwLoc08)
	return SLICE(eax_43, byte, 0)
fn004141F0_exit:
l0041420C_1:
	Mem71[edi_19:word32] = 0xCCCCCCCC
	edi_19 = edi_19 + 0x00000004
	ecx_20 = ecx_20 - 0x00000001


word32 fn00414440(selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00414440_entry:
l00414440:
	word32 edi_101 = fp - 0x000000C4
	word32 ecx_104 = 0x00000030
l0041445C:
	branch ecx_104 == 0x00000000 l0041445E
l0041445E:
	word32 eax_130
	word32 edx_25
	fn00411460(0x0042C01A, out edx_25)
	branch dwArg04 <u 0x00001000 l0041447F
l0041447F:
	branch dwArg04 == 0x00000000 l00414493
l00414493:
	eax_130 = 0x00000000
l00414485:
	eax_130 = fn00411172(es, ds, dwArg04)
l00414471:
	fn00411212(es, ds, dwArg04)
	eax_130 = dwArg04
l00414495:
	fn00411488(es, ds, dwLoc08)
	return eax_130
fn00414440_exit:
l0041445C_1:
	Mem102[edi_101:word32] = 0xCCCCCCCC
	edi_101 = edi_101 + 0x00000004
	ecx_104 = ecx_104 - 0x00000001


void fn004144D0(selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO ebx ecx edi edx esi Top
// Preserved: ebp esp
fn004144D0_entry:
l004144D0:
	word32 edi_19 = fp - 0x000000E8
	word32 ecx_20 = 0x00000039
l004144EC:
	branch ecx_20 == 0x00000000 l004144EE
l004144EE:
	word32 edx_251
	fn00411460(0x0042C01A, out edx_251)
	word32 dwLoc0C_229 = dwArg04 + 0x00000027
	branch dwArg04 + 0x00000027 >u dwArg04 l00414510
l00414509:
	dwLoc0C_229 = 0xFFFFFFFF
l00414510:
	word32 eax_58 = fn00411172(es, ds, dwLoc0C_229)
	word32 esp_135 = fp - 0x000000F4
l0041451F:
	branch eax_58 == 0x00000000 l00414527
l00414527:
	word32 esp_75 = esp_135 - 4
	Mem76[esp_75:word32] = 0x00425C40
	Mem78[esp_75 - 4:word32] = 0x00425C54
	Mem80[esp_75 - 8:word32] = 0x00000000
	Mem82[esp_75 - 12:word32] = 0x00000065
	Mem84[esp_75 - 16:word32] = 0x00425C88
	Mem86[esp_75 - 20:word32] = 0x00000002
	word32 esp_91
	word32 eax_93
	call CrtDbgReport (retsize: 4;)
		uses: Stack +0008:dwArg04
		defs: eax:eax_93,esp:esp_91
	fn00411488(es, ds, Mem86[esp_91 + 0x00000014:word32])
	branch eax_93 != 0x00000001 l00414554
l00414553:
	int3()
l00414554:
	Mem116[esp_91 + 0x00000014:word32] = 0x00000000
	Mem118[esp_91 + 0x00000010:word32] = 0x00000065
	Mem120[esp_91 + 0x0000000C:word32] = 0x00425D08
	Mem122[esp_91 + 0x00000008:word32] = 0x004264D8
	Mem124[esp_91 + 0x00000004:word32] = 0x00425C58
	word32 esp_129
	call invalid_parameter (retsize: 4;)
		uses: Stack +0008:dwArg04
		defs: esp:esp_129
	fn00411488(es, ds, Mem124[esp_129 + 0x00000010:word32])
	esp_135 = esp_129 + 0x00000014
	branch false l00414527
l00414525:
l0041457D:
	branch false l0041451F
l00414581:
	word32 eax_161 = eax_58 + 0x00000027 & 0xFFFFFFE0
	Mem167[eax_161 + 0xFFFFFFFC:word32] = eax_58
	Mem171[eax_161 + 0xFFFFFFF8:word32] = 0xFAFAFAFA
	fn00411488(es, ds, Mem171[esp_135 + 0x000000EC:word32])
	return
fn004144D0_exit:
l004144EC_1:
	Mem206[edi_19:word32] = 0xCCCCCCCC
	edi_19 = edi_19 + 0x00000004
	ecx_20 = ecx_20 - 0x00000001


word32 fn004147A0(selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn004147A0_entry:
l004147A0:
	word32 edi_19 = fp - 0x000000DC
	word32 ecx_20 = 0x00000036
l004147BC:
	branch ecx_20 == 0x00000000 l004147BE
l004147BE:
	word32 edx_105
	fn00411460(0x0042C01A, out edx_105)
	word32 dwLoc18_89 = dwArg04 << 0x00000003
	branch dwArg04 <=u 0x1FFFFFFF l004147E8
l004147E1:
	dwLoc18_89 = 0xFFFFFFFF
l004147E8:
	fn00411488(es, ds, dwLoc08)
	return dwLoc18_89
fn004147A0_exit:
l004147BC_1:
	Mem74[edi_19:word32] = 0xCCCCCCCC
	edi_19 = edi_19 + 0x00000004
	ecx_20 = ecx_20 - 0x00000001


void fn00414FE0(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00414FE0_entry:
l00414FE0:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_27 = fp - 0x000000D0
	word32 ecx_28 = 0x00000030
l0041500A:
	branch ecx_28 == 0x00000000 l0041500C
l0041500C:
	Mem42[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_115
	fn00411460(0x0042C01A, out edx_115)
	fn004116E5(es, ds)
	Mem68[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0xFFFFFFFF)
	return
fn00414FE0_exit:
l0041500A_1:
	Mem90[edi_27:word32] = 0xCCCCCCCC
	edi_27 = edi_27 + 0x00000004
	ecx_28 = ecx_28 - 0x00000001


word32 fn00415EA0(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00415EA0_entry:
l00415EA0:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_27 = fp - 0x000000D0
	word32 ecx_28 = 0x00000030
l00415ECA:
	branch ecx_28 == 0x00000000 l00415ECC
l00415ECC:
	Mem42[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_103
	fn00411460(0x0042C00D, out edx_103)
	Mem52[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0xFFFFFFFF)
	return dwArg04
fn00415EA0_exit:
l00415ECA_1:
	Mem79[edi_27:word32] = 0xCCCCCCCC
	edi_27 = edi_27 + 0x00000004
	ecx_28 = ecx_28 - 0x00000001


word32 fn004164C0(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn004164C0_entry:
l004164C0:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_27 = fp - 0x000000D0
	word32 ecx_28 = 0x00000030
l004164EA:
	branch ecx_28 == 0x00000000 l004164EC
l004164EC:
	Mem42[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_103
	fn00411460(0x0042C00D, out edx_103)
	Mem52[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0xFFFFFFFF)
	return dwArg04
fn004164C0_exit:
l004164EA_1:
	Mem79[edi_27:word32] = 0xCCCCCCCC
	edi_27 = edi_27 + 0x00000004
	ecx_28 = ecx_28 - 0x00000001


word32 fn004165E0(word32 ecx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn004165E0_entry:
l004165E0:
	word32 edi_113 = fp - 0x000000E8
	word32 ecx_116 = 0x00000036
l0041660B:
	branch ecx_116 == 0x00000000 l0041660D
l0041660D:
	Mem47[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_137
	fn00411460(0x0042C02B, out edx_137)
	fn0041127B(ecx, es, ds)
	word32 ebp_77 = fn004113D4(es, ds)
	Mem89[ebp_77 - 0x00000004:word32] = 0xFFFFFFFF
	Mem92[fs:0x00000000:word32] = Mem89[ebp_77 - 0x0000000C:word32]
	word32 esp_83 = <invalid>
	fn00411488(es, ds, Mem92[esp_83 + 0x000000F0:word32])
	return Mem92[ebp_77:word32]
fn004165E0_exit:
l0041660B_1:
	Mem114[edi_113:word32] = 0xCCCCCCCC
	edi_113 = edi_113 + 0x00000004
	ecx_116 = ecx_116 - 0x00000001


void fn004166A0(word32 ecx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn004166A0_entry:
l004166A0:
	word32 edi_22 = fp - 0x000000D0
	word32 ecx_23 = 0x00000033
l004166BD:
	branch ecx_23 == 0x00000000 l004166BF
l004166BF:
	word32 edx_111
	fn00411460(0x0042C02B, out edx_111)
	fn00411357(ecx, es, ds)
	fn004114D8(es, ds)
	Mem66[ecx + 0x00000014:word32] = 0x00000000
	Mem68[ecx + 0x00000018:word32] = 0x00000000
	fn00411488(es, ds, dwLoc08)
	return
fn004166A0_exit:
l004166BD_1:
	Mem89[edi_22:word32] = 0xCCCCCCCC
	edi_22 = edi_22 + 0x00000004
	ecx_23 = ecx_23 - 0x00000001


void fn00416730(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00416730_entry:
l00416730:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_30 = fp - 0x000000DC
	word32 ecx_31 = 0x00000033
l0041675B:
	branch ecx_31 == 0x00000000 l0041675D
l0041675D:
	Mem47[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_110
	fn00411460(0x0042C01A, out edx_110)
	Mem58[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0xFFFFFFFF)
	return
fn00416730_exit:
l0041675B_1:
	Mem85[edi_30:word32] = 0xCCCCCCCC
	edi_30 = edi_30 + 0x00000004
	ecx_31 = ecx_31 - 0x00000001


word32 fn00416A40(word32 ecx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp
// Trashed: SCZO eax ebp ecx edx esp Top
// Preserved: ebx edi esi
fn00416A40_entry:
l00416A40:
	word32 edi_106 = fp - 0x000000DC
	word32 ecx_109 = 0x00000033
l00416A6B:
	branch ecx_109 == 0x00000000 l00416A6D
l00416A6D:
	Mem47[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_130
	fn00411460(0x0042C02B, out edx_130)
	word32 ebp_63 = fn0041100F(ecx, es, ds)
	fn004112F8(es, ds)
	Mem85[fs:0x00000000:word32] = Mem48[ebp_63 - 0x0000000C:word32]
	fn00411488(es, ds, 0xFFFFFFFF)
	return Mem85[ebp_63:word32]
fn00416A40_exit:
l00416A6B_1:
	Mem107[edi_106:word32] = 0xCCCCCCCC
	edi_106 = edi_106 + 0x00000004
	ecx_109 = ecx_109 - 0x00000001


void fn00416AE0(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00416AE0_entry:
l00416AE0:
	word32 edi_22 = fp - 0x000000D0
	word32 ecx_23 = 0x00000033
l00416AFD:
	branch ecx_23 == 0x00000000 l00416AFF
l00416AFF:
	word32 edx_87
	fn00411460(0x0042C02B, out edx_87)
	fn00411488(es, ds, dwLoc08)
	return
fn00416AE0_exit:
l00416AFD_1:
	Mem65[edi_22:word32] = 0xCCCCCCCC
	edi_22 = edi_22 + 0x00000004
	ecx_23 = ecx_23 - 0x00000001


void fn00416B40(word32 ecx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00416B40_entry:
l00416B40:
	word32 edi_22 = fp - 0x000000D0
	word32 ecx_23 = 0x00000033
l00416B5D:
	branch ecx_23 == 0x00000000 l00416B5F
l00416B5F:
	word32 edx_89
	fn00411460(0x0042C018, out edx_89)
	Mem40[ecx:word32] = 0x00000000
	fn00411488(es, ds, dwLoc08)
	return
fn00416B40_exit:
l00416B5D_1:
	Mem67[edi_22:word32] = 0xCCCCCCCC
	edi_22 = edi_22 + 0x00000004
	ecx_23 = ecx_23 - 0x00000001


void fn00416D50(word32 ecx, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ebx ecx edi edx esi Top
// Preserved: ebp esp
fn00416D50_entry:
l00416D50:
	word32 edi_133 = fp - 0x000000D8
	word32 ecx_134 = 0x00000035
l00416D6D:
	branch ecx_134 == 0x00000000 l00416D6F
l00416D6F:
	word32 edx_157
	fn00411460(0x0042C02D, out edx_157)
	Mem41[ecx:word32] = dwArg04
	word32 ecx_43 = Mem41[ecx:word32]
	word32 eax_50 = rdbuf(ecx_43 + Mem44[Mem44[ecx_43:word32] + 0x00000004:word32])
	fn00411488(es, ds, ecx)
	word32 esp_107 = fp - 0x000000E4
	branch eax_50 == 0x00000000 l00416E01
l00416DB4:
	word32 ecx_68 = Mem44[ecx:word32]
	word32 eax_75 = rdbuf(ecx_68 + Mem69[Mem69[ecx_68:word32] + 0x00000004:word32])
	fn00411488(es, ds, ecx)
	word32 edx_85 = Mem83[eax_75:word32]
	call Mem83[edx_85 + 0x00000004:word32] (retsize: 4;)
		uses: ecx:eax_75,edx:edx_85,Stack +0010:eax_75,Stack +00EC:dwArg04
		defs: esp:esp_91
	fn00411488(es, ds, Mem83[esp_107 + -4:word32])
l00416E01:
	fn00411488(es, ds, Mem105[esp_107 + 0x000000DC:word32])
	return
fn00416D50_exit:
l00416D6D_1:
	Mem132[edi_133:word32] = 0xCCCCCCCC
	edi_133 = edi_133 + 0x00000004
	ecx_134 = ecx_134 - 0x00000001


void fn00416F30(word32 ecx, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ebx ecx edi edx esi Top
// Preserved: ebp esp
fn00416F30_entry:
l00416F30:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_201 = fp - 0x000000DC
	word32 ecx_204 = 0x00000033
l00416F5B:
	branch ecx_204 == 0x00000000 l00416F5D
l00416F5D:
	Mem47[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_243
	fn00411460(0x0042C02D, out edx_243)
	fn00411744(ecx, es, ds, dwArg04)
	byte al_83 = (uint8) (1) good(dwArg04 + Mem76[Mem76[dwArg04:word32] + 0x00000004:word32])
	fn00411488(es, ds, dwLocF4)
	branch (word32) al_83 == 0x00000000 l00417020
l00416FB2:
	word32 eax_101 = tie(dwArg04 + Mem76[Mem76[dwArg04:word32] + 0x00000004:word32])
	fn00411488(es, ds, dwLocF4)
	branch eax_101 == 0x00000000 l00417020
l00416FD2:
	word32 eax_118 = tie(dwArg04 + Mem76[Mem76[dwArg04:word32] + 0x00000004:word32])
	fn00411488(es, ds, dwLocF4)
	branch eax_118 == dwArg04 l00417020
l00416FF3:
	word32 eax_134 = tie(dwArg04 + Mem76[Mem76[dwArg04:word32] + 0x00000004:word32])
	fn00411488(es, ds, dwLocF4)
	flush(eax_134)
	fn00411488(es, ds, dwLocF4)
l00417020:
	byte al_161 = (uint8) (1) good(dwArg04 + Mem76[Mem76[dwArg04:word32] + 0x00000004:word32])
	fn00411488(es, ds, dwLocF4)
	Mem176[ecx + 0x00000004:byte] = al_161
	Mem180[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0x004217C8)
	return
fn00416F30_exit:
l00416F5B_1:
	Mem202[edi_201:word32] = 0xCCCCCCCC
	edi_201 = edi_201 + 0x00000004
	ecx_204 = ecx_204 - 0x00000001


word32 fn004171B0(selector es, selector ds, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax edx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn004171B0_entry:
l004171B0:
	word32 edi_22 = fp - 0x000000D0
	word32 ecx_23 = 0x00000033
l004171CD:
	branch ecx_23 == 0x00000000 l004171CF
l004171CF:
	word32 edx_43
	word32 eax_41 = fn00411424(es, ds, out edx_43)
	fn00411488(es, ds, dwLoc08)
	edxOut = edx_43
	return eax_41
fn004171B0_exit:
l004171CD_1:
	Mem68[edi_22:word32] = 0xCCCCCCCC
	edi_22 = edi_22 + 0x00000004
	ecx_23 = ecx_23 - 0x00000001


word32 fn004172B0(selector es, selector ds, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax edx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn004172B0_entry:
l004172B0:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_30 = fp - 0x000000DC
	word32 ecx_31 = 0x00000033
l004172DB:
	branch ecx_31 == 0x00000000 l004172DD
l004172DD:
	Mem47[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_51
	word32 eax_50 = fn00411460(0x0042C02B, out edx_51)
	Mem57[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0xFFFFFFFF)
	edxOut = edx_51
	return eax_50
fn004172B0_exit:
l004172DB_1:
	Mem84[edi_30:word32] = 0xCCCCCCCC
	edi_30 = edi_30 + 0x00000004
	ecx_31 = ecx_31 - 0x00000001


word32 fn00417E00(selector es, selector ds, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: edx
// Trashed: SCZO eax ebx ecx edi edx esi Top
// Preserved: ebp esp
fn00417E00_entry:
l00417E00:
	word32 esp_121 = fp - 0x00000100
	word32 edi_19 = fp - 0x000000F4
	word32 ecx_20 = 0x0000003C
l00417E1C:
	branch ecx_20 == 0x00000000 l00417E1E
l00417E1E:
	word32 edx_385
	fn00411460(0x0042C01A, out edx_385)
	Mem36[dwArg08:word32] = Mem31[dwArg08:word32] + 0x00000027
	word32 ecx_38 = Mem36[dwArg04:word32]
	word32 eax_44 = Mem39[ecx_38 + 0xFFFFFFFC:word32]
l00417E4E:
	word32 edx_118 = ecx_38
	branch Mem49[ecx_38 + 0xFFFFFFF8:word32] != 0xFAFAFAFA l00417E64
l00417E64:
	word32 esp_55 = esp_121 - 4
	Mem56[esp_55:word32] = 0x00425C40
	Mem58[esp_55 - 4:word32] = 0x00425C54
	Mem60[esp_55 - 8:word32] = 0x00000000
	word32 eax_61 = Mem60[0x00429000:word32]
	Mem65[esp_55 - 12:word32] = eax_61 + 0x00000008
	Mem67[esp_55 - 16:word32] = 0x00425C88
	Mem69[esp_55 - 20:word32] = 0x00000002
	word32 esp_74
	word32 eax_76
	call CrtDbgReport (retsize: 4;)
		uses: eax:eax_61 + 0x00000008,Stack +0008:dwArg04,Stack +000C:dwArg08
		defs: eax:eax_76,esp:esp_74
	fn00411488(es, ds, Mem69[esp_74 + 0x00000014:word32])
	branch eax_76 != 0x00000001 l00417E98
l00417E97:
	int3()
l00417E98:
	Mem99[esp_74 + 0x00000014:word32] = 0x00000000
	word32 eax_100 = Mem99[0x00429000:word32]
	Mem104[esp_74 + 0x00000010:word32] = eax_100 + 0x00000008
	Mem106[esp_74 + 0x0000000C:word32] = 0x00425D08
	Mem108[esp_74 + 0x00000008:word32] = 0x00425E08
	Mem110[esp_74 + 0x00000004:word32] = 0x00425C58
	word32 esp_115
	call invalid_parameter (retsize: 4;)
		uses: eax:eax_100 + 0x00000008,Stack +0008:dwArg04,Stack +000C:dwArg08
		defs: edx:edx_118,esp:esp_115
	fn00411488(es, ds, Mem110[esp_115 + 0x00000010:word32])
	esp_121 = esp_115 + 0x00000014
	branch false l00417E64
l00417E62:
l00417EC8:
	branch false l00417E4E
l00417ECC:
	word32 ecx_147 = Mem144[dwArg04:word32] - eax_44
l00417EDE:
	branch ecx_147 <u 0x00000008 l00417EEC
l00417EE4:
	branch ecx_147 >u 0x00000027 l00417EEC
l00417EEC:
	word32 esp_158 = esp_121 - 4
	Mem159[esp_158:word32] = 0x00425C40
	Mem161[esp_158 - 4:word32] = 0x00425C54
	Mem163[esp_158 - 8:word32] = 0x00000000
	word32 eax_164 = Mem163[0x00429000:word32]
	Mem168[esp_158 - 12:word32] = eax_164 + 0x00000012
	Mem170[esp_158 - 16:word32] = 0x00425C88
	Mem172[esp_158 - 20:word32] = 0x00000002
	word32 esp_177
	word32 eax_179
	call CrtDbgReport (retsize: 4;)
		uses: eax:eax_164 + 0x00000012,Stack +0008:dwArg04,Stack +000C:dwArg08
		defs: eax:eax_179,esp:esp_177
	fn00411488(es, ds, Mem172[esp_177 + 0x00000014:word32])
	branch eax_179 != 0x00000001 l00417F20
l00417F1F:
	int3()
l00417F20:
	Mem202[esp_177 + 0x00000014:word32] = 0x00000000
	word32 eax_203 = Mem202[0x00429000:word32]
	Mem207[esp_177 + 0x00000010:word32] = eax_203 + 0x00000012
	Mem209[esp_177 + 0x0000000C:word32] = 0x00425D08
	Mem211[esp_177 + 0x00000008:word32] = 0x00425E08
	Mem213[esp_177 + 0x00000004:word32] = 0x00425C58
	word32 esp_218
	call invalid_parameter (retsize: 4;)
		uses: eax:eax_203 + 0x00000012,Stack +0008:dwArg04,Stack +000C:dwArg08
		defs: edx:edx_221,esp:esp_218
	fn00411488(es, ds, Mem213[esp_218 + 0x00000010:word32])
	esp_121 = esp_218 + 0x00000014
	branch false l00417EEC
l00417EEA:
l00417F50:
	branch false l00417EDE
l00417F54:
	Mem250[dwArg04:word32] = eax_44
	fn00411488(es, ds, Mem250[esp_121 + 0x000000F8:word32])
	return edx_118
fn00417E00_exit:
l00417E1C_1:
	Mem305[edi_19:word32] = 0xCCCCCCCC
	edi_19 = edi_19 + 0x00000004
	ecx_20 = ecx_20 - 0x00000001


word32 fn00417F70(selector es, selector ds, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax ebp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn00417F70_entry:
l00417F70:
	word32 edi_177 = fp - 0x00000110
	word32 ecx_180 = 0x00000043
l00417F8D:
	branch ecx_180 == 0x00000000 l00417F8F
l00417F8F:
	word32 eax_111
	word32 edx_196
	fn00411460(0x0042C02B, out edx_196)
	word32 ebp_52
	word32 esi_197
	Mem64[ebp_52 - 0x00000018:word32] = fn004116B3(es, ds, out ebp_52, out esi_197)
	word32 edx_103
	Mem74[ebp_52 - 0x00000024:word32] = fn0041128F(es, ds, out edx_103)
	Mem77[ebp_52 - 0x00000030:word32] = Mem74[ebp_52 + 0x00000008:word32] | 0x0000000F
	word32 esp_58 = <invalid>
	branch Mem77[ebp_52 - 0x00000030:word32] <=u Mem77[ebp_52 - 0x00000018:word32] l00417FD3
l00417FD3:
	Mem83[ebp_52 - 0x0000003C:word32] = Mem77[Mem77[ebp_52 - 0x00000024:word32] + 0x00000018:word32]
	branch Mem83[ebp_52 - 0x0000003C:word32] <=u Mem83[ebp_52 - 0x00000018:word32] - (Mem83[ebp_52 - 0x0000003C:word32] >>u 0x00000001) l00417FF0
l00417FF0:
	Mem94[ebp_52 - 0x00000108:word32] = (Mem83[ebp_52 - 0x0000003C:word32] >>u 0x00000001) + Mem83[ebp_52 - 0x0000003C:word32]
	Mem97[esp_58 - 4:word32] = ebp_52 - 0x00000108
	Mem100[esp_58 - 8:word32] = ebp_52 - 0x00000030
	eax_111 = Mem100[fn00411659(es, ds, Mem100[esp_58 - 8:word32], Mem100[esp_58 - 4:word32], out edx_103):word32]
l00417FEB:
	eax_111 = Mem83[ebp_52 - 0x00000018:word32]
l00417FCE:
	eax_111 = Mem77[ebp_52 - 0x00000018:word32]
l00418013:
	Mem117[esp_58 - 4:word32] = edx_103
	Mem122[esp_58 - 8:word32] = eax_111
	word32 ebp_133 = fn004114D3(0x00418044, es, ds)
	word32 esp_138 = <invalid>
	word32 edx_199
	word32 ecx_198
	word32 ebp_158
	word32 eax_157 = fn004113E3(Mem122[ebp_133 - 0x00000004:word32] ^ ebp_133, Mem122[esp_138 + 4:word32], Mem122[esp_138 + 16:word32], ebp_133, Mem122[esp_138 + 12:word32], Mem122[esp_138 + 8:word32], es, ds, Mem122[esp_138 + 16:word32], out ecx_198, out edx_199, out ebp_158)
	fn00411488(es, ds, Mem122[esp_138 + 0x0000011C:word32])
	ebpOut = Mem122[ebp_158:word32]
	return eax_157
fn00417F70_exit:
l00417F8D_1:
	Mem178[edi_177:word32] = 0xCCCCCCCC
	edi_177 = edi_177 + 0x00000004
	ecx_180 = ecx_180 - 0x00000001


word32 fn00419F10(selector es, selector ds, word128 xmm0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] xmm0:[0..127]
// LiveOut: ebp esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn00419F10_entry:
l00419F10:
	word32 ebp_324 = fp - 4
	word32 esp_16 = fp - 0x000000E8
	word32 edi_19 = fp - 0x000000DC
	word32 ecx_20 = 0x00000036
l00419F2C:
	branch ecx_20 == 0x00000000 l00419F2E
l00419F2E:
	word32 edx_386
	fn00411460(0x0042C02A, out edx_386)
l00419F4A:
	branch Mem48[ebp_324 - 0x00000008:word32] >=u fn0041114A(es, ds) l00419FCE
l00419FCE:
	word32 esp_53 = esp_16 - 4
	Mem54[esp_53:word32] = 0x004114CE
	Mem56[esp_53 - 4:word32] = 0x004260E0
	Mem59[esp_53 - 8:word32] = 0x004114CE
	word32 eax_62 = operator <<(&cout, Mem59[esp_53 - 8:(ptr32 (fn (ptr32 basic_ostream) ((ptr32 (struct "std::basic_ostream")), (ptr32 basic_ostream))))])
	fn00411488(es, ds, Mem59[esp_53 + 0xFFFFFFF8:word32])
	Mem72[esp_53 - 0x00000008:word32] = eax_62
	word32 esp_81 = <invalid>
	word32 ebp_114
	operator <<(fn0041138E(es, ds, xmm0, Mem72[esp_53 - 0x00000008:word32], Mem72[esp_53 - 0x00000004:word32], out ebp_114), Mem72[esp_81 + 0x00000008:(ptr32 (fn (ptr32 basic_ostream) ((ptr32 (struct "std::basic_ostream")), (ptr32 basic_ostream))))])
	fn00411488(es, ds, Mem72[esp_81 + 0x00000008:word32])
	Mem98[ebp_114 - 0x00000014:word32] = 0x00000000
	word32 esp_118 = esp_81 + 0x0000000C
l0041A01E:
	branch Mem115[ebp_114 - 0x00000014:word32] >=u fn0041114A(es, ds) l0041A05E
l0041A05E:
	word32 esp_120 = esp_118 - 4
	Mem121[esp_120:word32] = 0x004114CE
	Mem124[esp_120 - 4:word32] = 0x004114CE
	word32 eax_127 = operator <<(&cout, Mem124[esp_120 - 4:(ptr32 (fn (ptr32 basic_ostream) ((ptr32 (struct "std::basic_ostream")), (ptr32 basic_ostream))))])
	fn00411488(es, ds, Mem124[esp_120 + -4:word32])
	operator <<(eax_127, Mem124[esp_120:(ptr32 (fn (ptr32 basic_ostream) ((ptr32 (struct "std::basic_ostream")), (ptr32 basic_ostream))))])
	fn00411488(es, ds, Mem124[esp_120:word32])
	fn00411488(es, ds, Mem124[esp_120 + 0x000000E4:word32])
	return Mem124[ebp_114:word32]
fn00419F10_exit:
l0041A02D:
	word32 esp_164 = esp_118 - 4
	Mem165[esp_164:word32] = Mem115[ebp_114 - 0x00000014:word32]
	Mem182[esp_164:word32] = (word32) Mem165[fn004114C4(es, ds, Mem165[esp_164:word32]):byte]
	fn0041FE70(es, ds, Mem182[esp_164:byte])
	word32 esp_191 = <invalid>
	Mem199[esp_191:word32] = 0x004292E0
	Mem203[esp_191 - 4:word32] = &cout
	fn004113C0(es, ds, Mem203[esp_191 - 4:word32], out ebp_114)
	word32 esp_211 = <invalid>
	esp_118 = esp_211 + 0x00000008
l0041A015:
	Mem222[ebp_114 - 0x00000014:word32] = Mem203[ebp_114 - 0x00000014:word32] + 0x00000001
l00419F59:
	word32 esp_224 = esp_16 - 4
	Mem225[esp_224:word32] = Mem48[ebp_324 - 0x00000008:word32]
	Mem242[esp_224:word32] = (word32) Mem225[fn004114C4(es, ds, Mem225[esp_224:word32]):byte]
	word32 ebp_249 = fn0041FE70(es, ds, Mem242[esp_224:byte])
	word32 esp_251 = <invalid>
	Mem260[esp_251:word32] = 0x004114CE
	Mem262[esp_251 - 4:word32] = 0x004292E0
	Mem264[esp_251 - 8:word32] = 0x004260EC
	Mem267[esp_251 - 12:word32] = Mem264[ebp_249 - 0x00000008:word32]
	Mem284[esp_251 - 0x0000000C:word32] = (word32) Mem267[fn004114C4(es, ds, Mem267[esp_251 - 12:word32]):byte]
	Mem288[esp_251 - 0x00000010:word32] = &cout
	word32 esp_296 = <invalid>
	word32 ebp_387
	Mem305[esp_296 + 0x00000004:word32] = fn004111C7(es, ds, xmm0, Mem288[esp_251 - 0x00000010:word32], Mem288[esp_251 - 0x0000000C:byte], out ebp_387)
	word32 esp_313 = <invalid>
	word32 ebp_388
	Mem322[esp_313 + 0x00000004:word32] = fn0041138E(es, ds, xmm0, Mem305[esp_296 + 0x00000004:word32], Mem305[esp_296 + 0x00000008:word32], out ebp_388)
	word32 esp_330 = <invalid>
	operator <<(fn004113C0(es, ds, Mem322[esp_313 + 0x00000004:word32], out ebp_324), Mem322[esp_330 + 0x00000008:(ptr32 (fn (ptr32 basic_ostream) ((ptr32 (struct "std::basic_ostream")), (ptr32 basic_ostream))))])
	fn00411488(es, ds, Mem322[esp_330 + 0x00000008:word32])
	esp_16 = esp_330 + 0x0000000C
l00419F41:
	Mem350[ebp_324 - 0x00000008:word32] = Mem322[ebp_324 - 0x00000008:word32] + 0x00000001
l00419F2C_1:
	Mem353[edi_19:word32] = 0xCCCCCCCC
	edi_19 = edi_19 + 0x00000004
	ecx_20 = ecx_20 - 0x00000001


word32 fn0041A790(selector es, selector ds, word128 xmm0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] xmm0:[0..127]
// LiveOut: ebp esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn0041A790_entry:
l0041A790:
	word32 edi_27 = fp - 0x000000F8
	word32 ecx_28 = 0x0000003A
l0041A7BA:
	branch ecx_28 == 0x00000000 l0041A7BC
l0041A7BC:
	Mem43[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_359
	fn00411460(0x0042C02A, out edx_359)
	word32 esp_83 = <invalid>
	word32 ebp_360
	word32 eax_91 = operator <<(fn0041138E(es, ds, xmm0, &cout, 0x0042619C, out ebp_360), Mem69[esp_83 + 0x00000008:(ptr32 (fn (ptr32 basic_ostream) ((ptr32 (struct "std::basic_ostream")), (ptr32 basic_ostream))))])
	fn00411488(es, ds, Mem69[esp_83 + 0x00000008:word32])
	Mem101[esp_83 + 0x00000008:word32] = eax_91
	word32 esp_109 = <invalid>
	word32 ebp_361
	word32 eax_117 = operator <<(fn0041138E(es, ds, xmm0, Mem101[esp_83 + 0x00000008:word32], Mem101[esp_83 + 0x0000000C:word32], out ebp_361), Mem101[esp_109 + 0x00000008:(ptr32 (fn (ptr32 basic_ostream) ((ptr32 (struct "std::basic_ostream")), (ptr32 basic_ostream))))])
	fn00411488(es, ds, Mem101[esp_109 + 0x00000008:word32])
	Mem127[esp_109 + 0x00000008:word32] = eax_117
	word32 esp_135 = <invalid>
	word32 ebp_129
	operator <<(fn0041138E(es, ds, xmm0, Mem127[esp_109 + 0x00000008:word32], Mem127[esp_109 + 0x0000000C:word32], out ebp_129), Mem127[esp_135 + 0x00000008:(ptr32 (fn (ptr32 basic_ostream) ((ptr32 (struct "std::basic_ostream")), (ptr32 basic_ostream))))])
	fn00411488(es, ds, Mem127[esp_135 + 0x00000008:word32])
	word32 ebp_154 = fn0041111D(ebp_129 - 0x00000030, es, ds)
	Mem162[ebp_154 - 0x00000004:word32] = 0x00000000
	Mem165[esp_135 + 0x00000008:word32] = ebp_154 - 0x00000030
	Mem169[esp_135 + 0x00000004:word32] = &cin
	word32 ebp_171 = fn00411186(es, ds, Mem169[esp_135 + 0x00000004:word32])
	word32 esp_177 = <invalid>
	Mem186[esp_177 + 0x00000004:word32] = 0x004261BC
	Mem189[esp_177:word32] = ebp_171 - 0x00000030
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, Mem189[esp_177 + 4:word32]), byte, 0) == 0x00000000 l0041A891
l0041A891:
	Mem205[esp_177 + 0x00000004:word32] = 0x004261C4
	Mem208[esp_177:word32] = ebp_171 - 0x00000030
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, Mem208[esp_177 + 4:word32]), byte, 0) == 0x00000000 l0041A8B5
l0041A8B5:
	fn0041A790(es, ds, xmm0)
l0041A8A9:
	Mem229[0x00429004:word32] = 0x00000001
l0041A885:
	Mem230[0x00429004:word32] = 0x00000000
l0041A8BA:
	word32 ebp_239 = fn0041B400(es, ds, xmm0)
	fn0041A790(es, ds, xmm0)
	Mem257[ebp_239 - 0x00000004:word32] = 0xFFFFFFFF
	word32 edx_264
	word32 ebp_362
	word32 eax_259 = fn00411406(es, ds, out edx_264, out ebp_362)
	word32 esp_266 = <invalid>
	Mem273[esp_266 - 4:word32] = edx_264
	Mem276[esp_266 - 8:word32] = eax_259
	word32 ebp_281 = fn004114D3(0x0041A910, es, ds)
	word32 esp_286 = <invalid>
	word32 edx_293 = Mem276[esp_286 + 4:word32]
	Mem296[fs:0x00000000:word32] = Mem276[ebp_281 - 0x0000000C:word32]
	word32 ebp_310
	word32 ecx_363
	word32 edx_364
	fn004113E3(Mem296[ebp_281 - 0x00000010:word32] ^ ebp_281, edx_293, Mem296[esp_286 + 20:word32], ebp_281, Mem296[esp_286 + 16:word32], Mem296[esp_286 + 12:word32], es, ds, Mem296[esp_286 + 20:word32], out ecx_363, out edx_364, out ebp_310)
	fn00411488(es, ds, Mem296[esp_286 + 0x00000108:word32])
	return Mem296[ebp_310:word32]
fn0041A790_exit:
l0041A7BA_1:
	Mem330[edi_27:word32] = 0xCCCCCCCC
	edi_27 = edi_27 + 0x00000004
	ecx_28 = ecx_28 - 0x00000001


word32 fn0041A9C0(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn0041A9C0_entry:
l0041A9C0:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_27 = fp - 0x000000D0
	word32 ecx_28 = 0x00000030
l0041A9EA:
	branch ecx_28 == 0x00000000 l0041A9EC
l0041A9EC:
	Mem42[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_101
	word32 eax_50 = fn00411460(0x0042C017, out edx_101) | 0xFFFFFFFF
	Mem52[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0xFFFFFFFF)
	return eax_50
fn0041A9C0_exit:
l0041A9EA_1:
	Mem79[edi_27:word32] = 0xCCCCCCCC
	edi_27 = edi_27 + 0x00000004
	ecx_28 = ecx_28 - 0x00000001


word32 fn0041AC40(selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn0041AC40_entry:
l0041AC40:
	word32 eax_13 = Mem11[fs:0x00000000:word32]
	word32 edi_27 = fp - 0x000000D0
	word32 ecx_28 = 0x00000030
l0041AC6A:
	branch ecx_28 == 0x00000000 l0041AC6C
l0041AC6C:
	Mem42[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_108
	fn00411460(0x0042C017, out edx_108)
	word32 eax_53 = fn004110C3(dwArg04)
	Mem56[fs:0x00000000:word32] = eax_13
	fn00411488(es, ds, 0xFFFFFFFF)
	return eax_53
fn0041AC40_exit:
l0041AC6A_1:
	Mem83[edi_27:word32] = 0xCCCCCCCC
	edi_27 = edi_27 + 0x00000004
	ecx_28 = ecx_28 - 0x00000001


word32 fn0041B400(selector es, selector ds, word128 xmm0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] xmm0:[0..127]
// LiveOut: ebp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn0041B400_entry:
l0041B400:
	word32 edi_19 = fp - 0x000000D4
	word32 ecx_20 = 0x00000034
l0041B41C:
	branch ecx_20 == 0x00000000 l0041B41E
l0041B41E:
	word32 ebp_150
	word32 esp_165
	word32 edx_311
	fn00411460(0x0042C02A, out edx_311)
	word32 esp_54 = <invalid>
	word32 ebp_312
	operator <<(fn0041138E(es, ds, xmm0, &cout, 0x004260F4, out ebp_312), Mem39[esp_54 + 0x00000008:(ptr32 (fn (ptr32 basic_ostream) ((ptr32 (struct "std::basic_ostream")), (ptr32 basic_ostream))))])
	fn00411488(es, ds, Mem39[esp_54 + 0x00000008:word32])
	Mem72[esp_54 + 0x00000008:word32] = 0x004292FC
	Mem76[esp_54 + 0x00000004:word32] = &cin
	fn00411186(es, ds, Mem76[esp_54 + 0x00000004:word32])
	word32 esp_84 = <invalid>
	Mem93[esp_84 + 0x00000004:word32] = 0x00426130
	system(Mem93[esp_84 + 0x00000004:(ptr32 char)])
	fn00411488(es, ds, Mem93[esp_84 + 0x00000004:word32])
	Mem104[esp_84 + 0x00000004:word32] = 0x00426134
	Mem106[esp_84:word32] = 0x004292FC
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, Mem106[esp_84 + 4:word32]), byte, 0) == 0x00000000 l0041B4BF
l0041B4BF:
	Mem123[esp_84 + 0x00000004:word32] = 0x004114CE
	Mem125[esp_84:word32] = 0x004292FC
	Mem127[esp_84 - 4:word32] = 0x00426148
	Mem131[esp_84 - 8:word32] = &cout
	word32 esp_139 = <invalid>
	word32 ebp_313
	Mem148[esp_139 + 0x00000004:word32] = fn0041138E(es, ds, xmm0, Mem131[esp_84 - 8:word32], Mem131[esp_84 - 4:word32], out ebp_313)
	word32 esp_156 = <invalid>
	operator <<(fn004113C0(es, ds, Mem148[esp_139 + 0x00000004:word32], out ebp_150), Mem148[esp_156 + 0x00000008:(ptr32 (fn (ptr32 basic_ostream) ((ptr32 (struct "std::basic_ostream")), (ptr32 basic_ostream))))])
	fn00411488(es, ds, Mem148[esp_156 + 0x00000008:word32])
	Mem174[ebp_150 - 0x000000D0:word32] = Mem148[0x00429004:word32]
	esp_165 = esp_156 + 0x0000000C
	branch Mem174[ebp_150 - 0x000000D0:word32] == 0x00000000 l0041B51C
l0041B51C:
	Mem180[ebp_150 - 0x000000C8:word32] = esp_156 - 0x00000010
	Mem182[esp_156 - 0x00000014:word32] = 0x004292FC
	word32 esp_204 = <invalid>
	word32 edi_187
	word32 esi_189
	ebp_150 = fn0041B7D0(fn004114A1(esp_156 - 0x00000010, es, ds, out esi_189, out edi_187), esi_189, edi_187, es, ds, xmm0)
	esp_165 = esp_204 + 0x0000001C
l0041B50A:
	branch Mem174[ebp_150 - 0x000000D0:word32] == 0x00000001 l0041B515
l0041B515:
	ebp_150 = fn00419F10(es, ds, xmm0)
	esp_165 = <invalid>
l0041B513:
l0041B494:
	Mem229[esp_84 + 0x00000004:word32] = 0x004114CE
	Mem231[esp_84:word32] = 0x00426138
	Mem235[esp_84 - 4:word32] = &cout
	word32 esp_243 = <invalid>
	operator <<(fn0041138E(es, ds, xmm0, Mem235[esp_84 - 4:word32], Mem235[esp_84:word32], out ebp_150), Mem235[esp_243 + 0x00000008:(ptr32 (fn (ptr32 basic_ostream) ((ptr32 (struct "std::basic_ostream")), (ptr32 basic_ostream))))])
	fn00411488(es, ds, Mem235[esp_243 + 0x00000008:word32])
	esp_165 = esp_243 + 0x0000000C
l0041B539:
	fn00411488(es, ds, Mem261[esp_165 + 0x000000D8:word32])
	return Mem261[ebp_150:word32]
fn0041B400_exit:
l0041B41C_1:
	Mem288[edi_19:word32] = 0xCCCCCCCC
	edi_19 = edi_19 + 0x00000004
	ecx_20 = ecx_20 - 0x00000001


word32 fn0041B7D0(word32 ebx, word32 esi, word32 edi, selector es, selector ds, word128 xmm0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ebx:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] xmm0:[0..127]
// LiveOut: ebp esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn0041B7D0_entry:
l0041B7D0:
	fn00411005(0x00001034, dwLoc14)
	word32 esp_18 = <invalid>
	Mem25[esp_18 - 4:word32] = ebx
	Mem28[esp_18 - 8:word32] = esi
	Mem31[esp_18 - 12:word32] = edi
	word32 edi_32 = fp + 0xFFFFEFBC
	word32 ecx_33 = 0x0000040D
l0041B7FE:
	branch ecx_33 == 0x00000000 l0041B800
l0041B800:
	Mem45[esp_18 - 16:word32] = Mem36[0x00429014:word32] ^ fp - 4
	Mem48[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_664
	fn00411460(0x0042C02A, out edx_664)
	Mem58[esp_18 - 20:word32] = 0x00425E60
	word32 ebp_66 = fn00411082(fp - 0x00000034, es, ds)
	Mem79[ebp_66 - 0x00000004:byte] = 0x01
	word32 esp_72 = <invalid>
	Mem81[esp_72:word32] = 0x00425E60
	word32 ebp_139 = fn00411082(ebp_66 - 0x00000054, es, ds)
	Mem97[ebp_139 - 0x00000004:byte] = 0x02
	word32 esp_90 = <invalid>
	Mem99[esp_90:word32] = 0x00411406
	Mem101[esp_90 - 4:word32] = 0x0041111D
	Mem103[esp_90 - 8:word32] = 0x00000064
	Mem105[esp_90 - 12:word32] = 0x0000001C
	Mem108[esp_90 - 16:word32] = ebp_139 + 0xFFFFF4B4
	fn00411122(Mem108[esp_90 - 16:word32], Mem108[esp_90 - 12:word32], Mem108[esp_90 - 8:word32], Mem108[esp_90 - 4:word32])
	Mem120[ebp_139 - 0x00000004:byte] = 0x03
	Mem121[ebp_139 + 0xFFFFF4A8:word32] = 0x00000001
	Mem122[ebp_139 + 0xFFFFF49C:word32] = 0x00000000
	word32 esp_119 = esp_90 + 0x00000004
l0041B88A:
	branch Mem140[ebp_139 + 0xFFFFF49C:word32] >=u fn0041114A(es, ds) + 0x00000001 l0041B9A6
l0041B9A6:
	word32 esp_145 = esp_119 - 4
	Mem146[esp_145:word32] = 0x004114CE
	Mem149[esp_145 - 4:word32] = ebp_139 - 0x00000054
	Mem152[esp_145 - 8:word32] = 0x004114CE
	Mem154[esp_145 - 12:word32] = 0x004260E0
	Mem157[esp_145 - 16:word32] = 0x004114CE
	word32 eax_160 = operator <<(&cout, Mem157[esp_145 - 16:(ptr32 (fn (ptr32 basic_ostream) ((ptr32 (struct "std::basic_ostream")), (ptr32 basic_ostream))))])
	fn00411488(es, ds, Mem157[esp_145 - 0x00000010:word32])
	Mem170[esp_145 - 0x00000010:word32] = eax_160
	word32 esp_179 = <invalid>
	word32 ebp_665
	word32 eax_187 = operator <<(fn0041138E(es, ds, xmm0, Mem170[esp_145 - 0x00000010:word32], Mem170[esp_145 - 0x0000000C:word32], out ebp_665), Mem170[esp_179 + 0x00000008:(ptr32 (fn (ptr32 basic_ostream) ((ptr32 (struct "std::basic_ostream")), (ptr32 basic_ostream))))])
	fn00411488(es, ds, Mem170[esp_179 + 0x00000008:word32])
	Mem197[esp_179 + 0x00000008:word32] = eax_187
	word32 esp_205 = <invalid>
	word32 ebp_199
	operator <<(fn004113C0(es, ds, Mem197[esp_179 + 0x00000008:word32], out ebp_199), Mem197[esp_205 + 0x00000008:(ptr32 (fn (ptr32 basic_ostream) ((ptr32 (struct "std::basic_ostream")), (ptr32 basic_ostream))))])
	fn00411488(es, ds, Mem197[esp_205 + 0x00000008:word32])
	Mem224[esp_205 + 0x00000008:word32] = 0x004114CE
	Mem227[esp_205 + 0x00000004:word32] = 0x004114CE
	word32 eax_230 = operator <<(&cout, Mem227[esp_205 + 0x00000004:(ptr32 (fn (ptr32 basic_ostream) ((ptr32 (struct "std::basic_ostream")), (ptr32 basic_ostream))))])
	fn00411488(es, ds, Mem227[esp_205 + 0x00000004:word32])
	operator <<(eax_230, Mem227[esp_205 + 0x00000008:(ptr32 (fn (ptr32 basic_ostream) ((ptr32 (struct "std::basic_ostream")), (ptr32 basic_ostream))))])
	fn00411488(es, ds, Mem227[esp_205 + 0x00000008:word32])
	Mem249[ebp_199 - 0x00000004:byte] = 0x02
	Mem251[esp_205 + 0x00000008:word32] = 0x00411406
	Mem253[esp_205 + 0x00000004:word32] = 0x00000064
	Mem255[esp_205:word32] = 0x0000001C
	Mem258[esp_205 - 4:word32] = ebp_199 + 0xFFFFF4B4
	fn0041142E(Mem258[esp_205 - 4:word32], Mem258[esp_205:word32], Mem258[esp_205 + 4:word32], Mem258[esp_205 + 8:word32])
	Mem270[ebp_199 - 0x00000004:byte] = 0x01
	word32 ebp_273
	word32 edx_666
	fn00411406(es, ds, out edx_666, out ebp_273)
	Mem285[ebp_273 - 0x00000004:byte] = 0x00
	word32 edx_667
	word32 ebp_288
	fn00411406(es, ds, out edx_667, out ebp_288)
	Mem300[ebp_288 - 0x00000004:word32] = 0xFFFFFFFF
	word32 edx_307
	word32 ebp_668
	word32 eax_302 = fn00411406(es, ds, out edx_307, out ebp_668)
	word32 esp_309 = <invalid>
	Mem316[esp_309 - 4:word32] = edx_307
	Mem319[esp_309 - 8:word32] = eax_302
	word32 ebp_324 = fn004114D3(0x0041BAB4, es, ds)
	word32 esp_329 = <invalid>
	word32 edx_336 = Mem319[esp_329 + 4:word32]
	Mem339[fs:0x00000000:word32] = Mem319[ebp_324 - 0x0000000C:word32]
	word32 ecx_669
	word32 ebp_353
	word32 edx_670
	fn004113E3(Mem339[ebp_324 - 0x00000010:word32] ^ ebp_324, edx_336, Mem339[esp_329 + 20:word32], ebp_324, Mem339[esp_329 + 16:word32], Mem339[esp_329 + 12:word32], es, ds, Mem339[esp_329 + 20:word32], out ecx_669, out edx_670, out ebp_353)
	fn00411488(es, ds, Mem339[esp_329 + 0x00001054:word32])
	return Mem339[ebp_353:word32]
fn0041B7D0_exit:
l0041B8A3:
	word32 esp_372 = esp_119 - 4
	Mem373[esp_372:word32] = Mem140[ebp_139 + 0xFFFFF49C:word32]
	Mem390[esp_372:word32] = (word32) Mem373[fn004114C4(es, ds, Mem373[esp_372:word32]):byte]
	word32 esp_399 = <invalid>
	ebp_139 = fn0041FE70(es, ds, Mem390[esp_372:byte])
	esp_119 = esp_399 + 0x00000004
	branch fn0041114A(es, ds) >=u 0x00000008 l0041B91E
l0041B91E:
	branch fn0041114A(es, ds) != 0x00000008 l0041B9A1
l0041B92B:
	Mem431[ebp_139 + 0xFFFFEFEC:word32] = esp_399 - 0x00000018
	Mem434[esp_399 - 0x0000001C:word32] = ebp_139 - 0x00000030
	word32 edi_673
	word32 esi_672
	fn004114A1(esp_399 - 0x00000018, es, ds, out esi_672, out edi_673)
	word32 ebp_450 = fn00420430(es, ds, xmm0)
	word32 esp_456 = <invalid>
	Mem466[esp_456 + 0x00000018:word32] = (word32) Mem434[0x00429318:byte]
	Mem469[esp_456 + 0x00000014:word32] = ebp_450 - 0x00000054
	Mem472[esp_456 + 0x00000010:word32] = ebp_450 + 0xFFFFEFC8
	word32 ebp_474
	Mem488[ebp_474 + 0xFFFFEFC0:word32] = fn00411474(es, ds, out ebp_474)
	word32 esp_480 = <invalid>
	Mem491[esp_480 + 0x00000008:word32] = Mem488[ebp_474 + 0xFFFFEFC0:word32]
	fn0041167C(ebp_474 - 0x00000054, es, ds)
	word32 edx_674
	fn00411406(es, ds, out edx_674, out ebp_139)
	word32 esp_515 = <invalid>
	Mem523[esp_515 - 4:word32] = Mem491[ebp_139 + 0xFFFFF49C:word32]
	Mem540[esp_515 - 4:word32] = (word32) Mem523[fn004114C4(es, ds, Mem523[esp_515 - 4:word32]):byte]
	fn0041178F(es, ds)
	esp_119 = esp_515
l0041B8CF:
	Mem553[esp_399:word32] = Mem390[ebp_139 + 0xFFFFF49C:word32]
	Mem570[esp_399:word32] = (word32) Mem553[fn004114C4(es, ds, Mem553[esp_399:word32]):byte]
	Mem573[esp_399 - 4:word32] = ebp_139 - 0x00000030
	Mem576[esp_399 - 8:word32] = ebp_139 + 0xFFFFEFF8
	word32 ebp_578
	Mem592[ebp_578 + 0xFFFFEFC0:word32] = fn00411474(es, ds, out ebp_578)
	word32 esp_584 = <invalid>
	Mem595[esp_584 + 0x00000008:word32] = Mem592[ebp_578 + 0xFFFFEFC0:word32]
	fn0041167C(ebp_578 - 0x00000030, es, ds)
	word32 edx_671
	fn00411406(es, ds, out edx_671, out ebp_139)
	esp_119 = <invalid>
l0041B9A1:
l0041B87B:
	Mem630[ebp_139 + 0xFFFFF49C:word32] = Mem626[ebp_139 + 0xFFFFF49C:word32] + 0x00000001
l0041B7FE_1:
	Mem633[edi_32:word32] = 0xCCCCCCCC
	edi_32 = edi_32 + 0x00000004
	ecx_33 = ecx_33 - 0x00000001


void fn0041C1C7(word32 ebp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebp:[0..31] fs:[0..15]
// LiveOut: esp
// Trashed: SCZO eax ebx ecx edi edx esi esp Top
// Preserved:
fn0041C1C7_entry:
l0041C1C7:
	branch (word32) Mem0[ebp - 0x00000019:byte] != 0x00000000 l0041C1E4
l0041C1CF:
	fn00411735(Mem18[ebp + 0x00000008:word32], Mem15[ebp + 0x0000000C:word32], Mem12[ebp - 0x00000020:word32], Mem0[ebp + 0x00000018:word32])
l0041C1E4:
	return
fn0041C1C7_exit:


void fn0041C2EF(word32 ebp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebp:[0..31] fs:[0..15]
// LiveOut: esp
// Trashed: SCZO eax ebx ecx edi edx esi esp Top
// Preserved:
fn0041C2EF_entry:
l0041C2EF:
	branch (word32) Mem0[ebp - 0x00000019:byte] != 0x00000000 l0041C30C
l0041C2F7:
	fn00411735(Mem18[ebp + 0x00000008:word32], Mem15[ebp + 0x0000000C:word32], Mem12[ebp + 0x00000010:word32], Mem0[ebp + 0x00000014:word32])
l0041C30C:
	return
fn0041C2EF_exit:


void fn0041C3A0(word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut:
// Trashed: SCZO eax ebx ecx edi esi Top
// Preserved: ebp edx esp
fn0041C3A0_entry:
l0041C3A0:
	word32 eax_15 = Mem13[fs:0x00000000:word32]
	Mem38[fs:0x00000000:word32] = fp - 0x00000014
	word32 dwLoc20_107 = 0x00000000
l0041C3EC:
	branch dwLoc20_107 == dwArg0C l0041C414
l0041C414:
l0041C434:
	Mem50[fs:0x00000000:word32] = eax_15
	return
fn0041C3A0_exit:
l0041C3F4:
	word32 edx_63 = dwArg04 - dwArg08
	fn00411366()
	word32 edx_77
	call dwArg10 (retsize: 4;)
		uses: ecx:edx_63,edx:edx_77,Stack +0008:edx_63,Stack +000C:dwArg08,Stack +0010:dwArg0C,Stack +0014:dwArg10
		defs: edx:edx_77
	dwArg04 = edx_63
l0041C3E3:
	dwLoc20_107 = dwLoc20_107 + 0x00000001


word32 fn0041C5A0(word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp esp
fn0041C5A0_entry:
l0041C5A0:
	word32 edx_13 = dwArg04 + Mem10[dwArg04 + 0x0000003C:word32]
	word32 ecx_20 = edx_13 + 0x00000018 + (word32) Mem16[edx_13 + 0x00000014:word16]
	word32 ecx_25 = (word32) Mem21[edx_13 + 0x00000006:word16] *s 0x00000028 + ecx_20
	word32 dwLoc08_67 = ecx_20
l0041C5F0:
	word32 eax_35
	branch dwLoc08_67 == ecx_25 l0041C61B
l0041C61B:
	eax_35 = 0x00000000
l0041C5F8:
	branch dwArg08 <u Mem31[dwLoc08_67 + 0x0000000C:word32] l0041C619
l0041C603:
	branch dwArg08 >=u Mem31[dwLoc08_67 + 0x0000000C:word32] + Mem31[dwLoc08_67 + 0x00000008:word32] l0041C619
l0041C619:
l0041C5E7:
	dwLoc08_67 = dwLoc08_67 + 0x00000028
l0041C614:
	eax_35 = dwLoc08_67
l0041C61D:
	return eax_35
fn0041C5A0_exit:


byte fn0041C660(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp esp
fn0041C660_entry:
l0041C660:
	word32 eax_60
	branch dwArg04 != 0x00000000 l0041C670
l0041C670:
	word24 eax_24_8_63 = SLICE(dwArg04, word24, 8)
	branch (word32) Mem12[dwArg04:word16] == 0x00005A4D l0041C688
l0041C688:
	word32 ecx_19 = dwArg04 + Mem12[dwArg04 + 0x0000003C:word32]
	word24 eax_24_8_65 = SLICE(ecx_19, word24, 8)
	branch Mem22[ecx_19:word32] == 0x00004550 l0041C6A9
l0041C6A9:
	word32 eax_30 = (word32) Mem28[ecx_19 + 0x00000018:word16]
	word24 eax_24_8_67 = SLICE(eax_30, word24, 8)
	branch eax_30 == 0x0000010B l0041C6C3
l0041C6C3:
	eax_60 = SEQ(eax_24_8_67, 0x01) (alias)
l0041C6BF:
	eax_60 = SEQ(eax_24_8_67, 0x00) (alias)
l0041C6A5:
	eax_60 = SEQ(eax_24_8_65, 0x00) (alias)
l0041C684:
	eax_60 = SEQ(eax_24_8_63, 0x00) (alias)
l0041C66C:
	eax_60 = SEQ(eax_24_8, 0x00) (alias)
l0041C6C5:
	return SLICE(eax_60, byte, 0)
fn0041C660_exit:


word32 fn0041D010(word32 ecx, word32 edx, word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, word32 dwArg00, ptr32 & ecxOut, ptr32 & edxOut, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ebx:[0..31] ecx:[0..31] edi:[0..31] edx:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0000:[0..31]
// LiveOut: eax ebp ecx edx
// Trashed: SCZO eax ebp ecx edx Top
// Preserved: DP esp
fn0041D010_entry:
l0041D010:
	branch ecx != Mem0[0x00429014:word32] l0041D01B
l0041D01B:
l0041100A:
l0041100A_thunk_fn0041E970:
	word32 ebp_20
	word32 ecx_21
	word32 edx_22
	word32 eax_19 = fn0041E970(ecx, edx, ebx, ebp, esi, edi, es, ds, dwArg00, out ecx_21, out edx_22, out ebp_20)
	ecxOut = ecx_21
	edxOut = edx_22
	ebpOut = ebp_20
	return eax_19
l0041D019:
	ecxOut = ecx
	edxOut = edx
	ebpOut = ebp
	return eax
fn0041D010_exit:


word32 fn0041D200(word32 ebx, word32 esi, word32 edi, selector es, selector ds, word128 xmm0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ebx:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] xmm0:[0..127]
// LiveOut: eax
// Trashed: SCZDOP eax ebx ecx edi edx esi Top
// Preserved: ebp esp
fn0041D200_entry:
l0041D200:
	return fn0041D220(fn004115AF(), ebx, esi, edi, es, ds, xmm0)
fn0041D200_exit:


word32 fn0041D220(word32 edx, word32 ebx, word32 esi, word32 edi, selector es, selector ds, word128 xmm0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ebx:[0..31] edi:[0..31] edx:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] xmm0:[0..127]
// LiveOut: eax
// Trashed: SCZDOP eax ebx ecx edi edx esi Top
// Preserved: ebp esp
fn0041D220_entry:
l0041D220:
	word32 eax_15 = Mem13[fs:0x00000000:word32]
	Mem38[fs:0x00000000:word32] = fp - 0x00000014
	word32 esp_108 = fp + 0xFFFFFFA8
	branch (word32) SLICE((uint32) (uint8) fn00411262(edx, ebx, esi, edi, es, ds, 0x00000001), byte, 0) != 0x00000000 l0041D26B
l0041D264:
	fn004115E6(0x00000007)
	esp_108 = fp + 0xFFFFFFA4
l0041D26B:
	word32 eax_113
	word32 eax_78 = fn00411776()
	byte bLoc1D_328 = 0x00
	byte al_85 = SLICE(eax_78, byte, 0)
	branch Mem86[0x00429324:word32] != 0x00000001 l0041D290
l0041D290:
	branch Mem86[0x00429324:word32] != 0x00000000 l0041D2ED
l0041D2ED:
	bLoc1D_328 = 0x01
l0041D299:
	Mem92[0x00429324:word32] = 0x00000001
	word32 esp_94 = esp_108 - 4
	Mem95[esp_94:word32] = 0x00425724
	Mem97[esp_94 - 4:word32] = 0x00425418
	fn004110B9()
	branch eax_78 == 0x00000000 l0041D2CF
l0041D2CF:
	Mem104[esp_94:word32] = 0x00425314
	Mem106[esp_94 - 4:word32] = 0x00425000
	fn004113A7()
	Mem110[0x00429324:word32] = 0x00000002
	esp_108 = esp_94 + 0x00000004
l0041D2B9:
	eax_113 = 0x000000FF
l0041D287:
	esp_108 = esp_108 - 4
	Mem115[esp_108:word32] = 0x00000007
	fn004115E6(Mem115[esp_108:word32])
l0041D2F1:
	word32 esp_129 = esp_108 - 4
	Mem130[esp_129:word32] = (word32) al_85
	fn00411127(Mem130[esp_129:byte])
	word32 esp_138 = esp_129 + 0x00000004
	word32 eax_140 = fn0041133E()
	branch Mem141[eax_140:word32] == 0x00000000 l0041D341
l0041D30E:
	Mem147[esp_129:word32] = eax_140
	esp_138 = esp_129 + 0x00000004
	branch (word32) SLICE((uint32) (uint8) fn00411398(Mem147[esp_129:word32]), byte, 0) == 0x00000000 l0041D341
l0041D321:
	word32 eax_163 = Mem147[eax_140:word32]
	Mem166[esp_129:word32] = 0x00000000
	Mem168[esp_129 - 4:word32] = 0x00000002
	Mem170[esp_129 - 8:word32] = 0x00000000
	fn00411366()
	call eax_163 (retsize: 4;)
		uses: edx:eax_140
		defs: esp:esp_192
l0041D341:
	word32 eax_198 = fn004114C9()
	branch Mem200[eax_198:word32] == 0x00000000 l0041D372
l0041D351:
	word32 esp_206 = esp_138 - 4
	Mem207[esp_206:word32] = eax_198
	branch (word32) SLICE((uint32) (uint8) fn00411398(Mem207[esp_206:word32]), byte, 0) == 0x00000000 l0041D372
l0041D364:
	Mem225[esp_206:word32] = Mem207[eax_198:word32]
	fn00411154()
l0041D372:
	word32 eax_245 = fn0041D4C0(es, ds, xmm0)
	branch (word32) SLICE((uint32) (uint8) fn004113BB(), byte, 0) != 0x00000000 l0041D38F
l0041D38F:
	branch (word32) bLoc1D_328 != 0x00000000 l0041D39C
l0041D397:
	fn0041102D()
l0041D39C:
	word32 esp_280 = esp_138 - 4
	Mem281[esp_280:word32] = 0x00000000
	Mem283[esp_280 - 4:word32] = 0x00000001
	fn004114F6(Mem283[esp_280:byte])
	eax_113 = eax_245
l0041D422:
	Mem303[fs:0x00000000:word32] = eax_15
	return eax_113
fn0041D220_exit:
l0041D386:
	word32 esp_272 = esp_138 - 4
	Mem273[esp_272:word32] = eax_245
	fn0041150F(Mem273[esp_272:int32])


word32 fn0041D4C0(selector es, selector ds, word128 xmm0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] xmm0:[0..127]
// LiveOut: eax
// Trashed: SCZO eax ebx ecx edi edx esi Top
// Preserved: ebp esp
fn0041D4C0_entry:
l0041D4C0:
	fn0041172B()
	fn004115DC()
	fn004112C1()
	return fn00411587(es, ds, xmm0)
fn0041D4C0_exit:


void fn0041D590()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: ebp esp
fn0041D590_entry:
l0041D590:
	return
fn0041D590_exit:


void fn0041D760(word32 ecx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp esp
fn0041D760_entry:
l0041D760:
	Mem13[ecx:word32] = 0x0042653C
	Mem18[ecx + 0x00000004:word32] = 0x00000000
	Mem19[ecx + 0x00000008:word32] = 0x00000000
	Mem22[ecx + 0x00000004:word32] = dwArg04
	return
fn0041D760_exit:


void fn0041D990(word32 edx, word32 ebx, word32 esi, word32 edi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ebx:[0..31] edi:[0..31] edx:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO eax ebp ebx ecx edx esi esp Top
// Preserved:
fn0041D990_entry:
l0041D990:
	word32 eax_10 = Mem6[0x00429014:word32] ^ fp - 4
	Mem18[0x00429350:word32] = 0x00000000
	Mem23[0x0042901C:word32] = Mem18[0x0042901C:word32] | 0x00000001
	branch fn004110A0(0x0000000A) != 0x00000000 l0041D9CB
l0041D9CB:
	byte bLoc30_326
	Mem33[0x00429350:word32] = 0x00000001
	Mem36[0x0042901C:word32] = Mem33[0x0042901C:word32] | 0x00000002
	__cpuid(0x00000000, 0x00000000, &0x00000000, &ebx, &0x00000000, &edx)
	word32 dwLoc0C_318 = 0x00000000
	branch (ebx ^ 0x756E6547 | edx ^ 0x49656E69 | 0x6C65746E) != 0x00000000 l0041DA5F
l0041DA5F:
	bLoc30_326 = 0x00 (alias)
l0041DA56:
	bLoc30_326 = 0x01 (alias)
l0041DA66:
	__cpuid(0x00000001, 0x00000000, &0x00000001, &ebx, &0x00000000, &(uint32) (uint8) bLoc30_326)
	branch (word32) bLoc30_326 == 0x00000000 l0041DB0B
l0041DA9A:
	branch 0x00000000 == 0x000106C0 l0041DAFC
l0041DAAB:
	branch 0x00000000 == 0x00020660 l0041DAFC
l0041DABC:
	branch 0x00000000 == 0x00020670 l0041DAFC
l0041DACB:
	branch 0x00000000 == 0x00030650 l0041DAFC
l0041DADC:
	branch 0x00000000 == 0x00030660 l0041DAFC
l0041DAED:
	branch true l0041DB0B
l0041DAFC:
	Mem120[0x00429354:word32] = Mem86[0x00429354:word32] | 0x00000001
l0041DB0B:
	branch true l0041DB8F
l0041DB40:
	__cpuid(0x00000007, 0x00000000, &0x00000007, &ebx, &0x00000000, &0x00000004)
	dwLoc0C_318 = ebx
	branch (ebx & 0x00000200) == 0x00000000 l0041DB8F
l0041DB82:
	Mem164[0x00429354:word32] = Mem152[0x00429354:word32] | 0x00000002
l0041DB8F:
	edx = 0x00000000
	branch 0x00000000 == 0x00000000 l0041DC51
l0041DBA7:
	Mem174[0x00429350:word32] = 0x00000002
	Mem177[0x0042901C:word32] = Mem174[0x0042901C:word32] | 0x00000004
	edx = 0x00000000
	branch 0x00000000 == 0x00000000 l0041DC51
l0041DBD2:
	branch 0x00000000 == 0x00000000 l0041DC51
l0041DBE6:
	word64 edx_eax_193 = __xgetbv(0x00000000)
	word32 eax_194 = SLICE(edx_eax_193, word32, 0)
	word32 edx_196 = SLICE(edx_eax_193, word32, 32)
	edx = eax_194 & 0x00000006
	branch (eax_194 & 0x00000006) != 0x00000006 l0041DC51
l0041DC09:
	branch (edx_196 & 0x00000000) != 0x00000000 l0041DC51
l0041DC0F:
	Mem208[0x00429350:word32] = 0x00000003
	Mem211[0x0042901C:word32] = Mem208[0x0042901C:word32] | 0x00000008
	edx = 0x00000008
	branch (dwLoc0C_318 & 0x00000020) == 0x00000000 l0041DC51
l0041DC38:
	Mem219[0x00429350:word32] = 0x00000005
	Mem224[0x0042901C:word32] = Mem219[0x0042901C:word32] | 0x00000020
l0041DC51:
l0041D9C4:
l0041DC53:
	word32 ebp_301
	word32 ecx_382
	word32 edx_383
	fn004113E3(eax_10 ^ fp - 4, edx, esi, fp - 4, 0x0000000A, edi, es, ds, esi, out ecx_382, out edx_383, out ebp_301)
	return
fn0041D990_exit:


void fn0041E0C0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: ebp esp
fn0041E0C0_entry:
l0041E0C0:
	Mem7[0x0042935C:word32] = 0x00000000
	return
fn0041E0C0_exit:


byte fn0041E0E0(ptr32 & ebxOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15]
// LiveOut: eax ebx edi esi
// Trashed: SCZO eax ebx ecx edi esi Top
// Preserved: ebp esp
fn0041E0E0_entry:
l0041E0E0:
	word32 edi_23
	word32 esi_24
	ebxOut = fn0041E730(fp - 0x00000020, out esi_24, out edi_23)
	esiOut = esi_24
	ediOut = edi_23
	return SLICE(SEQ(SLICE(eax_20, word24, 8), false), byte, 0)
fn0041E0E0_exit:


byte fn0041E130(ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15]
// LiveOut: eax edi esi
// Trashed: SCZO eax ebx ecx edi esi Top
// Preserved: ebp esp
fn0041E130_entry:
l0041E130:
	word32 edi_29
	word32 esi_30
	fn0041E730(fp - 0x00000020, out esi_30, out edi_29)
	esiOut = esi_30
	ediOut = edi_29
	return SLICE(SEQ(SLICE(eax_26, word24, 8), false), byte, 0)
fn0041E130_exit:


word32 fn0041E490(word32 dwArg04, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut: eax edx
// Trashed: SCZO cl eax edx Top
// Preserved: ebp esp
fn0041E490_entry:
l0041E490:
	word32 eax_10 = dwArg04
l0041E498:
	eax_10 = eax_34 + 0x00000001
	eax_34 = eax_10
	branch Mem6[eax_34:byte] != 0x00 l0041E498
l0041E49F:
	edxOut = dwArg04
	return eax_10 - dwArg04 - 0x00000001
fn0041E490_exit:


word32 fn0041E4B0(word32 edx, selector es, selector ds, word32 dwArg04, word32 dwArg0C, word32 dwArg10, ptr32 & edxOut, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] edx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut: ebp ecx edx esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn0041E4B0_entry:
l0041E4B0:
	word32 ebp_215 = fp - 4
	word32 dwLoc0E38_427 = 0x00000000
	branch fn004112DA() != 0x00000000 l0041E503
l0041E4F4:
	dwLoc0E38_427 = fn00411069()
l0041E503:
	word32 esp_55 = fp - 0x00000E64
	word32 eax_57 = MultiByteToWideChar(0x0000FDE9, 0x00000000, dwArg10, 0xFFFFFFFF, 0x00000000, 0x00000000)
	branch eax_57 >=u 0x00000200 l0041E540
l0041E51E:
	esp_55 = fp - 0x00000E7C
	branch MultiByteToWideChar(0x0000FDE9, 0x00000000, dwArg10, 0xFFFFFFFF, fp + 0xFFFFF1D0, eax_57) != 0x00000000 l0041E545
l0041E540:
l0041E545:
	word32 esp_124
	byte al_102
	word32 esp_82 = esp_55 - 4
	Mem83[esp_82:word32] = 0x00001002
	word32 ebx_89
	word32 edi_118
	word32 esi_119
	branch SLICE((uint32) (uint8) fn0041E0E0(out ebx_89, out esi_119, out edi_118), byte, 0) == 0x00 l0041E578
l0041E578:
	al_102 = 0x01
l0041E556:
	Mem107[esp_82:word32] = ebx_89
	Mem109[esp_82 - 4:word32] = esi_119
	Mem112[esp_82 - 8:word32] = Mem109[dwArg0C * 0x00000004 + 0x004265C8:word32]
	Mem114[esp_82 - 12:word32] = dwArg0C
	al_102 = SLICE((uint32) (uint8) fn0041E130(out esi_119, out edi_118), byte, 0) (alias)
	esp_124 = esp_82 + 0x00000004
	branch al_102 != 0x00 l0041E69D
l0041E576:
l0041E57A:
	esp_124 = esp_55
	branch dwLoc0E38_427 != 0x00000000 l0041E58B
l0041E583:
	branch edi_118 == 0x00000000 l0041E69C
l0041E58B:
	branch al_102 == 0x00 l0041E59D
l0041E58F:
	branch IsDebuggerPresent() != 0x00000000 l0041E69C
l0041E59D:
	word32 eax_316
	word32 esp_315
	word32 esp_149 = esp_55 - 4
	Mem150[esp_149:word32] = 0x00000104
	Mem155[esp_149 - 4:word32] = fp - 0x00000418
	Mem158[esp_149 - 8:word32] = fp + 0xFFFFF1C4
	Mem160[esp_149 - 12:word32] = 0x00000104
	Mem163[esp_149 - 16:word32] = fp - 0x00000210
	Mem169[esp_149 - 20:word32] = esi_119 - 0x00000005
	word32 edi_211
	word32 ebx_209 = fn00411780(es, ds, Mem169[esp_149 - 20:word32], Mem169[esp_149 - 16:word32], Mem169[esp_149 - 8:word32], Mem169[esp_149 - 4:word32], Mem169[esp_149:word32], out ebp_215, out edi_211)
	word32 esp_216 = <invalid>
	branch edi_211 == 0x00000000 l0041E5FE
l0041E5FE:
	Mem226[esp_216 + 0x00000014:word32] = 0x00000000
	Mem228[esp_216 + 0x00000010:word32] = 0x00000000
	Mem230[esp_216 + 0x0000000C:word32] = 0x0000030A
	Mem234[esp_216 + 0x00000008:word32] = ebp_215 - 0x00000720
	Mem236[esp_216 + 0x00000004:word32] = 0xFFFFFFFF
	Mem239[esp_216:word32] = ebp_215 - 0x0000020C
	Mem241[esp_216 - 4:word32] = 0x00000000
	Mem243[esp_216 - 8:word32] = 0x0000FDE9
	word32 esi_232 = 0x00426A6C
	branch WideCharToMultiByte(Mem243[esp_216 - 8:UINT], Mem243[esp_216 - 4:DWORD], Mem243[esp_216:LPCWSTR], Mem243[esp_216 + 4:int32], Mem243[esp_216 + 8:LPSTR], Mem243[esp_216 + 12:int32], Mem243[esp_216 + 16:LPCSTR], Mem243[esp_216 + 20:LPBOOL]) == 0x00000000 l0041E633
l0041E62D:
	esi_232 = ebp_215 - 0x00000720
l0041E633:
	Mem251[esp_216 - 12:word32] = 0x00000000
	Mem253[esp_216 - 16:word32] = 0x00000000
	Mem255[esp_216 - 20:word32] = 0x0000030A
	Mem260[esp_216 - 24:word32] = ebp_215 + 0xFFFFF5D4
	Mem262[esp_216 - 28:word32] = 0xFFFFFFFF
	Mem265[esp_216 - 32:word32] = ebp_215 - 0x00000414
	Mem267[esp_216 - 36:word32] = 0x00000000
	Mem269[esp_216 - 40:word32] = 0x0000FDE9
	word32 edi_258 = 0x00426A80
	branch WideCharToMultiByte(Mem269[esp_216 - 40:UINT], Mem269[esp_216 - 36:DWORD], Mem269[esp_216 - 32:LPCWSTR], Mem269[esp_216 - 28:int32], Mem269[esp_216 - 24:LPSTR], Mem269[esp_216 - 20:int32], Mem269[esp_216 - 16:LPCSTR], Mem269[esp_216 - 12:LPBOOL]) == 0x00000000 l0041E668
l0041E662:
	edi_258 = ebp_215 + 0xFFFFF5D4
l0041E668:
	Mem280[esp_216 - 44:word32] = Mem269[ebp_215 + 0xFFFFF1C4:word32]
	Mem285[esp_216 - 48:word32] = Mem280[ebp_215 + 0xFFFFF1D0:word32]
	Mem287[esp_216 - 52:word32] = 0x00426A98
	Mem290[esp_216 - 56:word32] = edi_258
	Mem293[esp_216 - 60:word32] = Mem290[ebp_215 + 0xFFFFF1C8:word32]
	Mem297[esp_216 - 64:word32] = esi_232
	Mem300[esp_216 - 68:word32] = Mem297[ebp_215 + 0x0000000C:word32]
	fn00411366()
	call fn00000000 (retsize: 4;)
		uses: edx:edx_319,Stack +0008:dwArg04,Stack +0010:dwArg0C,Stack +0014:dwArg10
		defs: eax:eax_316,edx:edx_319,esp:esp_315
l0041E5CC:
	Mem322[esp_216 + 0x00000014:word32] = ebx_209
	Mem325[esp_216 + 0x00000010:word32] = Mem322[ebp_215 + 0xFFFFF1D0:word32]
	Mem329[esp_216 + 0x0000000C:word32] = 0x00426A20
	Mem331[esp_216 + 0x00000008:word32] = ebp_215 - 0x00000414
	Mem334[esp_216 + 0x00000004:word32] = Mem331[ebp_215 + 0xFFFFF1C8:word32]
	Mem337[esp_216:word32] = ebp_215 - 0x0000020C
	Mem340[esp_216 - 4:word32] = Mem337[ebp_215 + 0x0000000C:word32]
	fn00411366()
	call edi_211 (retsize: 4;)
		uses: Stack +0004:Mem340[esp_216 - 4:word32],Stack +0008:Mem340[esp_216:word32],Stack +0010:Mem340[esp_216 + 8:word32],Stack +0014:Mem340[esp_216 + 12:word32],Stack +0018:Mem340[esp_216 + 16:word32]
		defs: eax:eax_341,ebp:ebp_348,edx:edx_347,esp:esp_349
l0041E694:
	esp_124 = esp_315 + 0x0000001C
	branch eax_316 != 0x00000001 l0041E69D
l0041E69C:
	int3()
l0041E69D:
	word32 esp_370 = esp_124 + 4
	word32 ebp_406
	word32 ecx_407
	word32 edx_408
	fn004113E3(Mem362[ebp_215 - 0x00000004:word32] ^ ebp_215, edx, Mem362[esp_370 + 4:word32], ebp_215, Mem362[esp_370:word32], Mem362[esp_124:word32], es, ds, Mem362[esp_370 + 4:word32], out ecx_407, out edx_408, out ebp_406)
	word32 ebp_414 = Mem362[ebp_406:word32]
	edxOut = edx_408
	ebpOut = ebp_414
	return ecx_407
fn0041E4B0_exit:


word32 fn0041E730(word32 dwArg04, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] Stack +0004:[0..31]
// LiveOut: ebx edi esi
// Trashed: SCZO eax ebx ecx edi esi Top
// Preserved: ebp esp
fn0041E730_entry:
l0041E730:
	word32 eax_15 = Mem13[fs:0x00000000:word32]
	Mem38[fs:0x00000000:word32] = fp - 0x00000014
	RaiseException(0x406D1388, 0x00000000, 0x00000006, dwArg04)
l0041E794:
	Mem52[fs:0x00000000:word32] = eax_15
	esiOut = 0x00000006
	ediOut = 0x00000000
	return dwArg04
fn0041E730_exit:


word32 fn0041E930(word32 dwArg04, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut: eax ebp
// Trashed: eax ebp esp Top
// Preserved:
fn0041E930_entry:
l0041E930:
	SetUnhandledExceptionFilter(0x00000000)
	UnhandledExceptionFilter(dwArg04)
	word32 eax_17 = GetCurrentProcess()
	word32 eax_20 = TerminateProcess(eax_17, 0xC0000409)
	ebpOut = eax_17
	return eax_20
fn0041E930_exit:


word32 fn0041E970(word32 ecx, word32 edx, word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, word32 dwArg00, ptr32 & ecxOut, ptr32 & edxOut, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ebx:[0..31] ecx:[0..31] edi:[0..31] edx:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0000:[0..31]
// LiveOut: eax ebp ecx edx
// Trashed: SCZDOP eax ebp ecx edx esp Top
// Preserved:
fn0041E970_entry:
l0041E970:
	word32 eax_12 = fn004110A0(0x00000017)
	byte SCZDOP_41 = cond(eax_12) | SCZDOP
	branch eax_12 == 0x00000000 l0041E98B
l0041E98B:
	Mem16[0x00429470:word32] = eax_12
	Mem18[0x0042946C:word32] = ecx
	Mem20[0x00429468:word32] = edx
	Mem22[0x00429464:word32] = ebx
	Mem24[0x00429460:word32] = esi
	Mem26[0x0042945C:word32] = edi
	Mem28[0x00429488:word16] = ss
	Mem30[0x0042947C:word16] = cs
	Mem32[0x00429458:word16] = ds
	Mem34[0x00429454:word16] = es
	Mem36[0x00429450:word16] = fs
	Mem38[0x0042944C:word16] = gs
	Mem43[0x00429480:word32] = SCZDOP_41
	Mem46[0x00429474:word32] = ebp
	Mem48[0x00429478:word32] = dwArg00
	Mem50[0x00429484:word32] = fp + 0x00000004
	Mem52[0x004293C0:word32] = 0x00010001
	Mem54[0x0042937C:word32] = Mem52[0x00429478:word32]
	Mem55[0x00429370:word32] = 0xC0000409
	Mem56[0x00429374:word32] = 0x00000001
	Mem57[0x00429380:word32] = 0x00000001
	Mem60[0x00429384:word32] = 0x00000002
	word32 edx_63 = Mem60[0x00429014:word32]
	word32 ecx_68 = Mem64[0x00429010:word32]
	word32 ebp_73
	word32 eax_72 = fn0041115E(0x00426C70, out ebp_73)
	word32 ebp_75 = Mem71[ebp_73:word32]
	ecxOut = ecx_68
	edxOut = edx_63
	ebpOut = ebp_75
	return eax_72
fn0041E970_exit:
l0041E984:
	__fastfail(0x00000002)


word32 fn0041EE30()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp esp
fn0041EE30_entry:
l0041EE30:
	GetSystemTimeAsFileTime(fp - 0x00000010)
	word32 eax_24 = GetCurrentProcessId() ^ (GetCurrentThreadId() ^ 0x00000000)
	QueryPerformanceCounter(fp - 0x00000018)
	return eax_24 ^ dwLoc18 ^ dwLoc14 ^ fp - 0x00000008
fn0041EE30_exit:


word32 fn0041EEC0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: edx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp esp
fn0041EEC0_entry:
l0041EEC0:
	branch Mem10[0x00429014:word32] == 0xBB40E64E l0041EEEC
l0041EED0:
	branch (Mem10[0x00429014:word32] & 0xFFFF0000) == 0x00000000 l0041EEEC
l0041EEEC:
	word32 eax_18 = fn0041EE30()
	word32 dwLoc08_59 = eax_18
	branch eax_18 != 0xBB40E64E l0041EF06
l0041EF06:
	branch (eax_18 & 0xFFFF0000) != 0x00000000 l0041EF22
l0041EF11:
	dwLoc08_59 = (eax_18 | 0x00004711) << 0x00000010 | eax_18
l0041EEFD:
	dwLoc08_59 = 0xBB40E64F
l0041EF22:
	Mem45[0x00429014:word32] = dwLoc08_59
	edx = ~dwLoc08_59
	Mem48[0x00429010:word32] = edx
l0041EEDC:
	Mem51[0x00429010:word32] = ~Mem10[0x00429014:word32]
l0041EF36:
	return edx
fn0041EEC0_exit:


word32 fn0041F1E0(word32 edx, word32 ebx, word32 esi, word32 edi, selector es, selector ds, ptr32 & ebxOut, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ebx:[0..31] edi:[0..31] edx:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax ebp ebx esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn0041F1E0_entry:
l0041F1E0:
	word32 ebp_123 = fp - 4
	word32 esp_101 = fp - 0x00000418
	branch Mem11[0x00429758:byte] != 0x00 l0041F310
l0041F200:
	Mem14[0x00429758:byte] = 0x01
	word32 eax_114 = fn0041F370(edx, es, ds, out edx, out ebx, out ebp_123, out esi, out edi)
	esp_101 = <invalid>
	branch eax_114 != 0x00000000 l0041F312
l0041F214:
	Mem39[esp_101 - 4:word32] = 0x00426D90
	fn0041125D()
	branch eax_114 == 0x00000000 l0041F29D
l0041F225:
	Mem46[esp_101 - 4:word32] = 0x00000104
	Mem49[esp_101 - 8:word32] = ebp_123 - 0x00000414
	Mem51[esp_101 - 12:word32] = eax_114
	fn004110B4()
	branch eax_114 == 0x00000000 l0041F29D
l0041F23E:
	Mem58[esp_101 - 4:word32] = 0x00000104
	Mem61[esp_101 - 8:word32] = ebp_123 - 0x0000020C
	Mem64[esp_101 - 12:word32] = ebp_123 - 0x00000414
	word32 esp_69 = <invalid>
	eax_114 = fn0041F660(edx, ebx, esi, edi, es, ds, Mem64[esp_101 - 12:word32], Mem64[esp_101 - 8:word32], Mem64[esp_101 - 4:word32], out edx, out ebp_123)
	esp_101 = esp_69 + 0x0000000C
	branch eax_114 == 0x00000000 l0041F29D
l0041F25D:
	Mem79[esp_69 + 0x00000008:word32] = 0x00000900
	Mem82[esp_69 + 0x00000004:word32] = 0x00000000
	Mem84[esp_69:word32] = ebp_123 - 0x0000020C
	fn004115BE()
	esp_101 = esp_69 + 0x0000000C
	branch ebp_123 != 0x0000020C l0041F312
l0041F27B:
	eax_114 = GetLastError()
	branch eax_114 != 0x00000057 l0041F29D
l0041F286:
	Mem94[esp_69 + 0x00000008:word32] = 0x00000008
	Mem97[esp_69 + 0x00000004:word32] = 0x00000000
	Mem99[esp_69:word32] = ebp_123 - 0x0000020C
	fn004115BE()
	eax_114 = ebp_123 - 0x0000020C
	esp_101 = esp_69 + 0x0000000C
	branch ebp_123 != 0x0000020C l0041F312
l0041F29D:
	word32 esp_106 = esp_101 - 4
	Mem107[esp_106:word32] = 0x00000A00
	Mem109[esp_106 - 4:word32] = 0x00000000
	Mem111[esp_106 - 8:word32] = 0x00426F44
	fn004115BE()
	esp_101 = esp_106 + 0x00000004
	branch eax_114 != 0x00000000 l0041F312
l0041F2B5:
	branch GetLastError() != 0x00000057 l0041F310
l0041F2C0:
	Mem122[esp_106:word32] = 0x00000104
	word32 eax_124 = ebp_123 - 0x00000414
	Mem126[esp_106 - 4:word32] = eax_124
	Mem128[esp_106 - 8:word32] = 0x00000000
	fn004110B4()
	esp_101 = esp_106 + 0x00000004
	branch eax_124 == 0x00000000 l0041F310
l0041F2DA:
	Mem135[esp_106:word32] = 0x00000104
	Mem138[esp_106 - 4:word32] = ebp_123 - 0x0000020C
	Mem141[esp_106 - 8:word32] = ebp_123 - 0x00000414
	word32 esp_156 = <invalid>
	esp_101 = esp_156 + 0x0000000C
	branch fn0041F660(edx, ebx, esi, edi, es, ds, Mem141[esp_106 - 8:word32], Mem141[esp_106 - 4:word32], Mem141[esp_106:word32], out edx, out ebp_123) == 0x00000000 l0041F310
l0041F2F9:
	Mem166[esp_156 + 0x00000008:word32] = 0x00000008
	Mem169[esp_156 + 0x00000004:word32] = 0x00000000
	Mem171[esp_156:word32] = ebp_123 - 0x0000020C
	fn004115BE()
	esp_101 = esp_156 + 0x0000000C
	branch ebp_123 != 0x0000020C l0041F312
l0041F310:
l0041F312:
	word32 ecx_230
	word32 edx_231
	word32 ebp_214
	word32 eax_213 = fn004113E3(Mem182[ebp_123 - 0x00000004:word32] ^ ebp_123, edx, ebx, ebp_123, esi, edi, es, ds, Mem182[esp_101 + -4:word32], out ecx_230, out edx_231, out ebp_214)
	word32 ebp_222 = Mem182[ebp_214:word32]
	ebxOut = ebx
	ebpOut = ebp_222
	return eax_213
fn0041F1E0_exit:


word32 fn0041F370(word32 edx, selector es, selector ds, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] edx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax ebp ebx edi edx esi esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn0041F370_entry:
l0041F370:
	word32 esp_150
	word32 eax_10 = Mem6[0x00429014:word32] ^ fp - 4
	fn004115BE()
	word32 edi_30 = eax_10
	branch eax_10 != 0x00000000 l0041F3D9
l0041F3A0:
	fn004115BE()
	edi_30 = eax_10
	esp_150 = fp - 0x0000022C
	branch eax_10 != 0x00000000 l0041F3D9
l0041F3B9:
	word32 eax_47 = GetLastError()
	branch eax_47 != 0x00000057 l0041F43D
l0041F3C4:
	fn004115BE()
	edi_30 = eax_47
	esp_150 = fp - 0x0000022C
	branch eax_47 == 0x00000000 l0041F43D
l0041F3D9:
	esp_150 = fp - 0x00000234
	word32 eax_68 = GetProcAddress(edi_30, 0x00426E40)
	branch eax_68 == 0x00000000 l0041F43D
l0041F3EB:
	esp_150 = fp - 0x0000023C
	word32 eax_77 = GetProcAddress(edi_30, 0x00426E50)
	branch eax_77 == 0x00000000 l0041F43D
l0041F3FD:
	esp_150 = fp - 0x00000244
	word32 eax_86 = GetProcAddress(edi_30, 0x00426E64)
	branch eax_86 == 0x00000000 l0041F43D
l0041F413:
	fn00411366()
	edx = <invalid>
	branch eax_68() == 0x00000000 l0041F450
l0041F450:
	fn00411366()
	word32 eax_133 = eax_77()
	fn00411366()
	eax_86()
	FreeLibrary(edi_30)
	word16 si_169 = SLICE(eax_133, word16, 0)
	edx = <invalid>
	esp_150 = fp - 0x00000278
	branch eax_133 != 0x00000000 l0041F43D
l0041F4A9:
	branch dwLoc0220 != 0x00000001 l0041F43D
l0041F4B2:
	branch false l0041F43D
l0041F4BD:
	edx = 0x00000104
	branch false l0041F43D
l0041F4CA:
	word32 ecx_167 = 0x00000103
	branch wLoc0A != si_169 l0041F43D
l0041F4DE:
	branch wLoc0C == 0x005C l0041F4EF
l0041F4E5:
	ecx_167 = 0x00000104
l0041F4EF:
	branch ~ecx_167 <u 0x00000012 l0041F43D
l0041F4FC:
	branch ecx_167 >u 0xFFFFFF0D l0041F43D
l0041F50A:
	Mem190[fp - 0x00000210 + ecx_167 * 0x00000002:word32] = Mem187[0x00426D6C:word32]
	Mem192[fp - 0x0000020C + ecx_167 * 0x00000002:word32] = Mem190[0x00426D70:word32]
	Mem194[fp - 0x00000208 + ecx_167 * 0x00000002:word32] = Mem192[0x00426D74:word32]
	Mem196[fp - 0x00000204 + ecx_167 * 0x00000002:word32] = Mem194[0x00426D78:word32]
	Mem198[fp - 0x00000200 + ecx_167 * 0x00000002:word32] = Mem196[0x00426D7C:word32]
	Mem200[fp - 0x000001FC + ecx_167 * 0x00000002:word32] = Mem198[0x00426D80:word32]
	Mem202[fp - 0x000001F8 + ecx_167 * 0x00000002:word32] = Mem200[0x00426D84:word32]
	Mem204[fp - 0x000001F4 + ecx_167 * 0x00000002:word32] = Mem202[0x00426D88:word32]
	Mem209[fp - 0x000001F0 + ecx_167 * 0x00000002:word16] = Mem204[0x00426D8C:word16]
	fn004115BE()
	branch fp != 0x00000210 l0041F5B3
l0041F594:
	branch GetLastError() != 0x00000057 l0041F5B3
l0041F59F:
	fn004115BE()
l0041F5B3:
	word32 ebp_277
	word32 edx_279
	word32 ecx_407
	word32 eax_276 = fn004113E3(eax_10 ^ fp - 4, 0x00000104, dwLoc0214, fp - 4, dwLoc0214, edi_30, es, ds, dwLoc0214, out ecx_407, out edx_279, out ebp_277)
	word32 ebp_285 = Mem236[ebp_277:word32]
	edxOut = edx_279
	ebxOut = dwLoc0214
	ebpOut = ebp_285
	esiOut = dwLoc0214
	ediOut = edi_30
	return eax_276
l0041F436:
	FreeLibrary(edi_30)
	esp_150 = fp - 0x0000025C
l0041F43D:
	word32 esp_293 = esp_150 + 4
	word32 edi_292 = Mem291[esp_150:word32]
	word32 esi_294 = Mem291[esp_293:word32]
	word32 ebx_297 = Mem291[esp_293 + 4:word32]
	word32 ebp_314
	word32 edx_316
	word32 ecx_406
	word32 eax_313 = fn004113E3(eax_10 ^ fp - 4, edx, ebx_297, fp - 4, esi_294, edi_292, es, ds, Mem291[esp_293 + 4:word32], out ecx_406, out edx_316, out ebp_314)
	word32 ebp_322 = Mem291[ebp_314:word32]
	edxOut = edx_316
	ebxOut = ebx_297
	ebpOut = ebp_322
	esiOut = esi_294
	ediOut = edi_292
	return eax_313
fn0041F370_exit:


word32 fn0041F660(word32 edx, word32 ebx, word32 esi, word32 edi, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & edxOut, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ebx:[0..31] edi:[0..31] edx:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: eax ebp edx esp
// Trashed: SCZO eax ebp ecx edx esp Top
// Preserved: esi
fn0041F660_entry:
l0041F660:
	word32 eax_10 = Mem6[0x00429014:word32] ^ fp - 4
	branch fn0041151E(dwArg04, fp - 0x00000010, 0x00000003, fp - 0x00000610, 0x00000100, fp - 0x00000410, 0x00000100, fp - 0x00000210, 0x00000100) != 0x00000000 l0041F722
l0041F6B1:
	branch fn0041170D(fp - 0x00000410, 0x00000009, 0x00426F2C) != 0x00000000 l0041F722
l0041F6CB:
	branch fn0041170D(fp - 0x00000210, 0x00000004, 0x00426F20) != 0x00000000 l0041F722
l0041F6E5:
	branch fn004112C6(dwArg08, dwArg0C, fp - 0x00000010, fp - 0x00000610, fp - 0x00000410, fp - 0x00000210) != 0x00000000 l0041F722
l0041F722:
	word32 ebp_121
	word32 edx_123
	word32 ecx_192
	word32 eax_120 = fn004113E3(eax_10 ^ fp - 4, edx, ebx, fp - 4, esi, edi, es, ds, esi, out ecx_192, out edx_123, out ebp_121)
	word32 ebp_129 = Mem93[ebp_121:word32]
	edxOut = edx_123
	ebpOut = ebp_129
	return eax_120
l0041F70E:
	word32 ebp_139
	word32 edx_141
	word32 ecx_193
	word32 eax_138 = fn004113E3(eax_10 ^ fp - 4, edx, ebx, fp - 4, esi, edi, es, ds, esi, out ecx_193, out edx_141, out ebp_139)
	word32 ebp_147 = Mem86[ebp_139:word32]
	edxOut = edx_141
	ebpOut = ebp_147
	return eax_138
fn0041F660_exit:


word32 fn0041FE70(selector es, selector ds, byte bArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..7]
// LiveOut: ebp esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn0041FE70_entry:
l0041FE70:
	word32 ebp_103 = fp - 4
	word32 esp_115 = fp - 0x000000D4
	word32 edi_19 = fp - 0x000000C8
	word32 ecx_20 = 0x00000031
l0041FE8C:
	branch ecx_20 == 0x00000000 l0041FE8E
l0041FE8E:
	word32 edx_25
	fn00411460(0x0042C02A, out edx_25)
	word32 eax_32 = (int32) bArg04
	branch eax_32 >u 0x0000007A || eax_32 <u 0x00000020 l004202DC
l0041FEBE:
	switch (eax_32 - 0x00000020) { l004202CD l004202DC l004202DC l004202DC l004202DC l004202DC l004202DC l004202DC l004202DC l004202DC l004202DC l004202DC l004202DC l004202DC l004202DC l004202DC l004202DC l004202DC l004202DC l004202DC l004202DC l004202DC l004202DC l004202DC l004202DC l004202DC l004202DC l004202DC l004202DC l004202DC l004202DC l004202DC l004202DC l0041FED2 l0041FEE6 l0041FEFA l0041FF0E l0041FF22 l0041FF36 l0041FF4A l0041FF5E l0041FF72 l0041FF86 l0041FF9A l0041FFAE l0041FFC2 l0041FFD6 l0041FFEA l0041FFFE l00420012 l00420026 l0042003A l0042004E l00420062 l00420076 l0042008A l0042009E l004200B2 l004200C6 l004202DC l004202DC l004202DC l004202DC l004202DC l004202DC l004200DA l004200EE l00420102 l00420116 l0042012A l0042013E l00420152 l00420166 l0042017A l0042018E l004201A2 l004201B6 l004201CA l004201DE l004201F2 l00420206 l0042021A l0042022E l00420242 l00420256 l00420267 l00420278 l00420289 l0042029A l004202AB l004202BC }
l004202BC:
	word32 esp_58 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x004260C8)
	esp_115 = esp_58 + 0x00000004
l004202AB:
	word32 esp_75 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x004260BC)
	esp_115 = esp_75 + 0x00000004
l0042029A:
	word32 esp_92 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x004260B0)
	esp_115 = esp_92 + 0x00000004
l00420289:
	word32 esp_109 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x004260A4)
	esp_115 = esp_109 + 0x00000004
l00420278:
	word32 esp_126 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x00426098)
	esp_115 = esp_126 + 0x00000004
l00420267:
	word32 esp_143 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x0042608C)
	esp_115 = esp_143 + 0x00000004
l00420256:
	word32 esp_160 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x00426080)
	esp_115 = esp_160 + 0x00000004
l00420242:
	word32 esp_177 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x00426074)
	esp_115 = esp_177 + 0x00000004
l0042022E:
	word32 esp_194 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x00426068)
	esp_115 = esp_194 + 0x00000004
l0042021A:
	word32 esp_211 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x0042605C)
	esp_115 = esp_211 + 0x00000004
l00420206:
	word32 esp_228 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x00426050)
	esp_115 = esp_228 + 0x00000004
l004201F2:
	word32 esp_245 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x00426044)
	esp_115 = esp_245 + 0x00000004
l004201DE:
	word32 esp_262 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x00426038)
	esp_115 = esp_262 + 0x00000004
l004201CA:
	word32 esp_279 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x0042602C)
	esp_115 = esp_279 + 0x00000004
l004201B6:
	word32 esp_296 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x00426020)
	esp_115 = esp_296 + 0x00000004
l004201A2:
	word32 esp_313 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x00426014)
	esp_115 = esp_313 + 0x00000004
l0042018E:
	word32 esp_330 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x00426008)
	esp_115 = esp_330 + 0x00000004
l0042017A:
	word32 esp_347 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x00425FFC)
	esp_115 = esp_347 + 0x00000004
l00420166:
	word32 esp_364 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x00425FF0)
	esp_115 = esp_364 + 0x00000004
l00420152:
	word32 esp_381 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x00425FE4)
	esp_115 = esp_381 + 0x00000004
l0042013E:
	word32 esp_398 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x00425FD8)
	esp_115 = esp_398 + 0x00000004
l0042012A:
	word32 esp_415 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x00425FCC)
	esp_115 = esp_415 + 0x00000004
l00420116:
	word32 esp_432 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x00425FC0)
	esp_115 = esp_432 + 0x00000004
l00420102:
	word32 esp_449 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x00425FB4)
	esp_115 = esp_449 + 0x00000004
l004200EE:
	word32 esp_466 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x00425FA8)
	esp_115 = esp_466 + 0x00000004
l004200DA:
	word32 esp_483 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x00425F9C)
	esp_115 = esp_483 + 0x00000004
l004200C6:
	word32 esp_500 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x00425F90)
	esp_115 = esp_500 + 0x00000004
l004200B2:
	word32 esp_517 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x00425F84)
	esp_115 = esp_517 + 0x00000004
l0042009E:
	word32 esp_534 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x00425F78)
	esp_115 = esp_534 + 0x00000004
l0042008A:
	word32 esp_551 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x00425F6C)
	esp_115 = esp_551 + 0x00000004
l00420076:
	word32 esp_568 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x00425F60)
	esp_115 = esp_568 + 0x00000004
l00420062:
	word32 esp_585 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x00425F54)
	esp_115 = esp_585 + 0x00000004
l0042004E:
	word32 esp_602 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x00425F48)
	esp_115 = esp_602 + 0x00000004
l0042003A:
	word32 esp_619 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x00425F3C)
	esp_115 = esp_619 + 0x00000004
l00420026:
	word32 esp_636 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x00425F30)
	esp_115 = esp_636 + 0x00000004
l00420012:
	word32 esp_653 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x00425F24)
	esp_115 = esp_653 + 0x00000004
l0041FFFE:
	word32 esp_670 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x00425F18)
	esp_115 = esp_670 + 0x00000004
l0041FFEA:
	word32 esp_687 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x00425F0C)
	esp_115 = esp_687 + 0x00000004
l0041FFD6:
	word32 esp_704 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x00425F00)
	esp_115 = esp_704 + 0x00000004
l0041FFC2:
	word32 esp_721 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x00425EF4)
	esp_115 = esp_721 + 0x00000004
l0041FFAE:
	word32 esp_738 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x00425EE8)
	esp_115 = esp_738 + 0x00000004
l0041FF9A:
	word32 esp_755 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x00425EDC)
	esp_115 = esp_755 + 0x00000004
l0041FF86:
	word32 esp_772 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x00425ED0)
	esp_115 = esp_772 + 0x00000004
l0041FF72:
	word32 esp_789 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x00425EC4)
	esp_115 = esp_789 + 0x00000004
l0041FF5E:
	word32 esp_806 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x00425EB8)
	esp_115 = esp_806 + 0x00000004
l0041FF4A:
	word32 esp_823 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x00425EAC)
	esp_115 = esp_823 + 0x00000004
l0041FF36:
	word32 esp_840 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x00425EA0)
	esp_115 = esp_840 + 0x00000004
l0041FF22:
	word32 esp_857 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x00425E94)
	esp_115 = esp_857 + 0x00000004
l0041FF0E:
	word32 esp_874 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x00425E88)
	esp_115 = esp_874 + 0x00000004
l0041FEFA:
	word32 esp_891 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x00425E7C)
	esp_115 = esp_891 + 0x00000004
l0041FEE6:
	word32 esp_908 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x00425E70)
	esp_115 = esp_908 + 0x00000004
l0041FED2:
	word32 esp_925 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x00425E64)
	esp_115 = esp_925 + 0x00000004
l004202CD:
	word32 esp_942 = <invalid>
	ebp_103 = fn004110D2(es, ds, 0x004260D4)
	esp_115 = esp_942 + 0x00000004
l004202DC:
	fn00411488(es, ds, Mem950[esp_115 + 0x000000CC:word32])
	return Mem950[ebp_103:word32]
fn0041FE70_exit:
l0041FE8C_1:
	Mem977[edi_19:word32] = 0xCCCCCCCC
	edi_19 = edi_19 + 0x00000004
	ecx_20 = ecx_20 - 0x00000001


word32 fn00420430(selector es, selector ds, word128 xmm0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] xmm0:[0..127]
// LiveOut: ebp esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn00420430_entry:
l00420430:
	word32 edi_1197 = fp - 0x000000D0
	word32 ecx_1200 = 0x00000030
l0042045A:
	branch ecx_1200 == 0x00000000 l0042045C
l0042045C:
	Mem42[fs:0x00000000:word32] = fp - 0x00000010
	word32 edx_1327
	fn00411460(0x0042C02A, out edx_1327)
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x00425E64), byte, 0) == 0x00000000 l004204A2
l004204A2:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x00425E70), byte, 0) == 0x00000000 l004204C6
l004204C6:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x00425E7C), byte, 0) == 0x00000000 l004204EA
l004204EA:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x00425E88), byte, 0) == 0x00000000 l0042050E
l0042050E:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x00425E94), byte, 0) == 0x00000000 l00420532
l00420532:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x00425EA0), byte, 0) == 0x00000000 l00420556
l00420556:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x00425EAC), byte, 0) == 0x00000000 l0042057A
l0042057A:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x00425EB8), byte, 0) == 0x00000000 l0042059E
l0042059E:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x00425EC4), byte, 0) == 0x00000000 l004205C2
l004205C2:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x00425ED0), byte, 0) == 0x00000000 l004205E6
l004205E6:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x00425EDC), byte, 0) == 0x00000000 l0042060A
l0042060A:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x00425EE8), byte, 0) == 0x00000000 l0042062E
l0042062E:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x00425EF4), byte, 0) == 0x00000000 l00420652
l00420652:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x00425F00), byte, 0) == 0x00000000 l00420676
l00420676:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x00425F0C), byte, 0) == 0x00000000 l0042069A
l0042069A:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x00425F18), byte, 0) == 0x00000000 l004206BE
l004206BE:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x00425F24), byte, 0) == 0x00000000 l004206E2
l004206E2:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x00425F30), byte, 0) == 0x00000000 l00420706
l00420706:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x00425F3C), byte, 0) == 0x00000000 l0042072A
l0042072A:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x00425F48), byte, 0) == 0x00000000 l0042074E
l0042074E:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x00425F54), byte, 0) == 0x00000000 l00420772
l00420772:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x00425F60), byte, 0) == 0x00000000 l00420796
l00420796:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x00425F6C), byte, 0) == 0x00000000 l004207BA
l004207BA:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x00425F78), byte, 0) == 0x00000000 l004207DE
l004207DE:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x00425F84), byte, 0) == 0x00000000 l00420802
l00420802:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x00425F90), byte, 0) == 0x00000000 l00420826
l00420826:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x00425F9C), byte, 0) == 0x00000000 l0042084A
l0042084A:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x00425FA8), byte, 0) == 0x00000000 l0042086E
l0042086E:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x00425FB4), byte, 0) == 0x00000000 l00420892
l00420892:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x00425FC0), byte, 0) == 0x00000000 l004208B6
l004208B6:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x00425FCC), byte, 0) == 0x00000000 l004208DA
l004208DA:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x00425FD8), byte, 0) == 0x00000000 l004208FE
l004208FE:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x00425FE4), byte, 0) == 0x00000000 l00420922
l00420922:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x00425FF0), byte, 0) == 0x00000000 l00420946
l00420946:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x00425FFC), byte, 0) == 0x00000000 l0042096A
l0042096A:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x00426008), byte, 0) == 0x00000000 l0042098E
l0042098E:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x00426014), byte, 0) == 0x00000000 l004209B2
l004209B2:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x00426020), byte, 0) == 0x00000000 l004209D6
l004209D6:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x0042602C), byte, 0) == 0x00000000 l004209FA
l004209FA:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x00426038), byte, 0) == 0x00000000 l00420A1E
l00420A1E:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x00426044), byte, 0) == 0x00000000 l00420A42
l00420A42:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x00426050), byte, 0) == 0x00000000 l00420A66
l00420A66:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x0042605C), byte, 0) == 0x00000000 l00420A8A
l00420A8A:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x00426068), byte, 0) == 0x00000000 l00420AAE
l00420AAE:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x00426074), byte, 0) == 0x00000000 l00420AD2
l00420AD2:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x00426080), byte, 0) == 0x00000000 l00420AF6
l00420AF6:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x0042608C), byte, 0) == 0x00000000 l00420B1A
l00420B1A:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x00426098), byte, 0) == 0x00000000 l00420B3E
l00420B3E:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x004260A4), byte, 0) == 0x00000000 l00420B62
l00420B62:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x004260B0), byte, 0) == 0x00000000 l00420B83
l00420B83:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x004260BC), byte, 0) == 0x00000000 l00420BA4
l00420BA4:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x004260C8), byte, 0) == 0x00000000 l00420BC5
l00420BC5:
	branch (word32) SLICE((uint32) (uint8) fn004110F5(es, ds, 0x004260D4), byte, 0) == 0x00000000 l00420BE4
l00420BDD:
	Mem1063[0x00429318:byte] = 0x20
l00420BBC:
	Mem1064[0x00429318:byte] = 0x7A
l00420B9B:
	Mem1065[0x00429318:byte] = 0x79
l00420B7A:
	Mem1066[0x00429318:byte] = 0x78
l00420B56:
	Mem1067[0x00429318:byte] = 0x77
l00420B32:
	Mem1068[0x00429318:byte] = 0x76
l00420B0E:
	Mem1069[0x00429318:byte] = 0x75
l00420AEA:
	Mem1070[0x00429318:byte] = 0x74
l00420AC6:
	Mem1071[0x00429318:byte] = 0x73
l00420AA2:
	Mem1072[0x00429318:byte] = 0x72
l00420A7E:
	Mem1073[0x00429318:byte] = 0x71
l00420A5A:
	Mem1074[0x00429318:byte] = 0x70
l00420A36:
	Mem1075[0x00429318:byte] = 0x6F
l00420A12:
	Mem1076[0x00429318:byte] = 0x6E
l004209EE:
	Mem1077[0x00429318:byte] = 0x6D
l004209CA:
	Mem1078[0x00429318:byte] = 0x6C
l004209A6:
	Mem1079[0x00429318:byte] = 0x6B
l00420982:
	Mem1080[0x00429318:byte] = 0x6A
l0042095E:
	Mem1081[0x00429318:byte] = 0x69
l0042093A:
	Mem1082[0x00429318:byte] = 0x68
l00420916:
	Mem1083[0x00429318:byte] = 0x67
l004208F2:
	Mem1084[0x00429318:byte] = 0x66
l004208CE:
	Mem1085[0x00429318:byte] = 0x65
l004208AA:
	Mem1086[0x00429318:byte] = 0x64
l00420886:
	Mem1087[0x00429318:byte] = 0x63
l00420862:
	Mem1088[0x00429318:byte] = 0x62
l0042083E:
	Mem1089[0x00429318:byte] = 0x61
l0042081A:
	Mem1090[0x00429318:byte] = 0x5A
l004207F6:
	Mem1091[0x00429318:byte] = 0x59
l004207D2:
	Mem1092[0x00429318:byte] = 0x58
l004207AE:
	Mem1093[0x00429318:byte] = 0x57
l0042078A:
	Mem1094[0x00429318:byte] = 0x56
l00420766:
	Mem1095[0x00429318:byte] = 0x55
l00420742:
	Mem1096[0x00429318:byte] = 0x54
l0042071E:
	Mem1097[0x00429318:byte] = 0x53
l004206FA:
	Mem1098[0x00429318:byte] = 0x52
l004206D6:
	Mem1099[0x00429318:byte] = 0x51
l004206B2:
	Mem1100[0x00429318:byte] = 0x50
l0042068E:
	Mem1101[0x00429318:byte] = 0x4F
l0042066A:
	Mem1102[0x00429318:byte] = 0x4E
l00420646:
	Mem1103[0x00429318:byte] = 0x4D
l00420622:
	Mem1104[0x00429318:byte] = 0x4C
l004205FE:
	Mem1105[0x00429318:byte] = 0x4B
l004205DA:
	Mem1106[0x00429318:byte] = 0x4A
l004205B6:
	Mem1107[0x00429318:byte] = 0x49
l00420592:
	Mem1108[0x00429318:byte] = 0x48
l0042056E:
	Mem1109[0x00429318:byte] = 0x47
l0042054A:
	Mem1110[0x00429318:byte] = 0x46
l00420526:
	Mem1111[0x00429318:byte] = 0x45
l00420502:
	Mem1112[0x00429318:byte] = 0x44
l004204DE:
	Mem1113[0x00429318:byte] = 0x43
l004204BA:
	Mem1114[0x00429318:byte] = 0x42
l00420496:
	Mem1115[0x00429318:byte] = 0x41
l00420BE4:
	word32 esp_1143 = <invalid>
	word32 ebp_1137
	operator <<(fn004111C7(es, ds, xmm0, &cout, SLICE((word32) Mem1119[0x00429318:byte], byte, 0), out ebp_1137), Mem1127[esp_1143 + 0x00000008:(ptr32 (fn (ptr32 basic_ostream) ((ptr32 (struct "std::basic_ostream")), (ptr32 basic_ostream))))])
	fn00411488(es, ds, Mem1127[esp_1143 + 0x00000008:word32])
	Mem1160[ebp_1137 - 0x00000004:word32] = 0xFFFFFFFF
	word32 ebp_1163
	word32 edx_1328
	fn00411406(es, ds, out edx_1328, out ebp_1163)
	Mem1176[fs:0x00000000:word32] = Mem1160[ebp_1163 - 0x0000000C:word32]
	word32 esp_1169 = <invalid>
	fn00411488(es, ds, Mem1176[esp_1169 + 0x000000D8:word32])
	return Mem1176[ebp_1163:word32]
fn00420430_exit:
l0042045A_1:
	Mem1198[edi_1197:word32] = 0xCCCCCCCC
	edi_1197 = edi_1197 + 0x00000004
	ecx_1200 = ecx_1200 - 0x00000001


